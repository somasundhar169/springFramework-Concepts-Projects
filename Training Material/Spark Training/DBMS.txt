SQL(STRUCTURED QUERY LANGUAGE-COMMUNICATE WITH A DATABASE) COMMANDS CATEGORIES::

1.DDL(Data Definition Language)
Create table,alter table,drop table,truncate table,rename table

2.DML(Data Manipulation Language)
insert,update,delete

3.DCL(Data Control Language)
grant , revoke

4.TCL(Transaction Control Language)
commit(save),rollback(undo),savepoint(bookmark)

5.DQL(Data Query Language)
select command


===============================================================================
Datatypes::

**INT
TINYINT
**FLOAT(M,D)=== 78000.50
DOUBLE(M,D)
DECIMAL(M,D)
**DATE
**DATETIME
TIMESTAMP
TIME 
YEAR(M)
**CHAR(M) - A fixed-length string between 1 and 255 characters 
**VARCHAR(M) - A variable-length string between 1 and 255 characters 
BLOB or TEXT -- Images or pdf doc xls files
TINYBLOB
MEDIUMBLOB
LONGBLOB
ENUM ex: days-mon,tue,wed,thu,fri,sat,sun

ex: dress_size-small,medium,large,x-large,
currency-dollar,euro,indianrupee.......
===============================================================================================

mysql> tee d:\hexsep1.txt
mysql> #database: collection of tables,collection of users
mysql> 
mysql> create database hexasep2022;
Query OK, 1 row affected (0.08 sec)

mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| acl_virtual        |
| chargebee          |
| cts_virtual        |
| fsidemos           |
| hexafoundation     |
| hexasep2022        |
| hexaware           |
| hexaware2022       |
| hexaware_segue     |
| hexaware_segue_13  |
| hexaware_segue_3   |
| hexaware_segue_33  |
| mysql              |
| performance_schema |
| r                  |
| solverminds        |
| test               |
+--------------------+
18 rows in set (0.74 sec)

mysql> use hexasep2022;
Database changed
mysql> create table hexa_employee(eno int,ename varchar(20),salary float,
    -> dept varchar(20));
Query OK, 0 rows affected (0.10 sec)

mysql> desc hexa_employee;
+--------+-------------+------+-----+---------+-------+
| Field  | Type        | Null | Key | Default | Extra |
+--------+-------------+------+-----+---------+-------+
| eno    | int(11)     | YES  |     | NULL    |       |
| ename  | varchar(20) | YES  |     | NULL    |       |
| salary | float       | YES  |     | NULL    |       |
| dept   | varchar(20) | YES  |     | NULL    |       |
+--------+-------------+------+-----+---------+-------+
4 rows in set (0.04 sec)

mysql> describe hexa_employee;
+--------+-------------+------+-----+---------+-------+
| Field  | Type        | Null | Key | Default | Extra |
+--------+-------------+------+-----+---------+-------+
| eno    | int(11)     | YES  |     | NULL    |       |
| ename  | varchar(20) | YES  |     | NULL    |       |
| salary | float       | YES  |     | NULL    |       |
| dept   | varchar(20) | YES  |     | NULL    |       |
+--------+-------------+------+-----+---------+-------+
4 rows in set (0.03 sec)

mysql>  select * from hexa_employee;
Empty set (0.00 sec)

mysql> insert into hexa_employee values(1001,'Devi',34320.40,'HR');
Query OK, 1 row affected (0.03 sec)

mysql>  insert into hexa_employee values(1002,'Abi',94320.40,'Operations');
Query OK, 1 row affected (0.01 sec)

mysql>  insert into hexa_employee values(1003,'Raja',64320.40,'HR'),
    ->  (1004,'Thananya',59436.68,'Accounting'),
    ->  (1005,'Kanishka',45904.67,'HR');
Query OK, 3 rows affected (0.01 sec)
Records: 3  Duplicates: 0  Warnings: 0

mysql>  select * from hexa_employee;
+------+----------+---------+------------+
| eno  | ename    | salary  | dept       |
+------+----------+---------+------------+
| 1001 | Devi     | 34320.4 | HR         |
| 1002 | Abi      | 94320.4 | Operations |
| 1003 | Raja     | 64320.4 | HR         |
| 1004 | Thananya | 59436.7 | Accounting |
| 1005 | Kanishka | 45904.7 | HR         |
+------+----------+---------+------------+
5 rows in set (0.00 sec)

mysql> insert into hexa_employee values(1006,'Daya',65320.40,null);
Query OK, 1 row affected (0.01 sec)

mysql>  insert into hexa_employee values(1007,'Surya',null,null);
Query OK, 1 row affected (0.00 sec)

mysql> insert into hexa_employee(eno,ename) values(1008,'Sara');
Query OK, 1 row affected (0.01 sec)

mysql>  select * from hexa_employee;
+------+----------+---------+------------+
| eno  | ename    | salary  | dept       |
+------+----------+---------+------------+
| 1001 | Devi     | 34320.4 | HR         |
| 1002 | Abi      | 94320.4 | Operations |
| 1003 | Raja     | 64320.4 | HR         |
| 1004 | Thananya | 59436.7 | Accounting |
| 1005 | Kanishka | 45904.7 | HR         |
| 1006 | Daya     | 65320.4 | NULL       |
| 1007 | Surya    |    NULL | NULL       |
| 1008 | Sara     |    NULL | NULL       |
+------+----------+---------+------------+
8 rows in set (0.00 sec)

mysql> insert into hexa_employee values(1001,'Devi',34320.40,'HR');
Query OK, 1 row affected (0.01 sec)

mysql> #above table is inconsistent state bcos of duplicate eno!
mysql> 
mysql>  select * from hexa_employee;
+------+----------+---------+------------+
| eno  | ename    | salary  | dept       |
+------+----------+---------+------------+
| 1001 | Devi     | 34320.4 | HR         |
| 1002 | Abi      | 94320.4 | Operations |
| 1003 | Raja     | 64320.4 | HR         |
| 1004 | Thananya | 59436.7 | Accounting |
| 1005 | Kanishka | 45904.7 | HR         |
| 1006 | Daya     | 65320.4 | NULL       |
| 1007 | Surya    |    NULL | NULL       |
| 1008 | Sara     |    NULL | NULL       |
| 1001 | Devi     | 34320.4 | HR         |
+------+----------+---------+------------+
9 rows in set (0.00 sec)

mysql> insert into hexa_employee(ename,dept,eno,salary) values('Harini','Finance',1009,45804.50);
Query OK, 1 row affected (0.04 sec)

mysql> #above one is interchanging the column order
mysql> 
mysql> show tables;
+-----------------------+
| Tables_in_hexasep2022 |
+-----------------------+
| hexa_employee         |
+-----------------------+
1 row in set (0.00 sec)

mysql>  select * from hexa_employee;
+------+----------+---------+------------+
| eno  | ename    | salary  | dept       |
+------+----------+---------+------------+
| 1001 | Devi     | 34320.4 | HR         |
| 1002 | Abi      | 94320.4 | Operations |
| 1003 | Raja     | 64320.4 | HR         |
| 1004 | Thananya | 59436.7 | Accounting |
| 1005 | Kanishka | 45904.7 | HR         |
| 1006 | Daya     | 65320.4 | NULL       |
| 1007 | Surya    |    NULL | NULL       |
| 1008 | Sara     |    NULL | NULL       |
| 1001 | Devi     | 34320.4 | HR         |
| 1009 | Harini   | 45804.5 | Finance    |
+------+----------+---------+------------+
10 rows in set (0.00 sec)

mysql> update hexa_employee set dept='Training' where eno=1006;
Query OK, 1 row affected (0.05 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql>  select * from hexa_employee;
+------+----------+---------+------------+
| eno  | ename    | salary  | dept       |
+------+----------+---------+------------+
| 1001 | Devi     | 34320.4 | HR         |
| 1002 | Abi      | 94320.4 | Operations |
| 1003 | Raja     | 64320.4 | HR         |
| 1004 | Thananya | 59436.7 | Accounting |
| 1005 | Kanishka | 45904.7 | HR         |
| 1006 | Daya     | 65320.4 | Training   |
| 1007 | Surya    |    NULL | NULL       |
| 1008 | Sara     |    NULL | NULL       |
| 1001 | Devi     | 34320.4 | HR         |
| 1009 | Harini   | 45804.5 | Finance    |
+------+----------+---------+------------+
10 rows in set (0.00 sec)

mysql> update hexa_employee set ename='Dhayanithi' where eno=1006;
Query OK, 1 row affected (0.01 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql>  select * from hexa_employee;
+------+------------+---------+------------+
| eno  | ename      | salary  | dept       |
+------+------------+---------+------------+
| 1001 | Devi       | 34320.4 | HR         |
| 1002 | Abi        | 94320.4 | Operations |
| 1003 | Raja       | 64320.4 | HR         |
| 1004 | Thananya   | 59436.7 | Accounting |
| 1005 | Kanishka   | 45904.7 | HR         |
| 1006 | Dhayanithi | 65320.4 | Training   |
| 1007 | Surya      |    NULL | NULL       |
| 1008 | Sara       |    NULL | NULL       |
| 1001 | Devi       | 34320.4 | HR         |
| 1009 | Harini     | 45804.5 | Finance    |
+------+------------+---------+------------+
10 rows in set (0.00 sec)

mysql> update hexa_employee set salary=31300.50,dept='Testing'
    -> where eno=1007;
Query OK, 1 row affected (0.01 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql> update hexa_employee set salary=89300.50,dept='Training'
    -> where eno=1008;
Query OK, 1 row affected (0.01 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql>  select * from hexa_employee;
+------+------------+---------+------------+
| eno  | ename      | salary  | dept       |
+------+------------+---------+------------+
| 1001 | Devi       | 34320.4 | HR         |
| 1002 | Abi        | 94320.4 | Operations |
| 1003 | Raja       | 64320.4 | HR         |
| 1004 | Thananya   | 59436.7 | Accounting |
| 1005 | Kanishka   | 45904.7 | HR         |
| 1006 | Dhayanithi | 65320.4 | Training   |
| 1007 | Surya      | 31300.5 | Testing    |
| 1008 | Sara       | 89300.5 | Training   |
| 1001 | Devi       | 34320.4 | HR         |
| 1009 | Harini     | 45804.5 | Finance    |
+------+------------+---------+------------+
10 rows in set (0.00 sec)

mysql> update hexa_employee set salary=salary+10000;#i=i+1
Query OK, 10 rows affected (0.02 sec)
Rows matched: 10  Changed: 10  Warnings: 0

mysql>  select * from hexa_employee;
+------+------------+---------+------------+
| eno  | ename      | salary  | dept       |
+------+------------+---------+------------+
| 1001 | Devi       | 44320.4 | HR         |
| 1002 | Abi        |  104320 | Operations |
| 1003 | Raja       | 74320.4 | HR         |
| 1004 | Thananya   | 69436.7 | Accounting |
| 1005 | Kanishka   | 55904.7 | HR         |
| 1006 | Dhayanithi | 75320.4 | Training   |
| 1007 | Surya      | 41300.5 | Testing    |
| 1008 | Sara       | 99300.5 | Training   |
| 1001 | Devi       | 44320.4 | HR         |
| 1009 | Harini     | 55804.5 | Finance    |
+------+------------+---------+------------+
10 rows in set (0.00 sec)

mysql>  select eno,dept,salary from hexa_employee;
+------+------------+---------+
| eno  | dept       | salary  |
+------+------------+---------+
| 1001 | HR         | 44320.4 |
| 1002 | Operations |  104320 |
| 1003 | HR         | 74320.4 |
| 1004 | Accounting | 69436.7 |
| 1005 | HR         | 55904.7 |
| 1006 | Training   | 75320.4 |
| 1007 | Testing    | 41300.5 |
| 1008 | Training   | 99300.5 |
| 1001 | HR         | 44320.4 |
| 1009 | Finance    | 55804.5 |
+------+------------+---------+
10 rows in set (0.00 sec)

mysql>  select * from hexa_employee where eno=1001;
+------+-------+---------+------+
| eno  | ename | salary  | dept |
+------+-------+---------+------+
| 1001 | Devi  | 44320.4 | HR   |
| 1001 | Devi  | 44320.4 | HR   |
+------+-------+---------+------+
2 rows in set (0.00 sec)

mysql>  select * from hexa_employee where eno=1002;
+------+-------+--------+------------+
| eno  | ename | salary | dept       |
+------+-------+--------+------------+
| 1002 | Abi   | 104320 | Operations |
+------+-------+--------+------------+
1 row in set (0.00 sec)

mysql>  select eno,dept,salary from hexa_employee where eno=1001;
+------+------+---------+
| eno  | dept | salary  |
+------+------+---------+
| 1001 | HR   | 44320.4 |
| 1001 | HR   | 44320.4 |
+------+------+---------+
2 rows in set (0.00 sec)

mysql>  select * from hexa_employee where ename='Surya';
+------+-------+---------+---------+
| eno  | ename | salary  | dept    |
+------+-------+---------+---------+
| 1007 | Surya | 41300.5 | Testing |
+------+-------+---------+---------+
1 row in set (0.00 sec)

mysql>  select * from hexa_employee where ename='surya';
+------+-------+---------+---------+
| eno  | ename | salary  | dept    |
+------+-------+---------+---------+
| 1007 | Surya | 41300.5 | Testing |
+------+-------+---------+---------+
1 row in set (0.00 sec)

mysql> select * from hexa_employee where salary > 60000;
+------+------------+---------+------------+
| eno  | ename      | salary  | dept       |
+------+------------+---------+------------+
| 1002 | Abi        |  104320 | Operations |
| 1003 | Raja       | 74320.4 | HR         |
| 1004 | Thananya   | 69436.7 | Accounting |
| 1006 | Dhayanithi | 75320.4 | Training   |
| 1008 | Sara       | 99300.5 | Training   |
+------+------------+---------+------------+
5 rows in set (0.01 sec)

mysql> select * from hexa_employee where salary < 60000;
+------+----------+---------+---------+
| eno  | ename    | salary  | dept    |
+------+----------+---------+---------+
| 1001 | Devi     | 44320.4 | HR      |
| 1005 | Kanishka | 55904.7 | HR      |
| 1007 | Surya    | 41300.5 | Testing |
| 1001 | Devi     | 44320.4 | HR      |
| 1009 | Harini   | 55804.5 | Finance |
+------+----------+---------+---------+
5 rows in set (0.00 sec)

mysql>  select * from hexa_employee where dept != 'HR';
+------+------------+---------+------------+
| eno  | ename      | salary  | dept       |
+------+------------+---------+------------+
| 1002 | Abi        |  104320 | Operations |
| 1004 | Thananya   | 69436.7 | Accounting |
| 1006 | Dhayanithi | 75320.4 | Training   |
| 1007 | Surya      | 41300.5 | Testing    |
| 1008 | Sara       | 99300.5 | Training   |
| 1009 | Harini     | 55804.5 | Finance    |
+------+------------+---------+------------+
6 rows in set (0.00 sec)

mysql>  select * from hexa_employee where dept <> 'HR';
+------+------------+---------+------------+
| eno  | ename      | salary  | dept       |
+------+------------+---------+------------+
| 1002 | Abi        |  104320 | Operations |
| 1004 | Thananya   | 69436.7 | Accounting |
| 1006 | Dhayanithi | 75320.4 | Training   |
| 1007 | Surya      | 41300.5 | Testing    |
| 1008 | Sara       | 99300.5 | Training   |
| 1009 | Harini     | 55804.5 | Finance    |
+------+------------+---------+------------+
6 rows in set (0.00 sec)

mysql>  select * from hexa_employee where dept ^= 'HR';
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '= 'HR'' at line 1
mysql>  # not equal to :: != , <>
mysql> notee;










mysql> #order by- sorting the records in ascending order or descending order

mysql> #defualt is ascending

mysql>

mysql> select * from hexa_employee;

+------+------------+---------+------------+

| eno | ename | salary | dept |

+------+------------+---------+------------+

| 1001 | Devi | 44320.4 | HR |

| 1002 | Abi | 104320 | Operations |

| 1003 | Raja | 74320.4 | HR |

| 1004 | Thananya | 69436.7 | Accounting |

| 1005 | Kanishka | 55904.7 | HR |

| 1006 | Dhayanithi | 75320.4 | Training |

| 1007 | Surya | 41300.5 | Testing |

| 1008 | Sara | 99300.5 | Training |

| 1001 | Devi | 44320.4 | HR |

| 1009 | Harini | 55804.5 | Finance |

+------+------------+---------+------------+

10 rows in set (0.00 sec)

mysql> select * from hexa_employee order by salary;

+------+------------+---------+------------+

| eno | ename | salary | dept |

+------+------------+---------+------------+

| 1007 | Surya | 41300.5 | Testing |

| 1001 | Devi | 44320.4 | HR |

| 1001 | Devi | 44320.4 | HR |

| 1009 | Harini | 55804.5 | Finance |

| 1005 | Kanishka | 55904.7 | HR |

| 1004 | Thananya | 69436.7 | Accounting |

| 1003 | Raja | 74320.4 | HR |

| 1006 | Dhayanithi | 75320.4 | Training |

| 1008 | Sara | 99300.5 | Training |

| 1002 | Abi | 104320 | Operations |

+------+------------+---------+------------+

10 rows in set (0.02 sec)

mysql> select * from hexa_employee order by salary asc;

+------+------------+---------+------------+

| eno | ename | salary | dept |

+------+------------+---------+------------+

| 1007 | Surya | 41300.5 | Testing |

| 1001 | Devi | 44320.4 | HR |

| 1001 | Devi | 44320.4 | HR |

| 1009 | Harini | 55804.5 | Finance |

| 1005 | Kanishka | 55904.7 | HR |

| 1004 | Thananya | 69436.7 | Accounting |

| 1003 | Raja | 74320.4 | HR |

| 1006 | Dhayanithi | 75320.4 | Training |

| 1008 | Sara | 99300.5 | Training |

| 1002 | Abi | 104320 | Operations |

+------+------------+---------+------------+

10 rows in set (0.00 sec)

mysql> select * from hexa_employee order by salary desc;

+------+------------+---------+------------+

| eno | ename | salary | dept |

+------+------------+---------+------------+

| 1002 | Abi | 104320 | Operations |

| 1008 | Sara | 99300.5 | Training |

| 1006 | Dhayanithi | 75320.4 | Training |

| 1003 | Raja | 74320.4 | HR |

| 1004 | Thananya | 69436.7 | Accounting |

| 1005 | Kanishka | 55904.7 | HR |

| 1009 | Harini | 55804.5 | Finance |

| 1001 | Devi | 44320.4 | HR |

| 1001 | Devi | 44320.4 | HR |

| 1007 | Surya | 41300.5 | Testing |

+------+------------+---------+------------+

10 rows in set (0.00 sec)

mysql> select * from hexa_employee order by ename desc;

+------+------------+---------+------------+

| eno | ename | salary | dept |

+------+------------+---------+------------+

| 1004 | Thananya | 69436.7 | Accounting |

| 1007 | Surya | 41300.5 | Testing |

| 1008 | Sara | 99300.5 | Training |

| 1003 | Raja | 74320.4 | HR |

| 1005 | Kanishka | 55904.7 | HR |

| 1009 | Harini | 55804.5 | Finance |

| 1006 | Dhayanithi | 75320.4 | Training |

| 1001 | Devi | 44320.4 | HR |

| 1001 | Devi | 44320.4 | HR |

| 1002 | Abi | 104320 | Operations |

+------+------------+---------+------------+

10 rows in set (0.00 sec)

mysql> select * from hexa_employee order by ename,salary desc;

+------+------------+---------+------------+

| eno | ename | salary | dept |

+------+------------+---------+------------+

| 1002 | Abi | 104320 | Operations |

| 1001 | Devi | 44320.4 | HR |

| 1001 | Devi | 44320.4 | HR |

| 1006 | Dhayanithi | 75320.4 | Training |

| 1009 | Harini | 55804.5 | Finance |

| 1005 | Kanishka | 55904.7 | HR |

| 1003 | Raja | 74320.4 | HR |

| 1008 | Sara | 99300.5 | Training |

| 1007 | Surya | 41300.5 | Testing |

| 1004 | Thananya | 69436.7 | Accounting |

+------+------------+---------+------------+

10 rows in set (0.00 sec)

mysql> select * from hexa_employee order by 3;

+------+------------+---------+------------+

| eno | ename | salary | dept |

+------+------------+---------+------------+

| 1007 | Surya | 41300.5 | Testing |

| 1001 | Devi | 44320.4 | HR |

| 1001 | Devi | 44320.4 | HR |

| 1009 | Harini | 55804.5 | Finance |

| 1005 | Kanishka | 55904.7 | HR |

| 1004 | Thananya | 69436.7 | Accounting |

| 1003 | Raja | 74320.4 | HR |

| 1006 | Dhayanithi | 75320.4 | Training |

| 1008 | Sara | 99300.5 | Training |

| 1002 | Abi | 104320 | Operations |

+------+------------+---------+------------+

10 rows in set (0.00 sec)

mysql> select * from hexa_employee order by 3 desc;

+------+------------+---------+------------+

| eno | ename | salary | dept |

+------+------------+---------+------------+

| 1002 | Abi | 104320 | Operations |

| 1008 | Sara | 99300.5 | Training |

| 1006 | Dhayanithi | 75320.4 | Training |

| 1003 | Raja | 74320.4 | HR |

| 1004 | Thananya | 69436.7 | Accounting |

| 1005 | Kanishka | 55904.7 | HR |

| 1009 | Harini | 55804.5 | Finance |

| 1001 | Devi | 44320.4 | HR |

| 1001 | Devi | 44320.4 | HR |

| 1007 | Surya | 41300.5 | Testing |

+------+------------+---------+------------+

10 rows in set (0.00 sec)

mysql> select * from hexa_employee order by 2 desc;

+------+------------+---------+------------+

| eno | ename | salary | dept |

+------+------------+---------+------------+

| 1004 | Thananya | 69436.7 | Accounting |

| 1007 | Surya | 41300.5 | Testing |

| 1008 | Sara | 99300.5 | Training |

| 1003 | Raja | 74320.4 | HR |

| 1005 | Kanishka | 55904.7 | HR |

| 1009 | Harini | 55804.5 | Finance |

| 1006 | Dhayanithi | 75320.4 | Training |

| 1001 | Devi | 44320.4 | HR |

| 1001 | Devi | 44320.4 | HR |

| 1002 | Abi | 104320 | Operations |

+------+------------+---------+------------+

10 rows in set (0.00 sec)

mysql> select dept,salary,ename from hexa_employee

  -> order by 2 desc;

+------------+---------+------------+

| dept | salary | ename |

+------------+---------+------------+

| Operations | 104320 | Abi |

| Training | 99300.5 | Sara |

| Training | 75320.4 | Dhayanithi |

| HR | 74320.4 | Raja |

| Accounting | 69436.7 | Thananya |

| HR | 55904.7 | Kanishka |

| Finance | 55804.5 | Harini |

| HR | 44320.4 | Devi |

| HR | 44320.4 | Devi |

| Testing | 41300.5 | Surya |

+------------+---------+------------+

10 rows in set (0.00 sec)

mysql> select dept,salary,ename from hexa_employee

  -> order by 3 desc;

+------------+---------+------------+

| dept | salary | ename |

+------------+---------+------------+

| Accounting | 69436.7 | Thananya |

| Testing | 41300.5 | Surya |

| Training | 99300.5 | Sara |

| HR | 74320.4 | Raja |

| HR | 55904.7 | Kanishka |

| Finance | 55804.5 | Harini |

| Training | 75320.4 | Dhayanithi |

| HR | 44320.4 | Devi |

| HR | 44320.4 | Devi |

| Operations | 104320 | Abi |

+------------+---------+------------+

10 rows in set (0.00 sec)

mysql> select * from hexa_employee;

+------+------------+---------+------------+

| eno | ename | salary | dept |

+------+------------+---------+------------+

| 1001 | Devi | 44320.4 | HR |

| 1002 | Abi | 104320 | Operations |

| 1003 | Raja | 74320.4 | HR |

| 1004 | Thananya | 69436.7 | Accounting |

| 1005 | Kanishka | 55904.7 | HR |

| 1006 | Dhayanithi | 75320.4 | Training |

| 1007 | Surya | 41300.5 | Testing |

| 1008 | Sara | 99300.5 | Training |

| 1001 | Devi | 44320.4 | HR |

| 1009 | Harini | 55804.5 | Finance |

+------+------------+---------+------------+

10 rows in set (0.00 sec)

mysql> select eno as EmployeeNumber , ename as EmployeeName

  -> from hexa_employee;

+----------------+--------------+

| EmployeeNumber | EmployeeName |

+----------------+--------------+

| 1001 | Devi |

| 1002 | Abi |

| 1003 | Raja |

| 1004 | Thananya |

| 1005 | Kanishka |

| 1006 | Dhayanithi |

| 1007 | Surya |

| 1008 | Sara |

| 1001 | Devi |

| 1009 | Harini |

+----------------+--------------+

10 rows in set (0.00 sec)

mysql> select * from hexa_employee;

+------+------------+---------+------------+

| eno | ename | salary | dept |

+------+------------+---------+------------+

| 1001 | Devi | 44320.4 | HR |

| 1002 | Abi | 104320 | Operations |

| 1003 | Raja | 74320.4 | HR |

| 1004 | Thananya | 69436.7 | Accounting |

| 1005 | Kanishka | 55904.7 | HR |

| 1006 | Dhayanithi | 75320.4 | Training |

| 1007 | Surya | 41300.5 | Testing |

| 1008 | Sara | 99300.5 | Training |

| 1001 | Devi | 44320.4 | HR |

| 1009 | Harini | 55804.5 | Finance |

+------+------------+---------+------------+

10 rows in set (0.00 sec)

mysql> select eno EmployeeNumber , ename EmployeeName

  -> from hexa_employee;

+----------------+--------------+

| EmployeeNumber | EmployeeName |

+----------------+--------------+

| 1001 | Devi |

| 1002 | Abi |

| 1003 | Raja |

| 1004 | Thananya |

| 1005 | Kanishka |

| 1006 | Dhayanithi |

| 1007 | Surya |

| 1008 | Sara |

| 1001 | Devi |

| 1009 | Harini |

+----------------+--------------+

10 rows in set (0.00 sec)

mysql> select eno "EmployeeNumber" , ename "EmployeeName"

  -> from hexa_employee;

+----------------+--------------+

| EmployeeNumber | EmployeeName |

+----------------+--------------+

| 1001 | Devi |

| 1002 | Abi |

| 1003 | Raja |

| 1004 | Thananya |

| 1005 | Kanishka |

| 1006 | Dhayanithi |

| 1007 | Surya |

| 1008 | Sara |

| 1001 | Devi |

| 1009 | Harini |

+----------------+--------------+

10 rows in set (0.00 sec)

mysql> #above 3 commands are settting the column aliases

mysql>

mysql> #between command:

mysql> #select a record within a given range

mysql>

mysql> select * from hexa_employee;

+------+------------+---------+------------+

| eno | ename | salary | dept |

+------+------------+---------+------------+

| 1001 | Devi | 44320.4 | HR |

| 1002 | Abi | 104320 | Operations |

| 1003 | Raja | 74320.4 | HR |

| 1004 | Thananya | 69436.7 | Accounting |

| 1005 | Kanishka | 55904.7 | HR |

| 1006 | Dhayanithi | 75320.4 | Training |

| 1007 | Surya | 41300.5 | Testing |

| 1008 | Sara | 99300.5 | Training |

| 1001 | Devi | 44320.4 | HR |

| 1009 | Harini | 55804.5 | Finance |

+------+------------+---------+------------+

10 rows in set (0.00 sec)

mysql> select * from hexa_employee where salary between

  -> 45000 and 90000;

+------+------------+---------+------------+

| eno | ename | salary | dept |

+------+------------+---------+------------+

| 1003 | Raja | 74320.4 | HR |

| 1004 | Thananya | 69436.7 | Accounting |

| 1005 | Kanishka | 55904.7 | HR |

| 1006 | Dhayanithi | 75320.4 | Training |

| 1009 | Harini | 55804.5 | Finance |

+------+------------+---------+------------+

5 rows in set (0.00 sec)

mysql> select * from hexa_employee where salary not between

  -> 45000 and 90000;

+------+-------+---------+------------+

| eno | ename | salary | dept |

+------+-------+---------+------------+

| 1001 | Devi | 44320.4 | HR |

| 1002 | Abi | 104320 | Operations |

| 1007 | Surya | 41300.5 | Testing |

| 1008 | Sara | 99300.5 | Training |

| 1001 | Devi | 44320.4 | HR |

+------+-------+---------+------------+

5 rows in set (0.00 sec)

mysql> update hexa_employee set salary=salary+1000

  -> where salary between 50000 and 100000;

Query OK, 6 rows affected (0.00 sec)

Rows matched: 6 Changed: 6 Warnings: 0

mysql> select * from hexa_employee;

+------+------------+---------+------------+

| eno | ename | salary | dept |

+------+------------+---------+------------+

| 1001 | Devi | 44320.4 | HR |

| 1002 | Abi | 104320 | Operations |

| 1003 | Raja | 75320.4 | HR |

| 1004 | Thananya | 70436.7 | Accounting |

| 1005 | Kanishka | 56904.7 | HR |

| 1006 | Dhayanithi | 76320.4 | Training |

| 1007 | Surya | 41300.5 | Testing |

| 1008 | Sara | 100300 | Training |

| 1001 | Devi | 44320.4 | HR |

| 1009 | Harini | 56804.5 | Finance |

+------+------------+---------+------------+

10 rows in set (0.00 sec)

mysql> delete from hexa_employee where salary between

  -> 200000 and 300000;

Query OK, 0 rows affected (0.00 sec)

mysql> select * from hexa_employee

  -> where ename between 'a' and 'h';

+------+------------+---------+------------+

| eno | ename | salary | dept |

+------+------------+---------+------------+

| 1001 | Devi | 44320.4 | HR |

| 1002 | Abi | 104320 | Operations |

| 1006 | Dhayanithi | 76320.4 | Training |

| 1001 | Devi | 44320.4 | HR |

+------+------------+---------+------------+

4 rows in set (0.00 sec)

mysql> select * from hexa_employee

  -> where ename not between 'a' and 'h';

+------+----------+---------+------------+

| eno | ename | salary | dept |

+------+----------+---------+------------+

| 1003 | Raja | 75320.4 | HR |

| 1004 | Thananya | 70436.7 | Accounting |

| 1005 | Kanishka | 56904.7 | HR |

| 1007 | Surya | 41300.5 | Testing |

| 1008 | Sara | 100300 | Training |

| 1009 | Harini | 56804.5 | Finance |

+------+----------+---------+------------+

6 rows in set (0.00 sec)

mysql> select * from hexa_employee

  -> where ename not between 'a' and 'h'

  -> order by 2 desc;

+------+----------+---------+------------+

| eno | ename | salary | dept |

+------+----------+---------+------------+

| 1004 | Thananya | 70436.7 | Accounting |

| 1007 | Surya | 41300.5 | Testing |

| 1008 | Sara | 100300 | Training |

| 1003 | Raja | 75320.4 | HR |

| 1005 | Kanishka | 56904.7 | HR |

| 1009 | Harini | 56804.5 | Finance |

+------+----------+---------+------------+

6 rows in set (0.00 sec)

mysql> #logical operator: AND,OR,NOT

mysql>

mysql> select * from hexa_employee where salary > 60000

  -> and dept='Training';

+------+------------+---------+----------+

| eno | ename | salary | dept |

+------+------------+---------+----------+

| 1006 | Dhayanithi | 76320.4 | Training |

| 1008 | Sara | 100300 | Training |

+------+------------+---------+----------+

2 rows in set (0.00 sec)

mysql> select * from hexa_employee where salary > 60000

  -> or dept='Training';

+------+------------+---------+------------+

| eno | ename | salary | dept |

+------+------------+---------+------------+

| 1002 | Abi | 104320 | Operations |

| 1003 | Raja | 75320.4 | HR |

| 1004 | Thananya | 70436.7 | Accounting |

| 1006 | Dhayanithi | 76320.4 | Training |

| 1008 | Sara | 100300 | Training |

+------+------------+---------+------------+

5 rows in set (0.00 sec)

mysql> select * from hexa_employee where not salary > 60000;

+------+----------+---------+---------+

| eno | ename | salary | dept |

+------+----------+---------+---------+

| 1001 | Devi | 44320.4 | HR |

| 1005 | Kanishka | 56904.7 | HR |

| 1007 | Surya | 41300.5 | Testing |

| 1001 | Devi | 44320.4 | HR |

| 1009 | Harini | 56804.5 | Finance |

+------+----------+---------+---------+

5 rows in set (0.00 sec)

mysql> select * from hexa_employee where salary > 60000;

+------+------------+---------+------------+

| eno | ename | salary | dept |

+------+------------+---------+------------+

| 1002 | Abi | 104320 | Operations |

| 1003 | Raja | 75320.4 | HR |

| 1004 | Thananya | 70436.7 | Accounting |

| 1006 | Dhayanithi | 76320.4 | Training |

| 1008 | Sara | 100300 | Training |

+------+------------+---------+------------+

5 rows in set (0.00 sec)

mysql> select * from hexa_employee where eno=1001,1003,1005,1007;

ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '1003,1005,1007' at line 1

mysql>

mysql> #in keyword=>specify multiple values in where clause

mysql>

mysql> select * from hexa_employee where eno in(1001,1003,1005,1007);

+------+----------+---------+---------+

| eno | ename | salary | dept |

+------+----------+---------+---------+

| 1001 | Devi | 44320.4 | HR |

| 1003 | Raja | 75320.4 | HR |

| 1005 | Kanishka | 56904.7 | HR |

| 1007 | Surya | 41300.5 | Testing |

| 1001 | Devi | 44320.4 | HR |

+------+----------+---------+---------+

5 rows in set (0.00 sec)

mysql> select * from hexa_employee where eno=1001 or eno=1003 or

  -> eno=1005 or eno=1007;

+------+----------+---------+---------+

| eno | ename | salary | dept |

+------+----------+---------+---------+

| 1001 | Devi | 44320.4 | HR |

| 1003 | Raja | 75320.4 | HR |

| 1005 | Kanishka | 56904.7 | HR |

| 1007 | Surya | 41300.5 | Testing |

| 1001 | Devi | 44320.4 | HR |

+------+----------+---------+---------+

5 rows in set (0.00 sec)

mysql> select * from hexa_employee where eno not in(1001,1003,1005,1007);

+------+------------+---------+------------+

| eno | ename | salary | dept |

+------+------------+---------+------------+

| 1002 | Abi | 104320 | Operations |

| 1004 | Thananya | 70436.7 | Accounting |

| 1006 | Dhayanithi | 76320.4 | Training |

| 1008 | Sara | 100300 | Training |

| 1009 | Harini | 56804.5 | Finance |

+------+------------+---------+------------+

5 rows in set (0.00 sec)

mysql> select * from hexa_employee

  -> where dept not in ('HR','Operations');

+------+------------+---------+------------+

| eno | ename | salary | dept |

+------+------------+---------+------------+

| 1004 | Thananya | 70436.7 | Accounting |

| 1006 | Dhayanithi | 76320.4 | Training |

| 1007 | Surya | 41300.5 | Testing |

| 1008 | Sara | 100300 | Training |

| 1009 | Harini | 56804.5 | Finance |

+------+------------+---------+------------+

5 rows in set (0.00 sec)

mysql> update hexa_employee set salary=salary+1000

  -> where dept in ('HR','Operations');

Query OK, 5 rows affected (0.01 sec)

Rows matched: 5 Changed: 5 Warnings: 0

mysql> delete from hexa_employee where dept in ('Sales','Networking');

Query OK, 0 rows affected (0.00 sec)

mysql> select * from hexa_employee;

+------+------------+---------+------------+

| eno | ename | salary | dept |

+------+------------+---------+------------+

| 1001 | Devi | 45320.4 | HR |

| 1002 | Abi | 105320 | Operations |

| 1003 | Raja | 76320.4 | HR |

| 1004 | Thananya | 70436.7 | Accounting |

| 1005 | Kanishka | 57904.7 | HR |

| 1006 | Dhayanithi | 76320.4 | Training |

| 1007 | Surya | 41300.5 | Testing |

| 1008 | Sara | 100300 | Training |

| 1001 | Devi | 45320.4 | HR |

| 1009 | Harini | 56804.5 | Finance |

+------+------------+---------+------------+

10 rows in set (0.00 sec)

mysql> #delete from hexa_employee;

mysql> #above command removes/deletes all records from the table but structure

mysql> #will exists!

mysql>

mysql> delete from hexa_employee where ename='Harini';

Query OK, 1 row affected (0.01 sec)

mysql> delete hexa_employee where eno=1008;

ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'where eno=1008' at line 1

mysql> select * from hexa_employee;

+------+------------+---------+------------+

| eno | ename | salary | dept |

+------+------------+---------+------------+

| 1001 | Devi | 45320.4 | HR |

| 1002 | Abi | 105320 | Operations |

| 1003 | Raja | 76320.4 | HR |

| 1004 | Thananya | 70436.7 | Accounting |

| 1005 | Kanishka | 57904.7 | HR |

| 1006 | Dhayanithi | 76320.4 | Training |

| 1007 | Surya | 41300.5 | Testing |

| 1008 | Sara | 100300 | Training |

| 1001 | Devi | 45320.4 | HR |

+------+------------+---------+------------+

9 rows in set (0.00 sec)

mysql> #like keyword:: pattern matching operation

mysql> #wild card character: _(single character) , %(zero or more characters)

mysql>

mysql> select * from hexa_employee where ename like '%i';

+------+------------+---------+------------+

| eno | ename | salary | dept |

+------+------------+---------+------------+

| 1001 | Devi | 45320.4 | HR |

| 1002 | Abi | 105320 | Operations |

| 1006 | Dhayanithi | 76320.4 | Training |

| 1001 | Devi | 45320.4 | HR |

+------+------------+---------+------------+

4 rows in set (0.00 sec)

mysql> select * from hexa_employee where ename not like '%i';

+------+----------+---------+------------+

| eno | ename | salary | dept |

+------+----------+---------+------------+

| 1003 | Raja | 76320.4 | HR |

| 1004 | Thananya | 70436.7 | Accounting |

| 1005 | Kanishka | 57904.7 | HR |

| 1007 | Surya | 41300.5 | Testing |

| 1008 | Sara | 100300 | Training |

+------+----------+---------+------------+

5 rows in set (0.03 sec)

mysql> select * from hexa_employee where ename like '%a';

+------+----------+---------+------------+

| eno | ename | salary | dept |

+------+----------+---------+------------+

| 1003 | Raja | 76320.4 | HR |

| 1004 | Thananya | 70436.7 | Accounting |

| 1005 | Kanishka | 57904.7 | HR |

| 1007 | Surya | 41300.5 | Testing |

| 1008 | Sara | 100300 | Training |

+------+----------+---------+------------+

5 rows in set (0.00 sec)

mysql> select * from hexa_employee where ename like 's%';

+------+-------+---------+----------+

| eno | ename | salary | dept |

+------+-------+---------+----------+

| 1007 | Surya | 41300.5 | Testing |

| 1008 | Sara | 100300 | Training |

+------+-------+---------+----------+

2 rows in set (0.00 sec)

mysql> select * from hexa_employee where ename like '_a%';

+------+----------+---------+----------+

| eno | ename | salary | dept |

+------+----------+---------+----------+

| 1003 | Raja | 76320.4 | HR |

| 1005 | Kanishka | 57904.7 | HR |

| 1008 | Sara | 100300 | Training |

+------+----------+---------+----------+

3 rows in set (0.00 sec)

mysql> select * from hexa_employee where ename like 's%a';

+------+-------+---------+----------+

| eno | ename | salary | dept |

+------+-------+---------+----------+

| 1007 | Surya | 41300.5 | Testing |

| 1008 | Sara | 100300 | Training |

+------+-------+---------+----------+

2 rows in set (0.00 sec)

mysql> select * from hexa_employee where ename like '____';

+------+-------+---------+----------+

| eno | ename | salary | dept |

+------+-------+---------+----------+

| 1001 | Devi | 45320.4 | HR |

| 1003 | Raja | 76320.4 | HR |

| 1008 | Sara | 100300 | Training |

| 1001 | Devi | 45320.4 | HR |

+------+-------+---------+----------+

4 rows in set (0.00 sec)

mysql> select * from hexa_employee where ename like '_a_a';

+------+-------+---------+----------+

| eno | ename | salary | dept |

+------+-------+---------+----------+

| 1003 | Raja | 76320.4 | HR |

| 1008 | Sara | 100300 | Training |

+------+-------+---------+----------+

2 rows in set (0.00 sec)

mysql> update hexa_employee set salary=salary+1000

  -> where ename like 'd%';

Query OK, 3 rows affected (0.01 sec)

Rows matched: 3 Changed: 3 Warnings: 0

mysql> delete from hexa_employee where ename like 'z%';

Query OK, 0 rows affected (0.00 sec)

mysql> select * from hexa_employee

  -> where ename like 'S[u,a]';

Empty set (0.00 sec)

mysql> select * from hexa_employee

  -> where ename like 'S[^u,a]';

Empty set (0.00 sec)

mysql> notee;










mysql>  #copy the table structure only to another table
mysql>  create table emp1 like hexa_employee;
ERROR 2006 (HY000): MySQL server has gone away
No connection. Trying to reconnect...
Connection id:    2
Current database: hexasep2022

Query OK, 0 rows affected (0.05 sec)

mysql> tee d:\hexsep23.txt
mysql>  #copy the table structure only to another table
mysql>  create table emp1 like hexa_employee;
ERROR 1050 (42S01): Table 'emp1' already exists
mysql> drop table emp1;
Query OK, 0 rows affected (0.03 sec)

mysql> #drop=>removes the complete data of a table along with the whole structure
mysql>  #copy the table structure only to another table
mysql> select * from hexa_employee;
+------+------------+---------+------------+
| eno  | ename      | salary  | dept       |
+------+------------+---------+------------+
| 1001 | Devi       | 46320.4 | HR         |
| 1002 | Abi        |  105320 | Operations |
| 1003 | Raja       | 76320.4 | HR         |
| 1004 | Thananya   | 70436.7 | Accounting |
| 1005 | Kanishka   | 57904.7 | HR         |
| 1006 | Dhayanithi | 77320.4 | Training   |
| 1007 | Surya      | 41300.5 | Testing    |
| 1008 | Sara       |  100300 | Training   |
| 1001 | Devi       | 46320.4 | HR         |
+------+------------+---------+------------+
9 rows in set (0.00 sec)

mysql>  create table emp1 like hexa_employee;
Query OK, 0 rows affected (0.02 sec)

mysql> desc emp1;
+--------+-------------+------+-----+---------+-------+
| Field  | Type        | Null | Key | Default | Extra |
+--------+-------------+------+-----+---------+-------+
| eno    | int(11)     | YES  |     | NULL    |       |
| ename  | varchar(20) | YES  |     | NULL    |       |
| salary | float       | YES  |     | NULL    |       |
| dept   | varchar(20) | YES  |     | NULL    |       |
+--------+-------------+------+-----+---------+-------+
4 rows in set (0.08 sec)

mysql> select * from emp1;
Empty set (0.00 sec)

mysql> #copy the table structure + records
mysql> create table emp2 select * from hexa_employee;
Query OK, 9 rows affected (0.02 sec)
Records: 9  Duplicates: 0  Warnings: 0

mysql> desc emp2;
+--------+-------------+------+-----+---------+-------+
| Field  | Type        | Null | Key | Default | Extra |
+--------+-------------+------+-----+---------+-------+
| eno    | int(11)     | YES  |     | NULL    |       |
| ename  | varchar(20) | YES  |     | NULL    |       |
| salary | float       | YES  |     | NULL    |       |
| dept   | varchar(20) | YES  |     | NULL    |       |
+--------+-------------+------+-----+---------+-------+
4 rows in set (0.04 sec)

mysql> select * from emp2;
+------+------------+---------+------------+
| eno  | ename      | salary  | dept       |
+------+------------+---------+------------+
| 1001 | Devi       | 46320.4 | HR         |
| 1002 | Abi        |  105320 | Operations |
| 1003 | Raja       | 76320.4 | HR         |
| 1004 | Thananya   | 70436.7 | Accounting |
| 1005 | Kanishka   | 57904.7 | HR         |
| 1006 | Dhayanithi | 77320.4 | Training   |
| 1007 | Surya      | 41300.5 | Testing    |
| 1008 | Sara       |  100300 | Training   |
| 1001 | Devi       | 46320.4 | HR         |
+------+------------+---------+------------+
9 rows in set (0.00 sec)

mysql> select * from emp1;
Empty set (0.00 sec)

mysql>  create table emp3 select eno,ename,dept from hexa_employee
    -> where salary > 50000;
Query OK, 6 rows affected (0.01 sec)
Records: 6  Duplicates: 0  Warnings: 0

mysql> desc emp3;
+-------+-------------+------+-----+---------+-------+
| Field | Type        | Null | Key | Default | Extra |
+-------+-------------+------+-----+---------+-------+
| eno   | int(11)     | YES  |     | NULL    |       |
| ename | varchar(20) | YES  |     | NULL    |       |
| dept  | varchar(20) | YES  |     | NULL    |       |
+-------+-------------+------+-----+---------+-------+
3 rows in set (0.03 sec)

mysql> select * from emp3;
+------+------------+------------+
| eno  | ename      | dept       |
+------+------------+------------+
| 1002 | Abi        | Operations |
| 1003 | Raja       | HR         |
| 1004 | Thananya   | Accounting |
| 1005 | Kanishka   | HR         |
| 1006 | Dhayanithi | Training   |
| 1008 | Sara       | Training   |
+------+------------+------------+
6 rows in set (0.00 sec)

mysql>  select * from emp1;
Empty set (0.00 sec)

mysql>  insert into emp1 select * from hexa_employee where dept='HR';
Query OK, 4 rows affected (0.01 sec)
Records: 4  Duplicates: 0  Warnings: 0

mysql>  select * from emp1;
+------+----------+---------+------+
| eno  | ename    | salary  | dept |
+------+----------+---------+------+
| 1001 | Devi     | 46320.4 | HR   |
| 1003 | Raja     | 76320.4 | HR   |
| 1005 | Kanishka | 57904.7 | HR   |
| 1001 | Devi     | 46320.4 | HR   |
+------+----------+---------+------+
4 rows in set (0.00 sec)

mysql> insert into emp1(eno,ename) select eno,ename
    -> from hexa_employee where dept='Testing';
Query OK, 1 row affected (0.02 sec)
Records: 1  Duplicates: 0  Warnings: 0

mysql>  select * from emp1;
+------+----------+---------+------+
| eno  | ename    | salary  | dept |
+------+----------+---------+------+
| 1001 | Devi     | 46320.4 | HR   |
| 1003 | Raja     | 76320.4 | HR   |
| 1005 | Kanishka | 57904.7 | HR   |
| 1001 | Devi     | 46320.4 | HR   |
| 1007 | Surya    |    NULL | NULL |
+------+----------+---------+------+
5 rows in set (0.00 sec)

mysql> #DDL:::
mysql> 
mysql> select * from hexa_employee;
+------+------------+---------+------------+
| eno  | ename      | salary  | dept       |
+------+------------+---------+------------+
| 1001 | Devi       | 46320.4 | HR         |
| 1002 | Abi        |  105320 | Operations |
| 1003 | Raja       | 76320.4 | HR         |
| 1004 | Thananya   | 70436.7 | Accounting |
| 1005 | Kanishka   | 57904.7 | HR         |
| 1006 | Dhayanithi | 77320.4 | Training   |
| 1007 | Surya      | 41300.5 | Testing    |
| 1008 | Sara       |  100300 | Training   |
| 1001 | Devi       | 46320.4 | HR         |
+------+------------+---------+------------+
9 rows in set (0.00 sec)

mysql>  alter table hexa_employee add column designation varchar(14);
Query OK, 9 rows affected (0.05 sec)
Records: 9  Duplicates: 0  Warnings: 0

mysql> desc hexa_employee;
+-------------+-------------+------+-----+---------+-------+
| Field       | Type        | Null | Key | Default | Extra |
+-------------+-------------+------+-----+---------+-------+
| eno         | int(11)     | YES  |     | NULL    |       |
| ename       | varchar(20) | YES  |     | NULL    |       |
| salary      | float       | YES  |     | NULL    |       |
| dept        | varchar(20) | YES  |     | NULL    |       |
| designation | varchar(14) | YES  |     | NULL    |       |
+-------------+-------------+------+-----+---------+-------+
5 rows in set (0.08 sec)

mysql> select * from hexa_employee;
+------+------------+---------+------------+-------------+
| eno  | ename      | salary  | dept       | designation |
+------+------------+---------+------------+-------------+
| 1001 | Devi       | 46320.4 | HR         | NULL        |
| 1002 | Abi        |  105320 | Operations | NULL        |
| 1003 | Raja       | 76320.4 | HR         | NULL        |
| 1004 | Thananya   | 70436.7 | Accounting | NULL        |
| 1005 | Kanishka   | 57904.7 | HR         | NULL        |
| 1006 | Dhayanithi | 77320.4 | Training   | NULL        |
| 1007 | Surya      | 41300.5 | Testing    | NULL        |
| 1008 | Sara       |  100300 | Training   | NULL        |
| 1001 | Devi       | 46320.4 | HR         | NULL        |
+------+------------+---------+------------+-------------+
9 rows in set (0.00 sec)

mysql> update hexa_employee set designation='Manager'
    -> where eno=1001;
Query OK, 2 rows affected (0.00 sec)
Rows matched: 2  Changed: 2  Warnings: 0

mysql> select * from hexa_employee;
+------+------------+---------+------------+-------------+
| eno  | ename      | salary  | dept       | designation |
+------+------------+---------+------------+-------------+
| 1001 | Devi       | 46320.4 | HR         | Manager     |
| 1002 | Abi        |  105320 | Operations | NULL        |
| 1003 | Raja       | 76320.4 | HR         | NULL        |
| 1004 | Thananya   | 70436.7 | Accounting | NULL        |
| 1005 | Kanishka   | 57904.7 | HR         | NULL        |
| 1006 | Dhayanithi | 77320.4 | Training   | NULL        |
| 1007 | Surya      | 41300.5 | Testing    | NULL        |
| 1008 | Sara       |  100300 | Training   | NULL        |
| 1001 | Devi       | 46320.4 | HR         | Manager     |
+------+------------+---------+------------+-------------+
9 rows in set (0.00 sec)

mysql> update hexa_employee set designation='Tester'
    -> where eno in(1008,1006,1007);
Query OK, 3 rows affected (0.01 sec)
Rows matched: 3  Changed: 3  Warnings: 0

mysql> select * from hexa_employee;
+------+------------+---------+------------+-------------+
| eno  | ename      | salary  | dept       | designation |
+------+------------+---------+------------+-------------+
| 1001 | Devi       | 46320.4 | HR         | Manager     |
| 1002 | Abi        |  105320 | Operations | NULL        |
| 1003 | Raja       | 76320.4 | HR         | NULL        |
| 1004 | Thananya   | 70436.7 | Accounting | NULL        |
| 1005 | Kanishka   | 57904.7 | HR         | NULL        |
| 1006 | Dhayanithi | 77320.4 | Training   | Tester      |
| 1007 | Surya      | 41300.5 | Testing    | Tester      |
| 1008 | Sara       |  100300 | Training   | Tester      |
| 1001 | Devi       | 46320.4 | HR         | Manager     |
+------+------------+---------+------------+-------------+
9 rows in set (0.00 sec)

mysql>  alter table hexa_employee add(allowance int,pf int);
Query OK, 9 rows affected (0.14 sec)
Records: 9  Duplicates: 0  Warnings: 0

mysql> select * from hexa_employee;
+------+------------+---------+------------+-------------+-----------+------+
| eno  | ename      | salary  | dept       | designation | allowance | pf   |
+------+------------+---------+------------+-------------+-----------+------+
| 1001 | Devi       | 46320.4 | HR         | Manager     |      NULL | NULL |
| 1002 | Abi        |  105320 | Operations | NULL        |      NULL | NULL |
| 1003 | Raja       | 76320.4 | HR         | NULL        |      NULL | NULL |
| 1004 | Thananya   | 70436.7 | Accounting | NULL        |      NULL | NULL |
| 1005 | Kanishka   | 57904.7 | HR         | NULL        |      NULL | NULL |
| 1006 | Dhayanithi | 77320.4 | Training   | Tester      |      NULL | NULL |
| 1007 | Surya      | 41300.5 | Testing    | Tester      |      NULL | NULL |
| 1008 | Sara       |  100300 | Training   | Tester      |      NULL | NULL |
| 1001 | Devi       | 46320.4 | HR         | Manager     |      NULL | NULL |
+------+------------+---------+------------+-------------+-----------+------+
9 rows in set (0.00 sec)

mysql>  alter table hexa_employee modify ename varchar(3);
ERROR 1265 (01000): Data truncated for column 'ename' at row 1
mysql>  alter table hexa_employee modify ename varchar(13);
Query OK, 9 rows affected (0.06 sec)
Records: 9  Duplicates: 0  Warnings: 0

mysql> desc hexa_employee;
+-------------+-------------+------+-----+---------+-------+
| Field       | Type        | Null | Key | Default | Extra |
+-------------+-------------+------+-----+---------+-------+
| eno         | int(11)     | YES  |     | NULL    |       |
| ename       | varchar(13) | YES  |     | NULL    |       |
| salary      | float       | YES  |     | NULL    |       |
| dept        | varchar(20) | YES  |     | NULL    |       |
| designation | varchar(14) | YES  |     | NULL    |       |
| allowance   | int(11)     | YES  |     | NULL    |       |
| pf          | int(11)     | YES  |     | NULL    |       |
+-------------+-------------+------+-----+---------+-------+
7 rows in set (0.12 sec)

mysql>  alter table hexa_employee modify ename varchar(23);
Query OK, 9 rows affected (0.05 sec)
Records: 9  Duplicates: 0  Warnings: 0

mysql> desc hexa_employee;
+-------------+-------------+------+-----+---------+-------+
| Field       | Type        | Null | Key | Default | Extra |
+-------------+-------------+------+-----+---------+-------+
| eno         | int(11)     | YES  |     | NULL    |       |
| ename       | varchar(23) | YES  |     | NULL    |       |
| salary      | float       | YES  |     | NULL    |       |
| dept        | varchar(20) | YES  |     | NULL    |       |
| designation | varchar(14) | YES  |     | NULL    |       |
| allowance   | int(11)     | YES  |     | NULL    |       |
| pf          | int(11)     | YES  |     | NULL    |       |
+-------------+-------------+------+-----+---------+-------+
7 rows in set (0.10 sec)

mysql> alter table hexa_employee change designation role varchar(11);
Query OK, 9 rows affected (0.09 sec)
Records: 9  Duplicates: 0  Warnings: 0

mysql> desc hexa_employee;
+-----------+-------------+------+-----+---------+-------+
| Field     | Type        | Null | Key | Default | Extra |
+-----------+-------------+------+-----+---------+-------+
| eno       | int(11)     | YES  |     | NULL    |       |
| ename     | varchar(23) | YES  |     | NULL    |       |
| salary    | float       | YES  |     | NULL    |       |
| dept      | varchar(20) | YES  |     | NULL    |       |
| role      | varchar(11) | YES  |     | NULL    |       |
| allowance | int(11)     | YES  |     | NULL    |       |
| pf        | int(11)     | YES  |     | NULL    |       |
+-----------+-------------+------+-----+---------+-------+
7 rows in set (0.08 sec)

mysql> select * from hexa_employee;
+------+------------+---------+------------+---------+-----------+------+
| eno  | ename      | salary  | dept       | role    | allowance | pf   |
+------+------------+---------+------------+---------+-----------+------+
| 1001 | Devi       | 46320.4 | HR         | Manager |      NULL | NULL |
| 1002 | Abi        |  105320 | Operations | NULL    |      NULL | NULL |
| 1003 | Raja       | 76320.4 | HR         | NULL    |      NULL | NULL |
| 1004 | Thananya   | 70436.7 | Accounting | NULL    |      NULL | NULL |
| 1005 | Kanishka   | 57904.7 | HR         | NULL    |      NULL | NULL |
| 1006 | Dhayanithi | 77320.4 | Training   | Tester  |      NULL | NULL |
| 1007 | Surya      | 41300.5 | Testing    | Tester  |      NULL | NULL |
| 1008 | Sara       |  100300 | Training   | Tester  |      NULL | NULL |
| 1001 | Devi       | 46320.4 | HR         | Manager |      NULL | NULL |
+------+------------+---------+------------+---------+-----------+------+
9 rows in set (0.00 sec)

mysql>  alter table hexa_employee drop column pf;
Query OK, 9 rows affected (7.40 sec)
Records: 9  Duplicates: 0  Warnings: 0

mysql> select * from hexa_employee;
+------+------------+---------+------------+---------+-----------+
| eno  | ename      | salary  | dept       | role    | allowance |
+------+------------+---------+------------+---------+-----------+
| 1001 | Devi       | 46320.4 | HR         | Manager |      NULL |
| 1002 | Abi        |  105320 | Operations | NULL    |      NULL |
| 1003 | Raja       | 76320.4 | HR         | NULL    |      NULL |
| 1004 | Thananya   | 70436.7 | Accounting | NULL    |      NULL |
| 1005 | Kanishka   | 57904.7 | HR         | NULL    |      NULL |
| 1006 | Dhayanithi | 77320.4 | Training   | Tester  |      NULL |
| 1007 | Surya      | 41300.5 | Testing    | Tester  |      NULL |
| 1008 | Sara       |  100300 | Training   | Tester  |      NULL |
| 1001 | Devi       | 46320.4 | HR         | Manager |      NULL |
+------+------------+---------+------------+---------+-----------+
9 rows in set (0.00 sec)

mysql> alter table hexa_employee drop role,drop allowance;
Query OK, 9 rows affected (0.06 sec)
Records: 9  Duplicates: 0  Warnings: 0

mysql> select * from hexa_employee;
+------+------------+---------+------------+
| eno  | ename      | salary  | dept       |
+------+------------+---------+------------+
| 1001 | Devi       | 46320.4 | HR         |
| 1002 | Abi        |  105320 | Operations |
| 1003 | Raja       | 76320.4 | HR         |
| 1004 | Thananya   | 70436.7 | Accounting |
| 1005 | Kanishka   | 57904.7 | HR         |
| 1006 | Dhayanithi | 77320.4 | Training   |
| 1007 | Surya      | 41300.5 | Testing    |
| 1008 | Sara       |  100300 | Training   |
| 1001 | Devi       | 46320.4 | HR         |
+------+------------+---------+------------+
9 rows in set (0.00 sec)

mysql> alter table hexa_employee rename to hexa_emps;
Query OK, 0 rows affected (0.01 sec)

mysql> select * from hexa_employee;
ERROR 1146 (42S02): Table 'hexasep2022.hexa_employee' doesn't exist
mysql> select * from hexa_emps;
+------+------------+---------+------------+
| eno  | ename      | salary  | dept       |
+------+------------+---------+------------+
| 1001 | Devi       | 46320.4 | HR         |
| 1002 | Abi        |  105320 | Operations |
| 1003 | Raja       | 76320.4 | HR         |
| 1004 | Thananya   | 70436.7 | Accounting |
| 1005 | Kanishka   | 57904.7 | HR         |
| 1006 | Dhayanithi | 77320.4 | Training   |
| 1007 | Surya      | 41300.5 | Testing    |
| 1008 | Sara       |  100300 | Training   |
| 1001 | Devi       | 46320.4 | HR         |
+------+------------+---------+------------+
9 rows in set (0.00 sec)

mysql> notee;


mysql> select * from hexa_emps;
+------+------------+---------+------------+
| eno  | ename      | salary  | dept       |
+------+------------+---------+------------+
| 1001 | Devi       | 46320.4 | HR         |
| 1002 | Abi        |  105320 | Operations |
| 1003 | Raja       | 76320.4 | HR         |
| 1004 | Thananya   | 70436.7 | Accounting |
| 1005 | Kanishka   | 57904.7 | HR         |
| 1006 | Dhayanithi | 77320.4 | Training   |
| 1007 | Surya      | 41300.5 | Testing    |
| 1008 | Sara       |  100300 | Training   |
| 1001 | Devi       | 46320.4 | HR         |
+------+------------+---------+------------+
9 rows in set (0.00 sec)

mysql> alter table hexa_emps modify ename varchar(20) after dept;
Query OK, 9 rows affected (0.02 sec)
Records: 9  Duplicates: 0  Warnings: 0

mysql> select * from hexa_emps;
+------+---------+------------+------------+
| eno  | salary  | dept       | ename      |
+------+---------+------------+------------+
| 1001 | 46320.4 | HR         | Devi       |
| 1002 |  105320 | Operations | Abi        |
| 1003 | 76320.4 | HR         | Raja       |
| 1004 | 70436.7 | Accounting | Thananya   |
| 1005 | 57904.7 | HR         | Kanishka   |
| 1006 | 77320.4 | Training   | Dhayanithi |
| 1007 | 41300.5 | Testing    | Surya      |
| 1008 |  100300 | Training   | Sara       |
| 1001 | 46320.4 | HR         | Devi       |
+------+---------+------------+------------+
9 rows in set (0.00 sec)

mysql> alter table hexa_emps change ename varchar(20) after eno;
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'varchar(20) after eno' at line 1
mysql> alter table hexa_emps modify column ename varchar(20) first;
Query OK, 9 rows affected (0.04 sec)
Records: 9  Duplicates: 0  Warnings: 0

mysql> select * from hexa_emps;
+------------+------+---------+------------+
| ename      | eno  | salary  | dept       |
+------------+------+---------+------------+
| Devi       | 1001 | 46320.4 | HR         |
| Abi        | 1002 |  105320 | Operations |
| Raja       | 1003 | 76320.4 | HR         |
| Thananya   | 1004 | 70436.7 | Accounting |
| Kanishka   | 1005 | 57904.7 | HR         |
| Dhayanithi | 1006 | 77320.4 | Training   |
| Surya      | 1007 | 41300.5 | Testing    |
| Sara       | 1008 |  100300 | Training   |
| Devi       | 1001 | 46320.4 | HR         |
+------------+------+---------+------------+
9 rows in set (0.00 sec)

mysql> alter table hexa_emps modify ename varchar(20) after eno;
Query OK, 9 rows affected (0.03 sec)
Records: 9  Duplicates: 0  Warnings: 0

mysql> select * from hexa_emps;
+------+------------+---------+------------+
| eno  | ename      | salary  | dept       |
+------+------------+---------+------------+
| 1001 | Devi       | 46320.4 | HR         |
| 1002 | Abi        |  105320 | Operations |
| 1003 | Raja       | 76320.4 | HR         |
| 1004 | Thananya   | 70436.7 | Accounting |
| 1005 | Kanishka   | 57904.7 | HR         |
| 1006 | Dhayanithi | 77320.4 | Training   |
| 1007 | Surya      | 41300.5 | Testing    |
| 1008 | Sara       |  100300 | Training   |
| 1001 | Devi       | 46320.4 | HR         |
+------+------------+---------+------------+
9 rows in set (0.00 sec)

mysql>  insert into hexa_emps values(8001,'Priya',null,null);
Query OK, 1 row affected (0.00 sec)

mysql> insert into hexa_emps values(2201,'Sara',43288,null);
Query OK, 1 row affected (0.00 sec)

mysql>  insert into hexa_emps values(2202,'Sanesh',89288,null);
Query OK, 1 row affected (0.02 sec)

mysql>  select * from hexa_emps;
+------+------------+---------+------------+
| eno  | ename      | salary  | dept       |
+------+------------+---------+------------+
| 1001 | Devi       | 46320.4 | HR         |
| 1002 | Abi        |  105320 | Operations |
| 1003 | Raja       | 76320.4 | HR         |
| 1004 | Thananya   | 70436.7 | Accounting |
| 1005 | Kanishka   | 57904.7 | HR         |
| 1006 | Dhayanithi | 77320.4 | Training   |
| 1007 | Surya      | 41300.5 | Testing    |
| 1008 | Sara       |  100300 | Training   |
| 1001 | Devi       | 46320.4 | HR         |
| 8001 | Priya      |    NULL | NULL       |
| 2201 | Sara       |   43288 | NULL       |
| 2202 | Sanesh     |   89288 | NULL       |
+------+------------+---------+------------+
12 rows in set (0.00 sec)

mysql> select * from hexa_emps where dept is null;
+------+--------+--------+------+
| eno  | ename  | salary | dept |
+------+--------+--------+------+
| 8001 | Priya  |   NULL | NULL |
| 2201 | Sara   |  43288 | NULL |
| 2202 | Sanesh |  89288 | NULL |
+------+--------+--------+------+
3 rows in set (0.00 sec)

mysql> select * from hexa_emps where dept=null;
Empty set (0.00 sec)

mysql> select * from hexa_emps where dept is not null;
+------+------------+---------+------------+
| eno  | ename      | salary  | dept       |
+------+------------+---------+------------+
| 1001 | Devi       | 46320.4 | HR         |
| 1002 | Abi        |  105320 | Operations |
| 1003 | Raja       | 76320.4 | HR         |
| 1004 | Thananya   | 70436.7 | Accounting |
| 1005 | Kanishka   | 57904.7 | HR         |
| 1006 | Dhayanithi | 77320.4 | Training   |
| 1007 | Surya      | 41300.5 | Testing    |
| 1008 | Sara       |  100300 | Training   |
| 1001 | Devi       | 46320.4 | HR         |
+------+------------+---------+------------+
9 rows in set (0.00 sec)

mysql>  update hexa_emps set salary=salary+1000
    -> where salary is not null;
Query OK, 11 rows affected (0.00 sec)
Rows matched: 11  Changed: 11  Warnings: 0

mysql>  update hexa_emps set salary=67000
    -> where salary is null;
Query OK, 1 row affected (0.00 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql>  update hexa_emps set dept='Operations' where dept is null;
Query OK, 3 rows affected (0.00 sec)
Rows matched: 3  Changed: 3  Warnings: 0

mysql> select * from hexa_emps;
+------+------------+---------+------------+
| eno  | ename      | salary  | dept       |
+------+------------+---------+------------+
| 1001 | Devi       | 47320.4 | HR         |
| 1002 | Abi        |  106320 | Operations |
| 1003 | Raja       | 77320.4 | HR         |
| 1004 | Thananya   | 71436.7 | Accounting |
| 1005 | Kanishka   | 58904.7 | HR         |
| 1006 | Dhayanithi | 78320.4 | Training   |
| 1007 | Surya      | 42300.5 | Testing    |
| 1008 | Sara       |  101300 | Training   |
| 1001 | Devi       | 47320.4 | HR         |
| 8001 | Priya      |   67000 | Operations |
| 2201 | Sara       |   44288 | Operations |
| 2202 | Sanesh     |   90288 | Operations |
+------+------------+---------+------------+
12 rows in set (0.00 sec)

mysql> delete from hexa_emps where dept is null;
Query OK, 0 rows affected (0.00 sec)

mysql>  #aggregate functions or group functions:::
mysql> 
mysql> select sum(salary),avg(salary),min(salary),
    -> max(salary) from hexa_emps;
+--------------+-------------------+-------------+----------------+
| sum(salary)  | avg(salary)       | min(salary) | max(salary)    |
+--------------+-------------------+-------------+----------------+
| 832120.34375 | 69343.36197916667 |     42300.5 | 106320.3984375 |
+--------------+-------------------+-------------+----------------+
1 row in set (0.03 sec)

mysql> select sum(salary) "Total",avg(salary) "Avg",min(salary) "Min",
    ->  max(salary) "Max" from hexa_emps;
+--------------+-------------------+---------+----------------+
| Total        | Avg               | Min     | Max            |
+--------------+-------------------+---------+----------------+
| 832120.34375 | 69343.36197916667 | 42300.5 | 106320.3984375 |
+--------------+-------------------+---------+----------------+
1 row in set (0.00 sec)

mysql> insert into hexa_emps values(454,'Saravana',null,null);
Query OK, 1 row affected (0.00 sec)

mysql> select * from hexa_emps;
+------+------------+---------+------------+
| eno  | ename      | salary  | dept       |
+------+------------+---------+------------+
| 1001 | Devi       | 47320.4 | HR         |
| 1002 | Abi        |  106320 | Operations |
| 1003 | Raja       | 77320.4 | HR         |
| 1004 | Thananya   | 71436.7 | Accounting |
| 1005 | Kanishka   | 58904.7 | HR         |
| 1006 | Dhayanithi | 78320.4 | Training   |
| 1007 | Surya      | 42300.5 | Testing    |
| 1008 | Sara       |  101300 | Training   |
| 1001 | Devi       | 47320.4 | HR         |
| 8001 | Priya      |   67000 | Operations |
| 2201 | Sara       |   44288 | Operations |
| 2202 | Sanesh     |   90288 | Operations |
|  454 | Saravana   |    NULL | NULL       |
+------+------------+---------+------------+
13 rows in set (0.00 sec)

mysql>  select count(*),count(ename),count(salary),count(dept) from hexa_emps;
+----------+--------------+---------------+-------------+
| count(*) | count(ename) | count(salary) | count(dept) |
+----------+--------------+---------------+-------------+
|       13 |           13 |            12 |          12 |
+----------+--------------+---------------+-------------+
1 row in set (0.00 sec)

mysql>  #count(*)=>count all records including null values
mysql> #count(columnname)=>count all records excluding null values
mysql> 
mysql>  #group by=>arrange identical data into groups!
mysql> 
mysql> select dept,sum(salary)"Total"  from
    ->  hexa_emps
    -> group by dept;
+------------+----------------+
| dept       | Total          |
+------------+----------------+
| NULL       |           NULL |
| Accounting |  71436.6796875 |
| HR         | 230865.8671875 |
| Operations | 307896.3984375 |
| Testing    |        42300.5 |
| Training   | 179620.8984375 |
+------------+----------------+
6 rows in set (0.00 sec)

mysql>  select dept,sum(salary)"Total",count(*) "Count"  from
    -> hexa_emps
    ->  group by dept;
+------------+----------------+-------+
| dept       | Total          | Count |
+------------+----------------+-------+
| NULL       |           NULL |     1 |
| Accounting |  71436.6796875 |     1 |
| HR         | 230865.8671875 |     4 |
| Operations | 307896.3984375 |     4 |
| Testing    |        42300.5 |     1 |
| Training   | 179620.8984375 |     2 |
+------------+----------------+-------+
6 rows in set (0.00 sec)

mysql>  select ename,dept,sum(salary)"Total",count(*) "Count"  from
    -> hexa_emps
    -> group by dept;
+------------+------------+----------------+-------+
| ename      | dept       | Total          | Count |
+------------+------------+----------------+-------+
| Saravana   | NULL       |           NULL |     1 |
| Thananya   | Accounting |  71436.6796875 |     1 |
| Devi       | HR         | 230865.8671875 |     4 |
| Abi        | Operations | 307896.3984375 |     4 |
| Surya      | Testing    |        42300.5 |     1 |
| Dhayanithi | Training   | 179620.8984375 |     2 |
+------------+------------+----------------+-------+
6 rows in set (0.00 sec)

mysql> #ename is a non-grouping column!
mysql>  #above output is invalid
mysql> 
mysql> #The HAVING clause is often used with the GROUP BY clause to filter groups based on a specified condition. If you omit the GROUP BY clause, the HAVING clause behaves like the WHERE clause.
mysql> 
mysql> 
mysql>  select dept,sum(salary)"Total",count(*) "Count"  from
    -> hexa_emps
    ->  group by dept
    -> having dept!='Testing';
+------------+----------------+-------+
| dept       | Total          | Count |
+------------+----------------+-------+
| Accounting |  71436.6796875 |     1 |
| HR         | 230865.8671875 |     4 |
| Operations | 307896.3984375 |     4 |
| Training   | 179620.8984375 |     2 |
+------------+----------------+-------+
4 rows in set (0.01 sec)

mysql>  select dept,sum(salary)"Total",count(*) "Count"  from
    -> hexa_emps
    ->  group by dept
    -> having dept!='Testing'
    -> order by dept desc;
+------------+----------------+-------+
| dept       | Total          | Count |
+------------+----------------+-------+
| Training   | 179620.8984375 |     2 |
| Operations | 307896.3984375 |     4 |
| HR         | 230865.8671875 |     4 |
| Accounting |  71436.6796875 |     1 |
+------------+----------------+-------+
4 rows in set (0.00 sec)

mysql>  #order by must be the last clause in select statement
mysql> 
mysql>  select dept,max(salary)"Maxsalary",min(Salary)"MinSalary"
    -> from hexa_emps
    ->  group by dept
    -> order by maxsalary;
+------------+-----------+-----------+
| dept       | Maxsalary | MinSalary |
+------------+-----------+-----------+
| NULL       |      NULL |      NULL |
| Testing    |   42300.5 |   42300.5 |
| Accounting |   71436.7 |   71436.7 |
| HR         |   77320.4 |   47320.4 |
| Training   |    101300 |   78320.4 |
| Operations |    106320 |     44288 |
+------------+-----------+-----------+
6 rows in set (0.00 sec)

mysql> select dept,max(salary) from hexa_emps
    -> where dept!='HR'
    -> group by dept;
+------------+-------------+
| dept       | max(salary) |
+------------+-------------+
| Accounting |     71436.7 |
| Operations |      106320 |
| Testing    |     42300.5 |
| Training   |      101300 |
+------------+-------------+
4 rows in set (0.00 sec)

mysql> select dept,max(salary) from hexa_emps
    -> group by dept
    -> having dept!='HR';
+------------+-------------+
| dept       | max(salary) |
+------------+-------------+
| Accounting |     71436.7 |
| Operations |      106320 |
| Testing    |     42300.5 |
| Training   |      101300 |
+------------+-------------+
4 rows in set (0.00 sec)

mysql>  #where clause allowed only before group by keyword!
mysql> 
mysql>  select dept from hexa_emps;
+------------+
| dept       |
+------------+
| HR         |
| Operations |
| HR         |
| Accounting |
| HR         |
| Training   |
| Testing    |
| Training   |
| HR         |
| Operations |
| Operations |
| Operations |
| NULL       |
+------------+
13 rows in set (0.00 sec)

mysql> # The unique values are fetched when we use the distinct keyword.
mysql> 
mysql> select distinct dept from hexa_emps;
+------------+
| dept       |
+------------+
| HR         |
| Operations |
| Accounting |
| Training   |
| Testing    |
| NULL       |
+------------+
6 rows in set (0.02 sec)

mysql>  select count(*),count(ename),count(salary),count(dept),
    ->  count(distinct dept) 
    -> from hexa_emps;
+----------+--------------+---------------+-------------+----------------------+
| count(*) | count(ename) | count(salary) | count(dept) | count(distinct dept) |
+----------+--------------+---------------+-------------+----------------------+
|       13 |           13 |            12 |          12 |                    5 |
+----------+--------------+---------------+-------------+----------------------+
1 row in set (0.01 sec)

mysql> select * from hexa_emps;
+------+------------+---------+------------+
| eno  | ename      | salary  | dept       |
+------+------------+---------+------------+
| 1001 | Devi       | 47320.4 | HR         |
| 1002 | Abi        |  106320 | Operations |
| 1003 | Raja       | 77320.4 | HR         |
| 1004 | Thananya   | 71436.7 | Accounting |
| 1005 | Kanishka   | 58904.7 | HR         |
| 1006 | Dhayanithi | 78320.4 | Training   |
| 1007 | Surya      | 42300.5 | Testing    |
| 1008 | Sara       |  101300 | Training   |
| 1001 | Devi       | 47320.4 | HR         |
| 8001 | Priya      |   67000 | Operations |
| 2201 | Sara       |   44288 | Operations |
| 2202 | Sanesh     |   90288 | Operations |
|  454 | Saravana   |    NULL | NULL       |
+------+------------+---------+------------+
13 rows in set (0.00 sec)

mysql> select dept,max(salary),count(*) from hexa_emps
    -> group by dept
    -> having count(dept) > 3;
+------------+-------------+----------+
| dept       | max(salary) | count(*) |
+------------+-------------+----------+
| HR         |     77320.4 |        4 |
| Operations |      106320 |        4 |
+------------+-------------+----------+
2 rows in set (0.00 sec)

mysql> create table date1(dob date,doj datetime);
Query OK, 0 rows affected (0.07 sec)

mysql> desc date1;
+-------+----------+------+-----+---------+-------+
| Field | Type     | Null | Key | Default | Extra |
+-------+----------+------+-----+---------+-------+
| dob   | date     | YES  |     | NULL    |       |
| doj   | datetime | YES  |     | NULL    |       |
+-------+----------+------+-----+---------+-------+
2 rows in set (0.07 sec)

mysql>  #default date format:: yyyy-mm-dd
mysql> 
mysql>  insert into date1 values('2001-10-14','2021-07-13 08:23:43');
Query OK, 1 row affected (0.03 sec)

mysql>  insert into date1 values('2002-11-15','2021-03-16 08:23:43');
Query OK, 1 row affected (0.01 sec)

mysql> select * from date1;
+------------+---------------------+
| dob        | doj                 |
+------------+---------------------+
| 2001-10-14 | 2021-07-13 08:23:43 |
| 2002-11-15 | 2021-03-16 08:23:43 |
+------------+---------------------+
2 rows in set (0.00 sec)

mysql>  insert into date1 values(curdate(),now());
Query OK, 1 row affected (0.04 sec)

mysql> # The NOW() function gives current datetime as a timestamp while CURDATE() gives only current date, not time.
mysql> 
mysql> select * from date1;
+------------+---------------------+
| dob        | doj                 |
+------------+---------------------+
| 2001-10-14 | 2021-07-13 08:23:43 |
| 2002-11-15 | 2021-03-16 08:23:43 |
| 2022-09-23 | 2022-09-23 14:44:09 |
+------------+---------------------+
3 rows in set (0.00 sec)

mysql>  insert into date1 values('2000-09-24','2021-08-15 07:23:45');
Query OK, 1 row affected (0.00 sec)

mysql> select * from date1;
+------------+---------------------+
| dob        | doj                 |
+------------+---------------------+
| 2001-10-14 | 2021-07-13 08:23:43 |
| 2002-11-15 | 2021-03-16 08:23:43 |
| 2022-09-23 | 2022-09-23 14:44:09 |
| 2000-09-24 | 2021-08-15 07:23:45 |
+------------+---------------------+
4 rows in set (0.00 sec)

mysql>  select * from date1 where year(dob)='2000';
+------------+---------------------+
| dob        | doj                 |
+------------+---------------------+
| 2000-09-24 | 2021-08-15 07:23:45 |
+------------+---------------------+
1 row in set (0.00 sec)

mysql> select * from date1 where month(dob)='10';
+------------+---------------------+
| dob        | doj                 |
+------------+---------------------+
| 2001-10-14 | 2021-07-13 08:23:43 |
+------------+---------------------+
1 row in set (0.03 sec)

mysql>  SELECT YEAR('2020-09-14 23:18:17') AS Year,  
    ->            Month('2020-09-14 23:18:17') AS Month,  
    ->                             Day('2020-09-14 23:18:17') AS Day,  
    ->                             Hour('2020-09-14 23:18:17') AS Hour,  
    ->                             Minute('2020-09-14 23:18:17') AS Minute,  
    ->                             Second('2020-09-14 23:18:17') AS Second,  
    ->                             Date('2020-09-14 23:18:17') AS Date,  
    ->                            Time('2020-09-14 23:18:17') AS Time,  
    ->                             Quarter('2020-09-14 23:18:17') AS Quarter;
+------+-------+------+------+--------+--------+------------+----------+---------+
| Year | Month | Day  | Hour | Minute | Second | Date       | Time     | Quarter |
+------+-------+------+------+--------+--------+------------+----------+---------+
| 2020 |     9 |   14 |   23 |     18 |     17 | 2020-09-14 | 23:18:17 |       3 |
+------+-------+------+------+--------+--------+------------+----------+---------+
1 row in set (0.02 sec)

mysql>  #January-March returns 1
mysql>  # April-June returns 2
mysql> #July-Sep returns 3
mysql> # Oct-Dec returns 4
mysql> 
mysql>  CREATE TABLE patient_appointment_details (
    ->       patient_id INT,
    ->                        patient_name VARCHAR(22),
    ->                        appointment_date DATETIME);
Query OK, 0 rows affected (0.04 sec)

mysql>  INSERT INTO patient_appointment_details(patient_id,patient_name,appointment_date) 
    ->          VALUES(1,"Justin",'2021-08-6 19:13:30'),
    ->                         (2,"Veronica",current_date()),
    ->                         (3,"George",'2021-04-03 09:12:30'),
    ->                         (4,"Veena",'2021-04-09 09:12:30'),
    ->                         (5,"Tanya",'2021-04-08 09:12:30'),
    ->                         (6,"Peter",'2021-04-04 07:07:20'),
    ->                         (7,"Smitha",'2021-05-06 09:12:30'),
    ->                         (8,"Walter",'2021-04-06 09:12:30'),
    ->                         (9,"Daniel",'2021-04-10 09:12:30'),
    ->                        (10,"Erick",adddate(curdate(), 20)),
    ->                         (11,"Atharv",adddate(curdate(), 28)),
    ->                        (12,"Eva",adddate(curdate(), 38));
Query OK, 12 rows affected (0.01 sec)
Records: 12  Duplicates: 0  Warnings: 0

mysql>  select * from patient_appointment_details;
+------------+--------------+---------------------+
| patient_id | patient_name | appointment_date    |
+------------+--------------+---------------------+
|          1 | Justin       | 2021-08-06 19:13:30 |
|          2 | Veronica     | 2022-09-23 00:00:00 |
|          3 | George       | 2021-04-03 09:12:30 |
|          4 | Veena        | 2021-04-09 09:12:30 |
|          5 | Tanya        | 2021-04-08 09:12:30 |
|          6 | Peter        | 2021-04-04 07:07:20 |
|          7 | Smitha       | 2021-05-06 09:12:30 |
|          8 | Walter       | 2021-04-06 09:12:30 |
|          9 | Daniel       | 2021-04-10 09:12:30 |
|         10 | Erick        | 2022-10-13 00:00:00 |
|         11 | Atharv       | 2022-10-21 00:00:00 |
|         12 | Eva          | 2022-10-31 00:00:00 |
+------------+--------------+---------------------+
12 rows in set (0.00 sec)

mysql> select curdate();
+------------+
| curdate()  |
+------------+
| 2022-09-23 |
+------------+
1 row in set (0.00 sec)

mysql> SELECT * FROM patient_appointment_details WHERE DATE(appointment_date) > CURDATE();
+------------+--------------+---------------------+
| patient_id | patient_name | appointment_date    |
+------------+--------------+---------------------+
|         10 | Erick        | 2022-10-13 00:00:00 |
|         11 | Atharv       | 2022-10-21 00:00:00 |
|         12 | Eva          | 2022-10-31 00:00:00 |
+------------+--------------+---------------------+
3 rows in set (0.00 sec)

mysql>  #above one is #Get the details of patient appointment where appointment_date is after today
mysql> 
mysql>  SELECT * FROM patient_appointment_details WHERE DATE(appointment_date) > ADDDATE(CURDATE(), 7);
+------------+--------------+---------------------+
| patient_id | patient_name | appointment_date    |
+------------+--------------+---------------------+
|         10 | Erick        | 2022-10-13 00:00:00 |
|         11 | Atharv       | 2022-10-21 00:00:00 |
|         12 | Eva          | 2022-10-31 00:00:00 |
+------------+--------------+---------------------+
3 rows in set (0.00 sec)

mysql> #limit: specify the number of records to return
mysql> 
mysql> select * from hexa_emps;
+------+------------+---------+------------+
| eno  | ename      | salary  | dept       |
+------+------------+---------+------------+
| 1001 | Devi       | 47320.4 | HR         |
| 1002 | Abi        |  106320 | Operations |
| 1003 | Raja       | 77320.4 | HR         |
| 1004 | Thananya   | 71436.7 | Accounting |
| 1005 | Kanishka   | 58904.7 | HR         |
| 1006 | Dhayanithi | 78320.4 | Training   |
| 1007 | Surya      | 42300.5 | Testing    |
| 1008 | Sara       |  101300 | Training   |
| 1001 | Devi       | 47320.4 | HR         |
| 8001 | Priya      |   67000 | Operations |
| 2201 | Sara       |   44288 | Operations |
| 2202 | Sanesh     |   90288 | Operations |
|  454 | Saravana   |    NULL | NULL       |
+------+------------+---------+------------+
13 rows in set (0.00 sec)

mysql> select * from hexa_emps limit 5;
+------+----------+---------+------------+
| eno  | ename    | salary  | dept       |
+------+----------+---------+------------+
| 1001 | Devi     | 47320.4 | HR         |
| 1002 | Abi      |  106320 | Operations |
| 1003 | Raja     | 77320.4 | HR         |
| 1004 | Thananya | 71436.7 | Accounting |
| 1005 | Kanishka | 58904.7 | HR         |
+------+----------+---------+------------+
5 rows in set (0.00 sec)

mysql> select * from hexa_emps limit 7,2;
+------+-------+---------+----------+
| eno  | ename | salary  | dept     |
+------+-------+---------+----------+
| 1008 | Sara  |  101300 | Training |
| 1001 | Devi  | 47320.4 | HR       |
+------+-------+---------+----------+
2 rows in set (0.00 sec)

mysql>  select * from hexa_emps order by salary desc limit 3; 
+------+--------+--------+------------+
| eno  | ename  | salary | dept       |
+------+--------+--------+------------+
| 1002 | Abi    | 106320 | Operations |
| 1008 | Sara   | 101300 | Training   |
| 2202 | Sanesh |  90288 | Operations |
+------+--------+--------+------------+
3 rows in set (0.00 sec)

mysql>  #above one is top 3 salaried emps
mysql> 
mysql> select * from hexa_emps order by salary desc limit 1,5;
+------+------------+---------+------------+
| eno  | ename      | salary  | dept       |
+------+------------+---------+------------+
| 1008 | Sara       |  101300 | Training   |
| 2202 | Sanesh     |   90288 | Operations |
| 1006 | Dhayanithi | 78320.4 | Training   |
| 1003 | Raja       | 77320.4 | HR         |
| 1004 | Thananya   | 71436.7 | Accounting |
+------+------------+---------+------------+
5 rows in set (0.00 sec)

mysql> select * from hexa_emps order by salary desc limit 0,5;
+------+------------+---------+------------+
| eno  | ename      | salary  | dept       |
+------+------------+---------+------------+
| 1002 | Abi        |  106320 | Operations |
| 1008 | Sara       |  101300 | Training   |
| 2202 | Sanesh     |   90288 | Operations |
| 1006 | Dhayanithi | 78320.4 | Training   |
| 1003 | Raja       | 77320.4 | HR         |
+------+------------+---------+------------+
5 rows in set (0.00 sec)

mysql> #above one is top 5 salaried employees
mysql> 
mysql> select * from hexa_emps order by salary desc limit 1,1;
+------+-------+--------+----------+
| eno  | ename | salary | dept     |
+------+-------+--------+----------+
| 1008 | Sara  | 101300 | Training |
+------+-------+--------+----------+
1 row in set (0.00 sec)

mysql> #above one is finding the employee with second highest salary!
mysql> 
mysql> 
mysql> notee;






https://livesql.oracle.com/apex/livesql/file/content_O5AEB2HE08PYEPTGCFLZU9YCV.html


https://gist.github.com/julianhyde/686145afd0af9fdf61f7b57c5a7299b7

https://github.com/swacademy/Oracle/blob/master/HR.sql

https://livesql.oracle.com/apex/livesql/file/content_GV8MU6SITA2V3VYI179FAJUCY.html


mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| acl_virtual        |
| chargebee          |
| cts_virtual        |
| fsidemos           |
| hexafoundation     |
| hexasep2022        |
| hexaware           |
| hexaware2022       |
| hexaware_segue     |
| hexaware_segue_13  |
| hexaware_segue_3   |
| hexaware_segue_33  |
| mysql              |
| performance_schema |
| r                  |
| solverminds        |
| test               |
+--------------------+
18 rows in set (0.17 sec)

mysql> use hexasep2022;
Database changed
mysql> show tables;
+-----------------------------+
| Tables_in_hexasep2022       |
+-----------------------------+
| date1                       |
| emp1                        |
| emp2                        |
| emp3                        |
| hexa_emps                   |
| patient_appointment_details |
+-----------------------------+
6 rows in set (0.14 sec)

mysql> select * from hexa_emps;
+------+------------+---------+------------+
| eno  | ename      | salary  | dept       |
+------+------------+---------+------------+
| 1001 | Devi       | 47320.4 | HR         |
| 1002 | Abi        |  106320 | Operations |
| 1003 | Raja       | 77320.4 | HR         |
| 1004 | Thananya   | 71436.7 | Accounting |
| 1005 | Kanishka   | 58904.7 | HR         |
| 1006 | Dhayanithi | 78320.4 | Training   |
| 1007 | Surya      | 42300.5 | Testing    |
| 1008 | Sara       |  101300 | Training   |
| 1001 | Devi       | 47320.4 | HR         |
| 8001 | Priya      |   67000 | Operations |
| 2201 | Sara       |   44288 | Operations |
| 2202 | Sanesh     |   90288 | Operations |
|  454 | Saravana   |    NULL | NULL       |
+------+------------+---------+------------+
13 rows in set (0.29 sec)

mysql> #Constraints enforce limits to the data or type of data that can be inserted/updated/deleted from a table. The whole purpose of constraints is to maintain the data integrity during an update/delete/insert into a table.
mysql> 
mysql>  desc hexa_emps;
+--------+-------------+------+-----+---------+-------+
| Field  | Type        | Null | Key | Default | Extra |
+--------+-------------+------+-----+---------+-------+
| eno    | int(11)     | YES  |     | NULL    |       |
| ename  | varchar(20) | YES  |     | NULL    |       |
| salary | float       | YES  |     | NULL    |       |
| dept   | varchar(20) | YES  |     | NULL    |       |
+--------+-------------+------+-----+---------+-------+
4 rows in set (0.03 sec)

mysql>  #not null constraint:: does not allow to insert null values
mysql> 
mysql> create table stud(sno int not null,
    -> sname varchar(20),marks int not null);
Query OK, 0 rows affected (0.01 sec)

mysql>  desc stud;
+-------+-------------+------+-----+---------+-------+
| Field | Type        | Null | Key | Default | Extra |
+-------+-------------+------+-----+---------+-------+
| sno   | int(11)     | NO   |     | NULL    |       |
| sname | varchar(20) | YES  |     | NULL    |       |
| marks | int(11)     | NO   |     | NULL    |       |
+-------+-------------+------+-----+---------+-------+
3 rows in set (0.03 sec)

mysql> insert into stud values(1,'devi',90);
Query OK, 1 row affected (0.00 sec)

mysql>  insert into stud values(null,'abi',90);
ERROR 1048 (23000): Column 'sno' cannot be null
mysql>  insert into stud values(2,'abi',null);
ERROR 1048 (23000): Column 'marks' cannot be null
mysql> insert into stud values(2,null,100);
Query OK, 1 row affected (0.00 sec)

mysql> insert into stud(sname) values('devi');
ERROR 1364 (HY000): Field 'sno' doesn't have a default value
mysql> select * from stud;
+-----+-------+-------+
| sno | sname | marks |
+-----+-------+-------+
|   1 | devi  |    90 |
|   2 | NULL  |   100 |
+-----+-------+-------+
2 rows in set (0.00 sec)

mysql>  alter table stud modify marks int;
Query OK, 2 rows affected (0.03 sec)
Records: 2  Duplicates: 0  Warnings: 0

mysql>  desc stud;
+-------+-------------+------+-----+---------+-------+
| Field | Type        | Null | Key | Default | Extra |
+-------+-------------+------+-----+---------+-------+
| sno   | int(11)     | NO   |     | NULL    |       |
| sname | varchar(20) | YES  |     | NULL    |       |
| marks | int(11)     | YES  |     | NULL    |       |
+-------+-------------+------+-----+---------+-------+
3 rows in set (0.03 sec)

mysql>  #above syntax we convert not null to null
mysql> 
mysql> alter table stud modify sname varchar(20) not null;
ERROR 1265 (01000): Data truncated for column 'sname' at row 2
mysql> delete from stud where sname is null;
Query OK, 1 row affected (0.00 sec)

mysql> alter table stud modify sname varchar(20) not null;
Query OK, 1 row affected (0.03 sec)
Records: 1  Duplicates: 0  Warnings: 0

mysql>  desc stud;
+-------+-------------+------+-----+---------+-------+
| Field | Type        | Null | Key | Default | Extra |
+-------+-------------+------+-----+---------+-------+
| sno   | int(11)     | NO   |     | NULL    |       |
| sname | varchar(20) | NO   |     | NULL    |       |
| marks | int(11)     | YES  |     | NULL    |       |
+-------+-------------+------+-----+---------+-------+
3 rows in set (0.03 sec)

mysql>  #not null constraint can be added by create table and alter table!
mysql> 
mysql>  #primary key constraint::
mysql> 
mysql>  #must contain unique values,cannot contain null values
mysql> 
mysql>  create table stud1(sno int primary key,
    -> sname varchar(20));
Query OK, 0 rows affected (0.02 sec)

mysql> desc stud1;
+-------+-------------+------+-----+---------+-------+
| Field | Type        | Null | Key | Default | Extra |
+-------+-------------+------+-----+---------+-------+
| sno   | int(11)     | NO   | PRI | NULL    |       |
| sname | varchar(20) | YES  |     | NULL    |       |
+-------+-------------+------+-----+---------+-------+
2 rows in set (0.03 sec)

mysql>   insert into stud1 values(1,'devi');
Query OK, 1 row affected (0.00 sec)

mysql>   insert into stud1 values(1,'devi');
ERROR 1062 (23000): Duplicate entry '1' for key 'PRIMARY'
mysql> 
mysql>  insert into stud1 values(null,'devi');
ERROR 1048 (23000): Column 'sno' cannot be null
mysql> 
mysql>  select * from stud1;
+-----+-------+
| sno | sname |
+-----+-------+
|   1 | devi  |
+-----+-------+
1 row in set (0.00 sec)

mysql>  alter table stud1 drop primary key;
Query OK, 1 row affected (0.03 sec)
Records: 1  Duplicates: 0  Warnings: 0

mysql> desc stud1;
+-------+-------------+------+-----+---------+-------+
| Field | Type        | Null | Key | Default | Extra |
+-------+-------------+------+-----+---------+-------+
| sno   | int(11)     | NO   |     | NULL    |       |
| sname | varchar(20) | YES  |     | NULL    |       |
+-------+-------------+------+-----+---------+-------+
2 rows in set (0.03 sec)

mysql>  #2 types of primary key creation::: column level syntax,table level syntax
mysql> 
mysql>  create table stud2(sno int,sname varchar(20),
    -> marks int,primary key(sno));
Query OK, 0 rows affected (0.01 sec)

mysql> #above one is table level syntax primary key
mysql> 
mysql> desc stud2;
+-------+-------------+------+-----+---------+-------+
| Field | Type        | Null | Key | Default | Extra |
+-------+-------------+------+-----+---------+-------+
| sno   | int(11)     | NO   | PRI | 0       |       |
| sname | varchar(20) | YES  |     | NULL    |       |
| marks | int(11)     | YES  |     | NULL    |       |
+-------+-------------+------+-----+---------+-------+
3 rows in set (0.03 sec)

mysql>  insert into stud2 values(1,'devi',90);
Query OK, 1 row affected (0.00 sec)

mysql>  insert into stud2 values(1,'devi',90);
ERROR 1062 (23000): Duplicate entry '1' for key 'PRIMARY'
mysql> 
mysql> select table_name,constraint_name,constraint_type,constraint_schema
    -> from
    -> information_schema.table_constraints
    -> where table_name='stud2';
+------------+-----------------+-----------------+-------------------+
| table_name | constraint_name | constraint_type | constraint_schema |
+------------+-----------------+-----------------+-------------------+
| stud2      | PRIMARY         | PRIMARY KEY     | chargebee         |
| stud2      | PRIMARY         | PRIMARY KEY     | hexasep2022       |
| stud2      | PRIMARY         | PRIMARY KEY     | hexaware          |
| stud2      | PRIMARY         | PRIMARY KEY     | hexaware2022      |
| stud2      | PRIMARY         | PRIMARY KEY     | hexaware_segue    |
| stud2      | PRIMARY         | PRIMARY KEY     | hexaware_segue_13 |
| stud2      | PRIMARY         | PRIMARY KEY     | hexaware_segue_3  |
| stud2      | PRIMARY         | PRIMARY KEY     | hexaware_segue_33 |
+------------+-----------------+-----------------+-------------------+
8 rows in set (0.18 sec)

mysql> #information_schema is a built in database automatically 
mysql> #created by mysql server engine
mysql> #table_constraints is a built in table
mysql> 
mysql> show create table stud2;
+-------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Table | Create Table                                                                                                                                                                                  |
+-------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| stud2 | CREATE TABLE `stud2` (
  `sno` int(11) NOT NULL DEFAULT '0',
  `sname` varchar(20) DEFAULT NULL,
  `marks` int(11) DEFAULT NULL,
  PRIMARY KEY (`sno`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 |
+-------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row in set (0.00 sec)

mysql>  #InnoDB is the default MySQL storage engine. 
mysql> 
mysql>  show create table hexa_emps;
+-----------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Table     | Create Table                                                                                                                                                                                         |
+-----------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| hexa_emps | CREATE TABLE `hexa_emps` (
  `eno` int(11) DEFAULT NULL,
  `ename` varchar(20) DEFAULT NULL,
  `salary` float DEFAULT NULL,
  `dept` varchar(20) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1 |
+-----------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row in set (0.00 sec)

mysql>  create table stud3 (sno int,sname varchar(20));
Query OK, 0 rows affected (0.01 sec)

mysql> desc stud3;
+-------+-------------+------+-----+---------+-------+
| Field | Type        | Null | Key | Default | Extra |
+-------+-------------+------+-----+---------+-------+
| sno   | int(11)     | YES  |     | NULL    |       |
| sname | varchar(20) | YES  |     | NULL    |       |
+-------+-------------+------+-----+---------+-------+
2 rows in set (0.01 sec)

mysql> insert into stud3 values(1,'devi');
Query OK, 1 row affected (0.00 sec)

mysql> insert into stud3 values(1,'devi');
Query OK, 1 row affected (0.00 sec)

mysql> insert into stud3 values(2,'abi');
Query OK, 1 row affected (0.00 sec)

mysql> select * from stud3;
+------+-------+
| sno  | sname |
+------+-------+
|    1 | devi  |
|    1 | devi  |
|    2 | abi   |
+------+-------+
3 rows in set (0.00 sec)

mysql> alter table stud3 add primary key(sno);
ERROR 1062 (23000): Duplicate entry '1' for key 'PRIMARY'
mysql>  delete from stud3 where sno=1;
Query OK, 2 rows affected (0.01 sec)

mysql> alter table stud3 add primary key(sno);
Query OK, 1 row affected (0.02 sec)
Records: 1  Duplicates: 0  Warnings: 0

mysql> desc stud3;
+-------+-------------+------+-----+---------+-------+
| Field | Type        | Null | Key | Default | Extra |
+-------+-------------+------+-----+---------+-------+
| sno   | int(11)     | NO   | PRI | 0       |       |
| sname | varchar(20) | YES  |     | NULL    |       |
+-------+-------------+------+-----+---------+-------+
2 rows in set (0.01 sec)

mysql>  create table stud4(sno int primary key,dno int primary key,
    -> sname varchar(20));
ERROR 1068 (42000): Multiple primary key defined
mysql> 
mysql> #table cannot have more than one primary key
mysql> 
mysql> create table product(pid int,pname varchar(20),brand varchar(20),
    -> primary key(pname,brand));
Query OK, 0 rows affected (0.01 sec)

mysql>  #candidate key or composite key::
mysql> 
mysql> #when the table needs to identify each record
mysql>  #with more than one attribute uniquely
mysql> #composite key can be created by only table level syntax
mysql> 
mysql> desc product;
+-------+-------------+------+-----+---------+-------+
| Field | Type        | Null | Key | Default | Extra |
+-------+-------------+------+-----+---------+-------+
| pid   | int(11)     | YES  |     | NULL    |       |
| pname | varchar(20) | NO   | PRI |         |       |
| brand | varchar(20) | NO   | PRI |         |       |
+-------+-------------+------+-----+---------+-------+
3 rows in set (0.01 sec)

mysql> insert into product values(1,'Laptop','Dell');
Query OK, 1 row affected (0.00 sec)

mysql> insert into product values(2,'Laptop','Samsung');
Query OK, 1 row affected (0.00 sec)

mysql>  insert into product values(3,'Bluetooth','Dell');
Query OK, 1 row affected (0.00 sec)

mysql> insert into product values(21,'Laptop','HP');
Query OK, 1 row affected (0.00 sec)

mysql> insert into product values(21,'Laptop','HP');
ERROR 1062 (23000): Duplicate entry 'Laptop-HP' for key 'PRIMARY'
mysql> 
mysql> select * from product;
+------+-----------+---------+
| pid  | pname     | brand   |
+------+-----------+---------+
|    3 | Bluetooth | Dell    |
|    1 | Laptop    | Dell    |
|   21 | Laptop    | HP      |
|    2 | Laptop    | Samsung |
+------+-----------+---------+
4 rows in set (0.00 sec)

mysql> select table_name,constraint_name,constraint_type,constraint_schema
    -> from
    -> information_schema.table_constraints
    -> where table_name='product';
+------------+-----------------+-----------------+-------------------+
| table_name | constraint_name | constraint_type | constraint_schema |
+------------+-----------------+-----------------+-------------------+
| product    | PRIMARY         | PRIMARY KEY     | chargebee         |
| product    | PRIMARY         | PRIMARY KEY     | hexasep2022       |
+------------+-----------------+-----------------+-------------------+
2 rows in set (0.16 sec)

mysql> desc product;
+-------+-------------+------+-----+---------+-------+
| Field | Type        | Null | Key | Default | Extra |
+-------+-------------+------+-----+---------+-------+
| pid   | int(11)     | YES  |     | NULL    |       |
| pname | varchar(20) | NO   | PRI |         |       |
| brand | varchar(20) | NO   | PRI |         |       |
+-------+-------------+------+-----+---------+-------+
3 rows in set (0.01 sec)

mysql> alter table product drop primary key;
Query OK, 4 rows affected (0.02 sec)
Records: 4  Duplicates: 0  Warnings: 0

mysql> desc product;
+-------+-------------+------+-----+---------+-------+
| Field | Type        | Null | Key | Default | Extra |
+-------+-------------+------+-----+---------+-------+
| pid   | int(11)     | YES  |     | NULL    |       |
| pname | varchar(20) | NO   |     |         |       |
| brand | varchar(20) | NO   |     |         |       |
+-------+-------------+------+-----+---------+-------+
3 rows in set (0.01 sec)

mysql> #unique key: does not allow duplicates but accept null value
mysql> 
mysql> #more than one column can be marked with unique
mysql> 
mysql>  create table items1(id int primary key,
    -> email varchar(20) unique,mobno int unique);
Query OK, 0 rows affected (0.02 sec)

mysql>  desc items1;
+-------+-------------+------+-----+---------+-------+
| Field | Type        | Null | Key | Default | Extra |
+-------+-------------+------+-----+---------+-------+
| id    | int(11)     | NO   | PRI | NULL    |       |
| email | varchar(20) | YES  | UNI | NULL    |       |
| mobno | int(11)     | YES  | UNI | NULL    |       |
+-------+-------------+------+-----+---------+-------+
3 rows in set (0.05 sec)

mysql>  insert into items1 values(1,'xx@gmail.com',89);
Query OK, 1 row affected (0.01 sec)

mysql>  insert into items1 values(2,'xx@gmail.com',89);
ERROR 1062 (23000): Duplicate entry 'xx@gmail.com' for key 'email'
mysql> insert into items1 values(2,'xxx@gmail.com',89);
ERROR 1062 (23000): Duplicate entry '89' for key 'mobno'
mysql> 
mysql> insert into items1 values(2,null,null);
Query OK, 1 row affected (0.00 sec)

mysql> select * from items1;
+----+--------------+-------+
| id | email        | mobno |
+----+--------------+-------+
|  1 | xx@gmail.com |    89 |
|  2 | NULL         |  NULL |
+----+--------------+-------+
2 rows in set (0.00 sec)

mysql> create table studdum(rno int,email varchar(20),sname varchar(20),
    -> unique(rno,email));
Query OK, 0 rows affected (0.04 sec)

mysql>  #above syntax is table level unique key, composite unique key
mysql> 
mysql> desc studdum;
+-------+-------------+------+-----+---------+-------+
| Field | Type        | Null | Key | Default | Extra |
+-------+-------------+------+-----+---------+-------+
| rno   | int(11)     | YES  | MUL | NULL    |       |
| email | varchar(20) | YES  |     | NULL    |       |
| sname | varchar(20) | YES  |     | NULL    |       |
+-------+-------------+------+-----+---------+-------+
3 rows in set (0.10 sec)

mysql>  insert into studdum values(1,'xx@gmail.com','devi');
Query OK, 1 row affected (0.00 sec)

mysql>  insert into studdum values(1,'yy@gmail.com','devi');
Query OK, 1 row affected (0.01 sec)

mysql>  insert into studdum values(1,'zz@gmail.com','devi');
Query OK, 1 row affected (0.00 sec)

mysql> insert into studdum values(2,'zz@gmail.com','devi');
Query OK, 1 row affected (0.01 sec)

mysql> insert into studdum values(2,'zz@gmail.com','devi');
ERROR 1062 (23000): Duplicate entry '2-zz@gmail.com' for key 'rno'
mysql> insert into studdum values(2,'zz@gmail.com','devi');
ERROR 1062 (23000): Duplicate entry '2-zz@gmail.com' for key 'rno'
mysql> 
mysql>  select * from studdum;
+------+--------------+-------+
| rno  | email        | sname |
+------+--------------+-------+
|    1 | xx@gmail.com | devi  |
|    1 | yy@gmail.com | devi  |
|    1 | zz@gmail.com | devi  |
|    2 | zz@gmail.com | devi  |
+------+--------------+-------+
4 rows in set (0.00 sec)

mysql> #You have to use Index because an index for faster searches is created for each unique key internally.
mysql> 
mysql> #. To drop a non-primary key index, use the DROP INDEX command
mysql> 
mysql>  show index from studdum;
+---------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+
| Table   | Non_unique | Key_name | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment |
+---------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+
| studdum |          0 | rno      |            1 | rno         | A         |           4 |     NULL | NULL   | YES  | BTREE      |         |               |
| studdum |          0 | rno      |            2 | email       | A         |           4 |     NULL | NULL   | YES  | BTREE      |         |               |
+---------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+
2 rows in set (0.00 sec)

mysql>  alter table studdum drop index rno;
Query OK, 0 rows affected (0.04 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> #above command dropping the unique key
mysql> 
mysql> desc studdum;
+-------+-------------+------+-----+---------+-------+
| Field | Type        | Null | Key | Default | Extra |
+-------+-------------+------+-----+---------+-------+
| rno   | int(11)     | YES  |     | NULL    |       |
| email | varchar(20) | YES  |     | NULL    |       |
| sname | varchar(20) | YES  |     | NULL    |       |
+-------+-------------+------+-----+---------+-------+
3 rows in set (0.05 sec)

mysql>  alter table studdum add constraint hexaunique
    ->  unique(rno,email);
Query OK, 0 rows affected (0.05 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql>  #hexaunique is a index name or unique key name
mysql> 
mysql>  show index from studdum;
+---------+------------+------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+
| Table   | Non_unique | Key_name   | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment |
+---------+------------+------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+
| studdum |          0 | hexaunique |            1 | rno         | A         |           4 |     NULL | NULL   | YES  | BTREE      |         |               |
| studdum |          0 | hexaunique |            2 | email       | A         |           4 |     NULL | NULL   | YES  | BTREE      |         |               |
+---------+------------+------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+
2 rows in set (0.00 sec)

mysql> desc studdum;
+-------+-------------+------+-----+---------+-------+
| Field | Type        | Null | Key | Default | Extra |
+-------+-------------+------+-----+---------+-------+
| rno   | int(11)     | YES  | MUL | NULL    |       |
| email | varchar(20) | YES  |     | NULL    |       |
| sname | varchar(20) | YES  |     | NULL    |       |
+-------+-------------+------+-----+---------+-------+
3 rows in set (0.05 sec)

mysql>  alter table studdum drop index hexaunique;
Query OK, 0 rows affected (0.04 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> desc studdum;
+-------+-------------+------+-----+---------+-------+
| Field | Type        | Null | Key | Default | Extra |
+-------+-------------+------+-----+---------+-------+
| rno   | int(11)     | YES  |     | NULL    |       |
| email | varchar(20) | YES  |     | NULL    |       |
| sname | varchar(20) | YES  |     | NULL    |       |
+-------+-------------+------+-----+---------+-------+
3 rows in set (0.04 sec)

mysql>  alter table studdum add
    ->  unique(rno,email);
Query OK, 0 rows affected (0.06 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql>  show index from studdum;
+---------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+
| Table   | Non_unique | Key_name | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment |
+---------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+
| studdum |          0 | rno      |            1 | rno         | A         |           4 |     NULL | NULL   | YES  | BTREE      |         |               |
| studdum |          0 | rno      |            2 | email       | A         |           4 |     NULL | NULL   | YES  | BTREE      |         |               |
+---------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+
2 rows in set (0.00 sec)

mysql> #default constraint::
mysql> 
mysql> #specify a default value for a column
mysql> 
mysql> desc hexa_emps;
+--------+-------------+------+-----+---------+-------+
| Field  | Type        | Null | Key | Default | Extra |
+--------+-------------+------+-----+---------+-------+
| eno    | int(11)     | YES  |     | NULL    |       |
| ename  | varchar(20) | YES  |     | NULL    |       |
| salary | float       | YES  |     | NULL    |       |
| dept   | varchar(20) | YES  |     | NULL    |       |
+--------+-------------+------+-----+---------+-------+
4 rows in set (0.06 sec)

mysql> 
mysql> create table items(id int,itemname varchar(20),
    -> qty int default 100,remarks varchar(20) default 'Excellent');
Query OK, 0 rows affected (0.03 sec)

mysql> desc items;
+----------+-------------+------+-----+-----------+-------+
| Field    | Type        | Null | Key | Default   | Extra |
+----------+-------------+------+-----+-----------+-------+
| id       | int(11)     | YES  |     | NULL      |       |
| itemname | varchar(20) | YES  |     | NULL      |       |
| qty      | int(11)     | YES  |     | 100       |       |
| remarks  | varchar(20) | YES  |     | Excellent |       |
+----------+-------------+------+-----+-----------+-------+
4 rows in set (0.13 sec)

mysql> insert into items values(1,'laptop',80,'good');
Query OK, 1 row affected (0.00 sec)

mysql> insert into items(id,itemname) values(2,'smps');
Query OK, 1 row affected (0.00 sec)

mysql> insert into items(id,itemname,qty) values(4,'inverter',400);
Query OK, 1 row affected (0.00 sec)

mysql> insert into items values(3,'ramchipset',null,null);
Query OK, 1 row affected (0.00 sec)

mysql>  select * from items;
+------+------------+------+-----------+
| id   | itemname   | qty  | remarks   |
+------+------------+------+-----------+
|    1 | laptop     |   80 | good      |
|    2 | smps       |  100 | Excellent |
|    4 | inverter   |  400 | Excellent |
|    3 | ramchipset | NULL | NULL      |
+------+------------+------+-----------+
4 rows in set (0.00 sec)

mysql> alter table items alter column qty set default 1000;
Query OK, 0 rows affected (0.04 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> desc items;
+----------+-------------+------+-----+-----------+-------+
| Field    | Type        | Null | Key | Default   | Extra |
+----------+-------------+------+-----+-----------+-------+
| id       | int(11)     | YES  |     | NULL      |       |
| itemname | varchar(20) | YES  |     | NULL      |       |
| qty      | int(11)     | YES  |     | 1000      |       |
| remarks  | varchar(20) | YES  |     | Excellent |       |
+----------+-------------+------+-----+-----------+-------+
4 rows in set (0.04 sec)

mysql>  insert into items(id,itemname) values(41,'speaker');
Query OK, 1 row affected (0.00 sec)

mysql>  select * from items;
+------+------------+------+-----------+
| id   | itemname   | qty  | remarks   |
+------+------------+------+-----------+
|    1 | laptop     |   80 | good      |
|    2 | smps       |  100 | Excellent |
|    4 | inverter   |  400 | Excellent |
|    3 | ramchipset | NULL | NULL      |
|   41 | speaker    | 1000 | Excellent |
+------+------------+------+-----------+
5 rows in set (0.00 sec)

mysql> alter table items alter column qty drop default;
Query OK, 0 rows affected (0.04 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> desc items;
+----------+-------------+------+-----+-----------+-------+
| Field    | Type        | Null | Key | Default   | Extra |
+----------+-------------+------+-----+-----------+-------+
| id       | int(11)     | YES  |     | NULL      |       |
| itemname | varchar(20) | YES  |     | NULL      |       |
| qty      | int(11)     | YES  |     | NULL      |       |
| remarks  | varchar(20) | YES  |     | Excellent |       |
+----------+-------------+------+-----+-----------+-------+
4 rows in set (0.08 sec)

mysql> alter table items alter column qty set default 10000;
Query OK, 0 rows affected (0.04 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> desc items;
+----------+-------------+------+-----+-----------+-------+
| Field    | Type        | Null | Key | Default   | Extra |
+----------+-------------+------+-----+-----------+-------+
| id       | int(11)     | YES  |     | NULL      |       |
| itemname | varchar(20) | YES  |     | NULL      |       |
| qty      | int(11)     | YES  |     | 10000     |       |
| remarks  | varchar(20) | YES  |     | Excellent |       |
+----------+-------------+------+-----+-----------+-------+
4 rows in set (0.05 sec)

mysql> notee;



mysql> #foreign key constraint::
mysql> 
mysql> #parent - child relationship
mysql> 
mysql> #enforce referential integrity
mysql> 
mysql> #A referential integrity constraint is also known as foreign key constraint
mysql> 
mysql> create table collegestud(id int primary key,sname varchar(20));
Query OK, 0 rows affected (0.04 sec)

mysql> create table exam(sid int,sname varchar(20),fees int,
    -> constraint hexfor foreign key(sid) references
    -> collegestud(id));
Query OK, 0 rows affected (0.02 sec)

mysql> desc collegestud;
+-------+-------------+------+-----+---------+-------+
| Field | Type        | Null | Key | Default | Extra |
+-------+-------------+------+-----+---------+-------+
| id    | int(11)     | NO   | PRI | NULL    |       |
| sname | varchar(20) | YES  |     | NULL    |       |
+-------+-------------+------+-----+---------+-------+
2 rows in set (0.01 sec)

mysql> desc exam;
+-------+-------------+------+-----+---------+-------+
| Field | Type        | Null | Key | Default | Extra |
+-------+-------------+------+-----+---------+-------+
| sid   | int(11)     | YES  | MUL | NULL    |       |
| sname | varchar(20) | YES  |     | NULL    |       |
| fees  | int(11)     | YES  |     | NULL    |       |
+-------+-------------+------+-----+---------+-------+
3 rows in set (0.02 sec)

mysql> #foreign key: allow null +allow parent table records!
mysql> 
mysql> insert into collegestud values(1,'devi');
Query OK, 1 row affected (0.13 sec)

mysql>  insert into collegestud values(2,'abi');
Query OK, 1 row affected (0.02 sec)

mysql> insert into collegestud values(3,'rajan');
Query OK, 1 row affected (0.00 sec)

mysql> insert into collegestud values(4,'thananya');
Query OK, 1 row affected (0.00 sec)

mysql> insert into collegestud values(42,'kanishka');
Query OK, 1 row affected (0.00 sec)

mysql> select * from collegestud;
+----+----------+
| id | sname    |
+----+----------+
|  1 | devi     |
|  2 | abi      |
|  3 | rajan    |
|  4 | thananya |
| 42 | kanishka |
+----+----------+
5 rows in set (0.00 sec)

mysql> insert into exam values(1,'devi',56000);
Query OK, 1 row affected (0.00 sec)

mysql>   insert into exam values(1,'devi',96000);
Query OK, 1 row affected (0.00 sec)

mysql>  insert into exam values(2,'abi',96000);
Query OK, 1 row affected (0.00 sec)

mysql>  insert into exam values(11,'devi',56000);
ERROR 1452 (23000): Cannot add or update a child row: a foreign key constraint fails (`hexasep2022`.`exam`, CONSTRAINT `hexfor` FOREIGN KEY (`sid`) REFERENCES `collegestud` (`id`))
mysql> 
mysql> select * from collegestud;
+----+----------+
| id | sname    |
+----+----------+
|  1 | devi     |
|  2 | abi      |
|  3 | rajan    |
|  4 | thananya |
| 42 | kanishka |
+----+----------+
5 rows in set (0.00 sec)

mysql> select * from exam;
+------+-------+-------+
| sid  | sname | fees  |
+------+-------+-------+
|    1 | devi  | 56000 |
|    1 | devi  | 96000 |
|    2 | abi   | 96000 |
+------+-------+-------+
3 rows in set (0.00 sec)

mysql> #parent table :: collegestud , child table:: exam
mysql> 
mysql>  insert into exam values(null,null,96000);
Query OK, 1 row affected (0.02 sec)

mysql>  update exam set sid=43 where sname is null;
ERROR 1452 (23000): Cannot add or update a child row: a foreign key constraint fails (`hexasep2022`.`exam`, CONSTRAINT `hexfor` FOREIGN KEY (`sid`) REFERENCES `collegestud` (`id`))
mysql> 
mysql>  update exam set sid=42 where sname is null;
Query OK, 1 row affected (0.00 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql> select * from exam;
+------+-------+-------+
| sid  | sname | fees  |
+------+-------+-------+
|    1 | devi  | 56000 |
|    1 | devi  | 96000 |
|    2 | abi   | 96000 |
|   42 | NULL  | 96000 |
+------+-------+-------+
4 rows in set (0.00 sec)

mysql> select * from collegestud;
+----+----------+
| id | sname    |
+----+----------+
|  1 | devi     |
|  2 | abi      |
|  3 | rajan    |
|  4 | thananya |
| 42 | kanishka |
+----+----------+
5 rows in set (0.00 sec)

mysql>  show index from collegestud;
+-------------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+
| Table       | Non_unique | Key_name | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment |
+-------------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+
| collegestud |          0 | PRIMARY  |            1 | id          | A         |           5 |     NULL | NULL   |      | BTREE      |         |               |
+-------------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+
1 row in set (0.00 sec)

mysql>  show index from exam;
+-------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+
| Table | Non_unique | Key_name | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment |
+-------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+
| exam  |          1 | hexfor   |            1 | sid         | A         |           4 |     NULL | NULL   | YES  | BTREE      |         |               |
+-------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+
1 row in set (0.00 sec)

mysql> alter table collegestud drop primary key;
ERROR 1025 (HY000): Error on rename of '.\hexasep2022\#sql-904_1' to '.\hexasep2022\collegestud' (errno: 150)
mysql> 
mysql> drop table collegestud;
ERROR 1217 (23000): Cannot delete or update a parent row: a foreign key constraint fails
mysql> 
mysql> select * from collegestud;
+----+----------+
| id | sname    |
+----+----------+
|  1 | devi     |
|  2 | abi      |
|  3 | rajan    |
|  4 | thananya |
| 42 | kanishka |
+----+----------+
5 rows in set (0.00 sec)

mysql> select * from exam;
+------+-------+-------+
| sid  | sname | fees  |
+------+-------+-------+
|    1 | devi  | 56000 |
|    1 | devi  | 96000 |
|    2 | abi   | 96000 |
|   42 | NULL  | 96000 |
+------+-------+-------+
4 rows in set (0.00 sec)

=========================================================================================
mysql> select * from collegestudl
    -> ;
ERROR 1046 (3D000): No database selected
mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| acl_virtual        |
| chargebee          |
| cts_virtual        |
| fsidemos           |
| hexafoundation     |
| hexasep2022        |
| hexaware           |
| hexaware2022       |
| hexaware_segue     |
| hexaware_segue_13  |
| hexaware_segue_3   |
| hexaware_segue_33  |
| mysql              |
| performance_schema |
| r                  |
| solverminds        |
| test               |
+--------------------+
18 rows in set (0.00 sec)

mysql> use hexasep2022;
Database changed
mysql> select * from collegestud;
+----+----------+
| id | sname    |
+----+----------+
|  1 | devi     |
|  2 | abi      |
|  3 | rajan    |
|  4 | thananya |
| 42 | kanishka |
+----+----------+
5 rows in set (0.00 sec)

mysql> select * from exam;
+------+-------+-------+
| sid  | sname | fees  |
+------+-------+-------+
|    1 | devi  | 56000 |
|    1 | devi  | 96000 |
|    2 | abi   | 96000 |
|   42 | NULL  | 96000 |
+------+-------+-------+
4 rows in set (0.00 sec)

mysql> delete from collegestud where id=1;
ERROR 1451 (23000): Cannot delete or update a parent row: a foreign key constraint fails (`hexasep2022`.`exam`, CONSTRAINT `hexfor` FOREIGN KEY (`sid`) REFERENCES `collegestud` (`id`))
mysql> 
mysql> delete from collegestud where id=3;
Query OK, 1 row affected (0.00 sec)

mysql> select * from collegestud;
+----+----------+
| id | sname    |
+----+----------+
|  1 | devi     |
|  2 | abi      |
|  4 | thananya |
| 42 | kanishka |
+----+----------+
4 rows in set (0.00 sec)

mysql> select * from exam;
+------+-------+-------+
| sid  | sname | fees  |
+------+-------+-------+
|    1 | devi  | 56000 |
|    1 | devi  | 96000 |
|    2 | abi   | 96000 |
|   42 | NULL  | 96000 |
+------+-------+-------+
4 rows in set (0.00 sec)

mysql> create table certificate(sno int,cname varchar(20));
Query OK, 0 rows affected (0.01 sec)

mysql>  alter table certificate add constraint hexa_foreign
    -> foreign key(sno) references collegestud(id) on delete cascade;
Query OK, 0 rows affected (0.02 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> desc certificate;
+-------+-------------+------+-----+---------+-------+
| Field | Type        | Null | Key | Default | Extra |
+-------+-------------+------+-----+---------+-------+
| sno   | int(11)     | YES  | MUL | NULL    |       |
| cname | varchar(20) | YES  |     | NULL    |       |
+-------+-------------+------+-----+---------+-------+
2 rows in set (0.01 sec)

mysql>  #on delete cascade:: delete the parent table record
mysql> #automatically delete the child table matching records
mysql> 
mysql> select * from collegestud;
+----+----------+
| id | sname    |
+----+----------+
|  1 | devi     |
|  2 | abi      |
|  4 | thananya |
| 42 | kanishka |
+----+----------+
4 rows in set (0.00 sec)

mysql> #collegestud is the parent table,certificate is the child table
mysql>  #exam is the child table
mysql> 
mysql>  insert into certificate values(1,'java');
Query OK, 1 row affected (0.00 sec)

mysql> insert into certificate values(45,'php');
ERROR 1452 (23000): Cannot add or update a child row: a foreign key constraint fails (`hexasep2022`.`certificate`, CONSTRAINT `hexa_foreign` FOREIGN KEY (`sno`) REFERENCES `collegestud` (`id`) ON DELETE CASCADE)
mysql> 
mysql> insert into certificate values(42,'php');
Query OK, 1 row affected (0.00 sec)

mysql> select * from collegestud;
+----+----------+
| id | sname    |
+----+----------+
|  1 | devi     |
|  2 | abi      |
|  4 | thananya |
| 42 | kanishka |
+----+----------+
4 rows in set (0.00 sec)

mysql> select * from exam;
+------+-------+-------+
| sid  | sname | fees  |
+------+-------+-------+
|    1 | devi  | 56000 |
|    1 | devi  | 96000 |
|    2 | abi   | 96000 |
|   42 | NULL  | 96000 |
+------+-------+-------+
4 rows in set (0.00 sec)

mysql> select * from certificate;
+------+-------+
| sno  | cname |
+------+-------+
|    1 | java  |
|   42 | php   |
+------+-------+
2 rows in set (0.00 sec)

mysql> delete from collegestud where id=1;
ERROR 1451 (23000): Cannot delete or update a parent row: a foreign key constraint fails (`hexasep2022`.`exam`, CONSTRAINT `hexfor` FOREIGN KEY (`sid`) REFERENCES `collegestud` (`id`))
mysql> 
mysql>  alter table exam add constraint hexa_foreign5433
    ->  foreign key(sid) references collegestud(id) on delete cascade;
Query OK, 4 rows affected (0.10 sec)
Records: 4  Duplicates: 0  Warnings: 0

mysql> #exam and certificate table both having on delete cascade feature
mysql> 
mysql> delete from collegestud where id=1;
Query OK, 1 row affected (0.00 sec)

mysql>  #above one parent table record is deleted!
mysql> 
mysql> select * from collegestud;
+----+----------+
| id | sname    |
+----+----------+
|  2 | abi      |
|  4 | thananya |
| 42 | kanishka |
+----+----------+
3 rows in set (0.00 sec)

mysql> select * from exam;
+------+-------+-------+
| sid  | sname | fees  |
+------+-------+-------+
|    2 | abi   | 96000 |
|   42 | NULL  | 96000 |
+------+-------+-------+
2 rows in set (0.00 sec)

mysql> select * from certificate;
+------+-------+
| sno  | cname |
+------+-------+
|   42 | php   |
+------+-------+
1 row in set (0.00 sec)

mysql> show index from exam;
+-------+------------+------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+
| Table | Non_unique | Key_name         | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment |
+-------+------------+------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+
| exam  |          1 | hexa_foreign5433 |            1 | sid         | A         |           2 |     NULL | NULL   | YES  | BTREE      |         |               |
+-------+------------+------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+
1 row in set (0.00 sec)

mysql>  show index from certificate;
+-------------+------------+--------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+
| Table       | Non_unique | Key_name     | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment |
+-------------+------------+--------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+
| certificate |          1 | hexa_foreign |            1 | sno         | A         |           1 |     NULL | NULL   | YES  | BTREE      |         |               |
+-------------+------------+--------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+
1 row in set (0.00 sec)

mysql>  alter table certificate drop foreign key hexa_foreign;
Query OK, 1 row affected (0.07 sec)
Records: 1  Duplicates: 0  Warnings: 0

mysql> #now certificate is completely independent table
mysql> 
mysql> create table neworder(ordno int,bookid int,bookname varchar(20),
    -> primary key(ordno,bookid));
Query OK, 0 rows affected (0.01 sec)

mysql> 
mysql> desc neworder;
+----------+-------------+------+-----+---------+-------+
| Field    | Type        | Null | Key | Default | Extra |
+----------+-------------+------+-----+---------+-------+
| ordno    | int(11)     | NO   | PRI | 0       |       |
| bookid   | int(11)     | NO   | PRI | 0       |       |
| bookname | varchar(20) | YES  |     | NULL    |       |
+----------+-------------+------+-----+---------+-------+
3 rows in set (0.02 sec)

mysql> create table newpurchase(invoiceno int not null unique primary key,
    -> ord_no int,book_id int,foreign key(ord_no,book_id)
    -> references neworder(ordno,bookid));
Query OK, 0 rows affected (0.01 sec)

mysql> desc newpurchase;
+-----------+---------+------+-----+---------+-------+
| Field     | Type    | Null | Key | Default | Extra |
+-----------+---------+------+-----+---------+-------+
| invoiceno | int(11) | NO   | PRI | NULL    |       |
| ord_no    | int(11) | YES  | MUL | NULL    |       |
| book_id   | int(11) | YES  |     | NULL    |       |
+-----------+---------+------+-----+---------+-------+
3 rows in set (0.01 sec)

mysql> show index from neworder;
+----------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+
| Table    | Non_unique | Key_name | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment |
+----------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+
| neworder |          0 | PRIMARY  |            1 | ordno       | A         |           0 |     NULL | NULL   |      | BTREE      |         |               |
| neworder |          0 | PRIMARY  |            2 | bookid      | A         |           0 |     NULL | NULL   |      | BTREE      |         |               |
+----------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+
2 rows in set (0.00 sec)

mysql> show index from newpurchase;
+-------------+------------+-----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+
| Table       | Non_unique | Key_name  | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment |
+-------------+------------+-----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+
| newpurchase |          0 | PRIMARY   |            1 | invoiceno   | A         |           0 |     NULL | NULL   |      | BTREE      |         |               |
| newpurchase |          0 | invoiceno |            1 | invoiceno   | A         |           0 |     NULL | NULL   |      | BTREE      |         |               |
| newpurchase |          1 | ord_no    |            1 | ord_no      | A         |           0 |     NULL | NULL   | YES  | BTREE      |         |               |
| newpurchase |          1 | ord_no    |            2 | book_id     | A         |           0 |     NULL | NULL   | YES  | BTREE      |         |               |
+-------------+------------+-----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+
4 rows in set (0.00 sec)

mysql> #above one is composite foreign key
mysql> 
mysql> create table proj(projid int unique,projname varchar(20));
Query OK, 0 rows affected (0.01 sec)

mysql> create table projdomain(projectid int,domainname varchar(20),
    -> constraint hh3 foreign key(projectid) references proj(projid));
Query OK, 0 rows affected (0.01 sec)

mysql> desc proj;
+----------+-------------+------+-----+---------+-------+
| Field    | Type        | Null | Key | Default | Extra |
+----------+-------------+------+-----+---------+-------+
| projid   | int(11)     | YES  | UNI | NULL    |       |
| projname | varchar(20) | YES  |     | NULL    |       |
+----------+-------------+------+-----+---------+-------+
2 rows in set (0.01 sec)

mysql> desc projdomain;
+------------+-------------+------+-----+---------+-------+
| Field      | Type        | Null | Key | Default | Extra |
+------------+-------------+------+-----+---------+-------+
| projectid  | int(11)     | YES  | MUL | NULL    |       |
| domainname | varchar(20) | YES  |     | NULL    |       |
+------------+-------------+------+-----+---------+-------+
2 rows in set (0.01 sec)

mysql> alter table proj modify projid int not null unique;
Query OK, 0 rows affected (0.05 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> desc proj;
+----------+-------------+------+-----+---------+-------+
| Field    | Type        | Null | Key | Default | Extra |
+----------+-------------+------+-----+---------+-------+
| projid   | int(11)     | NO   | PRI | NULL    |       |
| projname | varchar(20) | YES  |     | NULL    |       |
+----------+-------------+------+-----+---------+-------+
2 rows in set (0.02 sec)

mysql> desc projdomain;
+------------+-------------+------+-----+---------+-------+
| Field      | Type        | Null | Key | Default | Extra |
+------------+-------------+------+-----+---------+-------+
| projectid  | int(11)     | YES  | MUL | NULL    |       |
| domainname | varchar(20) | YES  |     | NULL    |       |
+------------+-------------+------+-----+---------+-------+
2 rows in set (0.02 sec)

mysql> insert into proj values(1,'EMS');
Query OK, 1 row affected (0.00 sec)

mysql> insert into proj values(2,'SMS');
Query OK, 1 row affected (0.00 sec)

mysql> insert into proj values(3,'IMS');
Query OK, 1 row affected (0.00 sec)

mysql> insert into projdomain values(1,'Dotnet');
Query OK, 1 row affected (0.00 sec)

mysql> insert into projdomain values(1,'ApacheTomcat');
Query OK, 1 row affected (0.00 sec)

mysql> insert into projdomain values(11,'JSP');
ERROR 1452 (23000): Cannot add or update a child row: a foreign key constraint fails (`hexasep2022`.`projdomain`, CONSTRAINT `hh3` FOREIGN KEY (`projectid`) REFERENCES `proj` (`projid`))
mysql> select * from proj;
+--------+----------+
| projid | projname |
+--------+----------+
|      1 | EMS      |
|      2 | SMS      |
|      3 | IMS      |
+--------+----------+
3 rows in set (0.00 sec)

mysql> select * from projdomain;
+-----------+--------------+
| projectid | domainname   |
+-----------+--------------+
|         1 | Dotnet       |
|         1 | ApacheTomcat |
+-----------+--------------+
2 rows in set (0.00 sec)

mysql> #above one is related unique with foreign key column!
mysql> 
mysql> # A primary key must be unique as it uniquely identifies a row in a database. But, how can we ensure that the primary key is always unique? One of the  possible solutions would be, to use a formula to generate the primary key, which checks for existence of the key, in the table, before adding data. This may 
mysql>     work well but as you can see the approach is complex and not foolproof. In order to avoid such complexity and to ensure that the primary key is always 
    ->      unique, we can use MySQL's Auto increment feature to generate primary keys. Auto increment is used with the INT data type. 
    '>     ;
    '> ;
    '> ;
    '> 
========================================================================================
mysql> use  hexasep2022;
Database changed
mysql> create table orders(orderid int primary key auto_increment,
    -> itemname varchar(20));
Query OK, 0 rows affected (0.01 sec)

mysql> desc orders;
+----------+-------------+------+-----+---------+----------------+
| Field    | Type        | Null | Key | Default | Extra          |
+----------+-------------+------+-----+---------+----------------+
| orderid  | int(11)     | NO   | PRI | NULL    | auto_increment |
| itemname | varchar(20) | YES  |     | NULL    |                |
+----------+-------------+------+-----+---------+----------------+
2 rows in set (0.01 sec)

mysql> insert into orders(itemname) values('Laptop');
Query OK, 1 row affected (0.00 sec)

mysql> insert into orders(itemname) values('Inverter');
Query OK, 1 row affected (0.00 sec)

mysql> insert into orders(itemname) values('Harddisk');
Query OK, 1 row affected (0.00 sec)

mysql> insert into orders(itemname) values('Bluetooth');
Query OK, 1 row affected (0.00 sec)

mysql>  select * from orders;
+---------+-----------+
| orderid | itemname  |
+---------+-----------+
|       1 | Laptop    |
|       2 | Inverter  |
|       3 | Harddisk  |
|       4 | Bluetooth |
+---------+-----------+
4 rows in set (0.00 sec)

mysql>  #By default, the starting value for AUTO_INCREMENT is 1, and it will increment by 1 for each record
mysql> 
mysql> insert into orders values(54,'TV');
Query OK, 1 row affected (0.03 sec)

mysql> insert into orders(itemname) values('Keyboard');
Query OK, 1 row affected (0.00 sec)

mysql>  select * from orders;
+---------+-----------+
| orderid | itemname  |
+---------+-----------+
|       1 | Laptop    |
|       2 | Inverter  |
|       3 | Harddisk  |
|       4 | Bluetooth |
|      54 | TV        |
|      55 | Keyboard  |
+---------+-----------+
6 rows in set (0.00 sec)

mysql> SELECT LAST_INSERT_ID();
+------------------+
| LAST_INSERT_ID() |
+------------------+
|               55 |
+------------------+
1 row in set (0.00 sec)

mysql>  alter table orders auto_increment=1000;
Query OK, 6 rows affected (0.02 sec)
Records: 6  Duplicates: 0  Warnings: 0

mysql>  insert into orders(itemname) values('Speaker');
Query OK, 1 row affected (0.00 sec)

mysql>  insert into orders(itemname) values('SMPS');
Query OK, 1 row affected (0.02 sec)

mysql>  select * from orders;
+---------+-----------+
| orderid | itemname  |
+---------+-----------+
|       1 | Laptop    |
|       2 | Inverter  |
|       3 | Harddisk  |
|       4 | Bluetooth |
|      54 | TV        |
|      55 | Keyboard  |
|    1000 | Speaker   |
|    1001 | SMPS      |
+---------+-----------+
8 rows in set (0.00 sec)

mysql> SELECT LAST_INSERT_ID();
+------------------+
| LAST_INSERT_ID() |
+------------------+
|             1001 |
+------------------+
1 row in set (0.00 sec)

mysql> #Join::retrieve data from multiple tables in single result set
mysql> 
mysql> select * from collegestud;
+----+----------+
| id | sname    |
+----+----------+
|  2 | abi      |
|  4 | thananya |
| 42 | kanishka |
+----+----------+
3 rows in set (0.00 sec)

mysql> select * from exam;
+------+-------+-------+
| sid  | sname | fees  |
+------+-------+-------+
|    2 | abi   | 96000 |
|   42 | NULL  | 96000 |
+------+-------+-------+
2 rows in set (0.00 sec)

mysql> select * from certificate;
+------+-------+
| sno  | cname |
+------+-------+
|   42 | php   |
+------+-------+
1 row in set (0.00 sec)

mysql> select * from collegestud
    ->  join
    ->  exam
    -> where collegestud.id=exam.sid;
+----+----------+------+-------+-------+
| id | sname    | sid  | sname | fees  |
+----+----------+------+-------+-------+
|  2 | abi      |    2 | abi   | 96000 |
| 42 | kanishka |   42 | NULL  | 96000 |
+----+----------+------+-------+-------+
2 rows in set (0.00 sec)

mysql> select * from collegestud
    ->  inner join
    ->  exam
    -> where collegestud.id=exam.sid;
+----+----------+------+-------+-------+
| id | sname    | sid  | sname | fees  |
+----+----------+------+-------+-------+
|  2 | abi      |    2 | abi   | 96000 |
| 42 | kanishka |   42 | NULL  | 96000 |
+----+----------+------+-------+-------+
2 rows in set (0.00 sec)

mysql> #join and inner join both are same and default one in mysql
mysql> 
mysql> select * from collegestud c1
    ->  inner join
    ->  exam e1
    -> where c1.id=e1.sid;
+----+----------+------+-------+-------+
| id | sname    | sid  | sname | fees  |
+----+----------+------+-------+-------+
|  2 | abi      |    2 | abi   | 96000 |
| 42 | kanishka |   42 | NULL  | 96000 |
+----+----------+------+-------+-------+
2 rows in set (0.00 sec)

mysql> #table with alias for join
mysql> 
mysql> #LEFT JOIN produces a set of records which matches every entry in the left table regardless of any matching entry in the right table
mysql> 
mysql> select * from collegestud c1
    ->  left join
    ->  exam e1
    -> where c1.id=e1.sid;
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'where c1.id=e1.sid' at line 4
mysql> select * from collegestud c1
    ->  left join
    ->  exam e1
    -> on c1.id=e1.sid;
+----+----------+------+-------+-------+
| id | sname    | sid  | sname | fees  |
+----+----------+------+-------+-------+
|  2 | abi      |    2 | abi   | 96000 |
|  4 | thananya | NULL | NULL  |  NULL |
| 42 | kanishka |   42 | NULL  | 96000 |
+----+----------+------+-------+-------+
3 rows in set (0.00 sec)

mysql> select * from collegestud c1
    ->  right join
    ->  exam e1
    -> on c1.id=e1.sid;
+------+----------+------+-------+-------+
| id   | sname    | sid  | sname | fees  |
+------+----------+------+-------+-------+
|    2 | abi      |    2 | abi   | 96000 |
|   42 | kanishka |   42 | NULL  | 96000 |
+------+----------+------+-------+-------+
2 rows in set (0.00 sec)

mysql> #CROSS JOIN produced a result set which is the product of rows of two associated tables when no WHERE clause is used with CROSS JOIN.
mysql> 
mysql>  #In this join the result set appeared by multiplying each row of the first table with all rows in the second table if no condition introduced with CROSS JOIN..
mysql> 
mysql> select * from collegestud cross join exam;
+----+----------+------+-------+-------+
| id | sname    | sid  | sname | fees  |
+----+----------+------+-------+-------+
|  2 | abi      |    2 | abi   | 96000 |
|  2 | abi      |   42 | NULL  | 96000 |
|  4 | thananya |    2 | abi   | 96000 |
|  4 | thananya |   42 | NULL  | 96000 |
| 42 | kanishka |    2 | abi   | 96000 |
| 42 | kanishka |   42 | NULL  | 96000 |
+----+----------+------+-------+-------+
6 rows in set (0.00 sec)

mysql> #result::: 3*2=6 records will be displayed
mysql> 
mysql> select * from collegestud cross join exam where name like '%i';
ERROR 1054 (42S22): Unknown column 'name' in 'where clause'
mysql> select * from collegestud cross join exam where sname like '%i';
ERROR 1052 (23000): Column 'sname' in where clause is ambiguous
mysql> select * from collegestud cross join exam where exam.sname like '%i';
+----+----------+------+-------+-------+
| id | sname    | sid  | sname | fees  |
+----+----------+------+-------+-------+
|  2 | abi      |    2 | abi   | 96000 |
|  4 | thananya |    2 | abi   | 96000 |
| 42 | kanishka |    2 | abi   | 96000 |
+----+----------+------+-------+-------+
3 rows in set (0.00 sec)

mysql>  select id,sname,fees  from collegestud c1
    ->  join
    ->  exam e1
    -> where c1.id=e1.sid;
ERROR 1052 (23000): Column 'sname' in field list is ambiguous
mysql> 
mysql> select * from collegestud;
+----+----------+
| id | sname    |
+----+----------+
|  2 | abi      |
|  4 | thananya |
| 42 | kanishka |
+----+----------+
3 rows in set (0.00 sec)

mysql> select * from exam;
+------+-------+-------+
| sid  | sname | fees  |
+------+-------+-------+
|    2 | abi   | 96000 |
|   42 | NULL  | 96000 |
+------+-------+-------+
2 rows in set (0.00 sec)

mysql>  select collegestud.id,collegestud.sname,exam.fees  from collegestud 
    ->  join
    ->  exam 
    -> where collegestud.id=exam.sid;
+----+----------+-------+
| id | sname    | fees  |
+----+----------+-------+
|  2 | abi      | 96000 |
| 42 | kanishka | 96000 |
+----+----------+-------+
2 rows in set (0.00 sec)

mysql>  select c1.id,c1.sname,e1.fees  from collegestud c1 
    ->  join
    ->  exam e1
    -> where c1.id=e1.sid;
+----+----------+-------+
| id | sname    | fees  |
+----+----------+-------+
|  2 | abi      | 96000 |
| 42 | kanishka | 96000 |
+----+----------+-------+
2 rows in set (0.00 sec)

mysql> notee;
============================================================================================
mysql> use hexasep2022;
Database changed
mysql> select * from hexa_emps;
+------+------------+---------+------------+
| eno  | ename      | salary  | dept       |
+------+------------+---------+------------+
| 1001 | Devi       | 47320.4 | HR         |
| 1002 | Abi        |  106320 | Operations |
| 1003 | Raja       | 77320.4 | HR         |
| 1004 | Thananya   | 71436.7 | Accounting |
| 1005 | Kanishka   | 58904.7 | HR         |
| 1006 | Dhayanithi | 78320.4 | Training   |
| 1007 | Surya      | 42300.5 | Testing    |
| 1008 | Sara       |  101300 | Training   |
| 1001 | Devi       | 47320.4 | HR         |
| 8001 | Priya      |   67000 | Operations |
| 2201 | Sara       |   44288 | Operations |
| 2202 | Sanesh     |   90288 | Operations |
|  454 | Saravana   |    NULL | NULL       |
+------+------------+---------+------------+
13 rows in set (0.00 sec)

mysql> select * from collegestud;
+----+----------+
| id | sname    |
+----+----------+
|  2 | abi      |
|  4 | thananya |
| 42 | kanishka |
+----+----------+
3 rows in set (0.00 sec)

mysql> select * from exam;
+------+-------+-------+
| sid  | sname | fees  |
+------+-------+-------+
|    2 | abi   | 96000 |
|   42 | NULL  | 96000 |
+------+-------+-------+
2 rows in set (0.00 sec)

mysql> delete collegestud,exam from collegestud
    ->  inner join exam
    -> on collegestud.id=exam.sid
    -> where collegestud.id=2;
Query OK, 1 row affected (0.00 sec)

mysql>  #deletes a row that has the same studentid in both tables
mysql> 
mysql> select * from collegestud;
+----+----------+
| id | sname    |
+----+----------+
|  4 | thananya |
| 42 | kanishka |
+----+----------+
2 rows in set (0.00 sec)

mysql> select * from exam;
+------+-------+-------+
| sid  | sname | fees  |
+------+-------+-------+
|   42 | NULL  | 96000 |
+------+-------+-------+
1 row in set (0.00 sec)

mysql> CREATE TABLE Employee
    ->         (
    ->                 EmployeeID INT,
    ->                 FullName VARCHAR(20),
    ->                 Gender VARCHAR(52),
    ->                 ManagerID INT
    ->               );
Query OK, 0 rows affected (0.01 sec)

mysql> INSERT INTO Employee VALUES(1, 'Pranaya', 'Male', 3);
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO Employee VALUES(2, 'Priyanka', 'Female', 1);
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO Employee VALUES(3, 'Preety', 'Female', NULL);
Query OK, 1 row affected (0.00 sec)

mysql>  INSERT INTO Employee VALUES(4, 'Anurag', 'Male', 1);
Query OK, 1 row affected (0.16 sec)

mysql>  INSERT INTO Employee VALUES(5, 'Sambit', 'Male', 1);
Query OK, 1 row affected (0.00 sec)

mysql>  INSERT INTO Employee VALUES(6, 'Rajesh', 'Male', 3);
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO Employee VALUES(7, 'Hina', 'Female', 3);
Query OK, 1 row affected (0.01 sec)

mysql> select * from employee;
+------------+----------+--------+-----------+
| EmployeeID | FullName | Gender | ManagerID |
+------------+----------+--------+-----------+
|          1 | Pranaya  | Male   |         3 |
|          2 | Priyanka | Female |         1 |
|          3 | Preety   | Female |      NULL |
|          4 | Anurag   | Male   |         1 |
|          5 | Sambit   | Male   |         1 |
|          6 | Rajesh   | Male   |         3 |
|          7 | Hina     | Female |         3 |
+------------+----------+--------+-----------+
7 rows in set (0.00 sec)

mysql> #The Employee table contains information for both normal employees as well as managers of that employee which is the ManagerId. So, in order to find out the managers of each employee, we need a Self-Join because both Manager and Employee exist in the same table.
mysql> 
mysql> SELECT E.FullName as Employee, M.FullName as Manager
    -> FROM Employee E
    -> LEFT JOIN Employee M
    -> ON E.ManagerId = M.EmployeeId;
+----------+---------+
| Employee | Manager |
+----------+---------+
| Pranaya  | Preety  |
| Priyanka | Pranaya |
| Preety   | NULL    |
| Anurag   | Pranaya |
| Sambit   | Pranaya |
| Rajesh   | Preety  |
| Hina     | Preety  |
+----------+---------+
7 rows in set (0.00 sec)

mysql> #Now, we are going to use the Inner Self Join to join two instances of the same Employee table which will not retrieve the records with ManagerId NULL. You can see in the output that Preety's record is not retrieved.
mysql> 
mysql> SELECT E.FullName as Employee, M.FullName as Manager
    -> FROM Employee E
    -> inner JOIN Employee M
    -> ON E.ManagerId = M.EmployeeId;
+----------+---------+
| Employee | Manager |
+----------+---------+
| Priyanka | Pranaya |
| Anurag   | Pranaya |
| Sambit   | Pranaya |
| Pranaya  | Preety  |
| Rajesh   | Preety  |
| Hina     | Preety  |
+----------+---------+
6 rows in set (0.00 sec)

mysql> SELECT E.FullName as Employee, M.FullName as Manager
    -> FROM Employee E
    -> JOIN Employee M
    -> ON E.ManagerId = M.EmployeeId;
+----------+---------+
| Employee | Manager |
+----------+---------+
| Priyanka | Pranaya |
| Anurag   | Pranaya |
| Sambit   | Pranaya |
| Pranaya  | Preety  |
| Rajesh   | Preety  |
| Hina     | Preety  |
+----------+---------+
6 rows in set (0.00 sec)

mysql> CREATE TABLE universities(university_name varchar(40),university_code int primary key);
Query OK, 0 rows affected (0.04 sec)

mysql> CREATE TABLE students(student_id int primary key,full_name varchar(20),gender varchar (10),university_id int,CONSTRAINT FK_university_id FOREIGN KEY (university_id)REFERENCES universities(university_code));
Query OK, 0 rows affected (0.02 sec)

mysql> CREATE TABLE contacts(
    ->       contact_id int(10),
    ->       mobile_number int(20),
    ->       email_address varchar (50),
    ->       student_id int,
    ->       CONSTRAINT FK_student_id FOREIGN KEY (student_id)
    ->       REFERENCES students(student_id));
Query OK, 0 rows affected (0.02 sec)

mysql> desc universities;
+-----------------+-------------+------+-----+---------+-------+
| Field           | Type        | Null | Key | Default | Extra |
+-----------------+-------------+------+-----+---------+-------+
| university_name | varchar(40) | YES  |     | NULL    |       |
| university_code | int(11)     | NO   | PRI | NULL    |       |
+-----------------+-------------+------+-----+---------+-------+
2 rows in set (0.04 sec)

mysql> desc students;
+---------------+-------------+------+-----+---------+-------+
| Field         | Type        | Null | Key | Default | Extra |
+---------------+-------------+------+-----+---------+-------+
| student_id    | int(11)     | NO   | PRI | NULL    |       |
| full_name     | varchar(20) | YES  |     | NULL    |       |
| gender        | varchar(10) | YES  |     | NULL    |       |
| university_id | int(11)     | YES  | MUL | NULL    |       |
+---------------+-------------+------+-----+---------+-------+
4 rows in set (0.05 sec)

mysql> desc contacts;
+---------------+-------------+------+-----+---------+-------+
| Field         | Type        | Null | Key | Default | Extra |
+---------------+-------------+------+-----+---------+-------+
| contact_id    | int(10)     | YES  |     | NULL    |       |
| mobile_number | int(20)     | YES  |     | NULL    |       |
| email_address | varchar(50) | YES  |     | NULL    |       |
| student_id    | int(11)     | YES  | MUL | NULL    |       |
+---------------+-------------+------+-----+---------+-------+
4 rows in set (0.05 sec)

mysql> 
mysql> INSERT INTO universities(university_code, university_name)
    ->       VALUES(101, 'SRM University'),
    ->       (1002, 'Amity University'),
    ->       (1003, 'Anna University'),
    ->       (1004, 'Hindustan University');
Query OK, 4 rows affected (0.00 sec)
Records: 4  Duplicates: 0  Warnings: 0

mysql> INSERT INTO students(student_id, full_name, gender, university_id) VALUES     
    ->       (201,'Noor Khan', 'Male', 101),
    ->       (202, 'Avneesh Mishra', 'Male', 1002),
    ->       (203,'Monika Singh', 'Female', 1003),
    ->       (204, 'Aaliya Khan', 'Female', 1004),
    ->       (205, 'Sunil Kumar', 'Male', 1004),
    ->       (206, 'Mamta Gupta', 'Female', 1004),    
    ->       (207, 'Rapson Jani', 'Male', 101),
    ->       (208, 'Kundan Bharti', 'Male', 101),
    ->       (209, 'Manmohan Singh', 'Male', 1004),
    ->       (210,'Manisha Chaudhry', 'Female', 101);
Query OK, 10 rows affected (0.00 sec)
Records: 10  Duplicates: 0  Warnings: 0

mysql> INSERT INTO contacts(contact_id, mobile_number, email_address, student_id) VALUES     
    ->       (51, 222, 'aaaa222@gmail.com', 201),
    ->       (52, 555, 'bbbb555@gmail.com', 202),
    ->       (53, 777, 'cccc666@gmail.com', 203),
    ->       (54, 888, 'dddd888@gmail.com', 204),
    ->       (55, 101, 'eeee101@gmail.com', 204),
    ->       (56, 121, 'ffff121@gmail.com', 204),    
    ->       (57, 131, 'gggg121@gmail.com', 205),
    ->       (58, 141, 'iiii121@gmail.com', 206),
    ->       (59, 151, 'jjjj151@gmail.com', 207);
Query OK, 9 rows affected (0.00 sec)
Records: 9  Duplicates: 0  Warnings: 0

mysql> select * from universities;
+----------------------+-----------------+
| university_name      | university_code |
+----------------------+-----------------+
| SRM University       |             101 |
| Amity University     |            1002 |
| Anna University      |            1003 |
| Hindustan University |            1004 |
+----------------------+-----------------+
4 rows in set (0.00 sec)

mysql> select * from students;
+------------+------------------+--------+---------------+
| student_id | full_name        | gender | university_id |
+------------+------------------+--------+---------------+
|        201 | Noor Khan        | Male   |           101 |
|        202 | Avneesh Mishra   | Male   |          1002 |
|        203 | Monika Singh     | Female |          1003 |
|        204 | Aaliya Khan      | Female |          1004 |
|        205 | Sunil Kumar      | Male   |          1004 |
|        206 | Mamta Gupta      | Female |          1004 |
|        207 | Rapson Jani      | Male   |           101 |
|        208 | Kundan Bharti    | Male   |           101 |
|        209 | Manmohan Singh   | Male   |          1004 |
|        210 | Manisha Chaudhry | Female |           101 |
+------------+------------------+--------+---------------+
10 rows in set (0.00 sec)

mysql> select * from contacts;
+------------+---------------+-------------------+------------+
| contact_id | mobile_number | email_address     | student_id |
+------------+---------------+-------------------+------------+
|         51 |           222 | aaaa222@gmail.com |        201 |
|         52 |           555 | bbbb555@gmail.com |        202 |
|         53 |           777 | cccc666@gmail.com |        203 |
|         54 |           888 | dddd888@gmail.com |        204 |
|         55 |           101 | eeee101@gmail.com |        204 |
|         56 |           121 | ffff121@gmail.com |        204 |
|         57 |           131 | gggg121@gmail.com |        205 |
|         58 |           141 | iiii121@gmail.com |        206 |
|         59 |           151 | jjjj151@gmail.com |        207 |
+------------+---------------+-------------------+------------+
9 rows in set (0.00 sec)

mysql> #to join all three tables using LEFT JOIN.
mysql> 
mysql> SELECT students.full_name, students.gender, contacts.mobile_number, contacts.email_address, universities.university_name
    ->       FROM universities
    ->       LEFT JOIN students ON universities.university_code = students.university_id
    ->       LEFT JOIN contacts ON students.student_id = contacts.student_id;
+------------------+--------+---------------+-------------------+----------------------+
| full_name        | gender | mobile_number | email_address     | university_name      |
+------------------+--------+---------------+-------------------+----------------------+
| Noor Khan        | Male   |           222 | aaaa222@gmail.com | SRM University       |
| Rapson Jani      | Male   |           151 | jjjj151@gmail.com | SRM University       |
| Kundan Bharti    | Male   |          NULL | NULL              | SRM University       |
| Manisha Chaudhry | Female |          NULL | NULL              | SRM University       |
| Avneesh Mishra   | Male   |           555 | bbbb555@gmail.com | Amity University     |
| Monika Singh     | Female |           777 | cccc666@gmail.com | Anna University      |
| Aaliya Khan      | Female |           888 | dddd888@gmail.com | Hindustan University |
| Aaliya Khan      | Female |           101 | eeee101@gmail.com | Hindustan University |
| Aaliya Khan      | Female |           121 | ffff121@gmail.com | Hindustan University |
| Sunil Kumar      | Male   |           131 | gggg121@gmail.com | Hindustan University |
| Mamta Gupta      | Female |           141 | iiii121@gmail.com | Hindustan University |
| Manmohan Singh   | Male   |          NULL | NULL              | Hindustan University |
+------------------+--------+---------------+-------------------+----------------------+
12 rows in set (0.00 sec)

mysql> 
mysql> SELECT students.full_name, students.gender, contacts.mobile_number, contacts.email_address, universities.university_name
    ->       FROM universities
    ->       RIGHT JOIN students ON universities.university_code = students.university_id
    ->       RIGHT JOIN contacts ON students.student_id = contacts.student_id;
+----------------+--------+---------------+-------------------+----------------------+
| full_name      | gender | mobile_number | email_address     | university_name      |
+----------------+--------+---------------+-------------------+----------------------+
| Noor Khan      | Male   |           222 | aaaa222@gmail.com | SRM University       |
| Avneesh Mishra | Male   |           555 | bbbb555@gmail.com | Amity University     |
| Monika Singh   | Female |           777 | cccc666@gmail.com | Anna University      |
| Aaliya Khan    | Female |           888 | dddd888@gmail.com | Hindustan University |
| Aaliya Khan    | Female |           101 | eeee101@gmail.com | Hindustan University |
| Aaliya Khan    | Female |           121 | ffff121@gmail.com | Hindustan University |
| Sunil Kumar    | Male   |           131 | gggg121@gmail.com | Hindustan University |
| Mamta Gupta    | Female |           141 | iiii121@gmail.com | Hindustan University |
| Rapson Jani    | Male   |           151 | jjjj151@gmail.com | SRM University       |
+----------------+--------+---------------+-------------------+----------------------+
9 rows in set (0.00 sec)

mysql> SELECT students.full_name, students.gender, contacts.mobile_number, contacts.email_address, iversities.university_name
    ->       FROM universities
    ->       FULL JOIN students ON universities.university_code = students.university_id
    ->       FULL JOIN contacts ON students.student_id = contacts.student_id;
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'FULL JOIN contacts ON students.student_id = contacts.student_id' at line 4
mysql> 
mysql> 
mysql> SELECT students.full_name, students.gender, contacts.mobile_number, contacts.email_address, universities.university_name
    -> FROM universities
    -> LEFT JOIN students ON universities.university_code = students.university_id
    -> LEFT JOIN contacts ON students.student_id = contacts.student_id
    -> WHERE students.gender='male';
+----------------+--------+---------------+-------------------+----------------------+
| full_name      | gender | mobile_number | email_address     | university_name      |
+----------------+--------+---------------+-------------------+----------------------+
| Noor Khan      | Male   |           222 | aaaa222@gmail.com | SRM University       |
| Rapson Jani    | Male   |           151 | jjjj151@gmail.com | SRM University       |
| Kundan Bharti  | Male   |          NULL | NULL              | SRM University       |
| Avneesh Mishra | Male   |           555 | bbbb555@gmail.com | Amity University     |
| Sunil Kumar    | Male   |           131 | gggg121@gmail.com | Hindustan University |
| Manmohan Singh | Male   |          NULL | NULL              | Hindustan University |
+----------------+--------+---------------+-------------------+----------------------+
6 rows in set (0.00 sec)

mysql> SELECT students.full_name, students.gender, contacts.mobile_number, contacts.email_address, universities.university_name
    -> FROM universities
    -> LEFT JOIN students ON universities.university_code = students.university_id
    -> LEFT JOIN contacts ON students.student_id = contacts.student_id
    -> ORDER BY students.full_name;
+------------------+--------+---------------+-------------------+----------------------+
| full_name        | gender | mobile_number | email_address     | university_name      |
+------------------+--------+---------------+-------------------+----------------------+
| Aaliya Khan      | Female |           101 | eeee101@gmail.com | Hindustan University |
| Aaliya Khan      | Female |           888 | dddd888@gmail.com | Hindustan University |
| Aaliya Khan      | Female |           121 | ffff121@gmail.com | Hindustan University |
| Avneesh Mishra   | Male   |           555 | bbbb555@gmail.com | Amity University     |
| Kundan Bharti    | Male   |          NULL | NULL              | SRM University       |
| Mamta Gupta      | Female |           141 | iiii121@gmail.com | Hindustan University |
| Manisha Chaudhry | Female |          NULL | NULL              | SRM University       |
| Manmohan Singh   | Male   |          NULL | NULL              | Hindustan University |
| Monika Singh     | Female |           777 | cccc666@gmail.com | Anna University      |
| Noor Khan        | Male   |           222 | aaaa222@gmail.com | SRM University       |
| Rapson Jani      | Male   |           151 | jjjj151@gmail.com | SRM University       |
| Sunil Kumar      | Male   |           131 | gggg121@gmail.com | Hindustan University |
+------------------+--------+---------------+-------------------+----------------------+
12 rows in set (0.00 sec)

mysql> SELECT students.full_name, students.gender, contacts.mobile_number, contacts.email_address, universities.university_name
    -> FROM universities
    -> LEFT JOIN students ON universities.university_code = students.university_id
    -> LEFT JOIN contacts ON students.student_id = contacts.student_id
    -> GROUP BY students.gender;
+------------------+--------+---------------+-------------------+-----------------+
| full_name        | gender | mobile_number | email_address     | university_name |
+------------------+--------+---------------+-------------------+-----------------+
| Manisha Chaudhry | Female |          NULL | NULL              | SRM University  |
| Noor Khan        | Male   |           222 | aaaa222@gmail.com | SRM University  |
+------------------+--------+---------------+-------------------+-----------------+
2 rows in set (0.00 sec)

mysql> #above command is wrong
mysql> 
mysql>  #subqueries::
mysql> 
mysql>  #INNER QUERY, NESTED QUERY(QUERY CONTAINS ANOTHER  QUERY)
mysql> 
mysql> select * from hexa_emps;
+------+------------+---------+------------+
| eno  | ename      | salary  | dept       |
+------+------------+---------+------------+
| 1001 | Devi       | 47320.4 | HR         |
| 1002 | Abi        |  106320 | Operations |
| 1003 | Raja       | 77320.4 | HR         |
| 1004 | Thananya   | 71436.7 | Accounting |
| 1005 | Kanishka   | 58904.7 | HR         |
| 1006 | Dhayanithi | 78320.4 | Training   |
| 1007 | Surya      | 42300.5 | Testing    |
| 1008 | Sara       |  101300 | Training   |
| 1001 | Devi       | 47320.4 | HR         |
| 8001 | Priya      |   67000 | Operations |
| 2201 | Sara       |   44288 | Operations |
| 2202 | Sanesh     |   90288 | Operations |
|  454 | Saravana   |    NULL | NULL       |
+------+------------+---------+------------+
13 rows in set (0.01 sec)

mysql> select max(Salary) from hexa_emps;
+----------------+
| max(Salary)    |
+----------------+
| 106320.3984375 |
+----------------+
1 row in set (0.02 sec)

mysql> select ename,max(Salary) from hexa_emps;
+-------+----------------+
| ename | max(Salary)    |
+-------+----------------+
| Devi  | 106320.3984375 |
+-------+----------------+
1 row in set (0.00 sec)

mysql> select * from hexa_emps where salary=(select max(salary) from hexa_emps);
+------+-------+--------+------------+
| eno  | ename | salary | dept       |
+------+-------+--------+------------+
| 1002 | Abi   | 106320 | Operations |
+------+-------+--------+------------+
1 row in set (0.01 sec)

mysql> select * from hexa_emps where salary=(select min(salary) from hexa_emps);
+------+-------+---------+---------+
| eno  | ename | salary  | dept    |
+------+-------+---------+---------+
| 1007 | Surya | 42300.5 | Testing |
+------+-------+---------+---------+
1 row in set (0.00 sec)

mysql> select * from hexa_emps where salary>(select min(salary) from hexa_emps);
+------+------------+---------+------------+
| eno  | ename      | salary  | dept       |
+------+------------+---------+------------+
| 1001 | Devi       | 47320.4 | HR         |
| 1002 | Abi        |  106320 | Operations |
| 1003 | Raja       | 77320.4 | HR         |
| 1004 | Thananya   | 71436.7 | Accounting |
| 1005 | Kanishka   | 58904.7 | HR         |
| 1006 | Dhayanithi | 78320.4 | Training   |
| 1008 | Sara       |  101300 | Training   |
| 1001 | Devi       | 47320.4 | HR         |
| 8001 | Priya      |   67000 | Operations |
| 2201 | Sara       |   44288 | Operations |
| 2202 | Sanesh     |   90288 | Operations |
+------+------------+---------+------------+
11 rows in set (0.00 sec)

mysql> select * from hexa_emps where salary>42000;
+------+------------+---------+------------+
| eno  | ename      | salary  | dept       |
+------+------------+---------+------------+
| 1001 | Devi       | 47320.4 | HR         |
| 1002 | Abi        |  106320 | Operations |
| 1003 | Raja       | 77320.4 | HR         |
| 1004 | Thananya   | 71436.7 | Accounting |
| 1005 | Kanishka   | 58904.7 | HR         |
| 1006 | Dhayanithi | 78320.4 | Training   |
| 1007 | Surya      | 42300.5 | Testing    |
| 1008 | Sara       |  101300 | Training   |
| 1001 | Devi       | 47320.4 | HR         |
| 8001 | Priya      |   67000 | Operations |
| 2201 | Sara       |   44288 | Operations |
| 2202 | Sanesh     |   90288 | Operations |
+------+------------+---------+------------+
12 rows in set (0.00 sec)

mysql> select * from emp2;
+------+------------+---------+------------+
| eno  | ename      | salary  | dept       |
+------+------------+---------+------------+
| 1001 | Devi       | 46320.4 | HR         |
| 1002 | Abi        |  105320 | Operations |
| 1003 | Raja       | 76320.4 | HR         |
| 1004 | Thananya   | 70436.7 | Accounting |
| 1005 | Kanishka   | 57904.7 | HR         |
| 1006 | Dhayanithi | 77320.4 | Training   |
| 1007 | Surya      | 41300.5 | Testing    |
| 1008 | Sara       |  100300 | Training   |
| 1001 | Devi       | 46320.4 | HR         |
+------+------------+---------+------------+
9 rows in set (0.02 sec)

mysql> select * from emp1;
+------+----------+---------+------+
| eno  | ename    | salary  | dept |
+------+----------+---------+------+
| 1001 | Devi     | 46320.4 | HR   |
| 1003 | Raja     | 76320.4 | HR   |
| 1005 | Kanishka | 57904.7 | HR   |
| 1001 | Devi     | 46320.4 | HR   |
| 1007 | Surya    |    NULL | NULL |
+------+----------+---------+------+
5 rows in set (0.04 sec)

mysql> select * from emp2 where eno in(select eno from emp1 where 
    -> dept='HR');
+------+----------+---------+------+
| eno  | ename    | salary  | dept |
+------+----------+---------+------+
| 1001 | Devi     | 46320.4 | HR   |
| 1003 | Raja     | 76320.4 | HR   |
| 1005 | Kanishka | 57904.7 | HR   |
| 1001 | Devi     | 46320.4 | HR   |
+------+----------+---------+------+
4 rows in set (0.00 sec)

mysql>  #multiple row subqueries:: return more than one record from subquery
mysql> 
mysql>  #types of subqueries:: single row, multiple row(in,any,all)
mysql> 
mysql> #any:: <any means less than the maximum, >any means more than minimum
mysql> 
mysql> select * from emp2;
+------+------------+---------+------------+
| eno  | ename      | salary  | dept       |
+------+------------+---------+------------+
| 1001 | Devi       | 46320.4 | HR         |
| 1002 | Abi        |  105320 | Operations |
| 1003 | Raja       | 76320.4 | HR         |
| 1004 | Thananya   | 70436.7 | Accounting |
| 1005 | Kanishka   | 57904.7 | HR         |
| 1006 | Dhayanithi | 77320.4 | Training   |
| 1007 | Surya      | 41300.5 | Testing    |
| 1008 | Sara       |  100300 | Training   |
| 1001 | Devi       | 46320.4 | HR         |
+------+------------+---------+------------+
9 rows in set (0.00 sec)

mysql>  select * from emp2 where salary < any(select salary
    -> from emp2 where eno in (1005,1006));
+------+----------+---------+------------+
| eno  | ename    | salary  | dept       |
+------+----------+---------+------------+
| 1001 | Devi     | 46320.4 | HR         |
| 1003 | Raja     | 76320.4 | HR         |
| 1004 | Thananya | 70436.7 | Accounting |
| 1005 | Kanishka | 57904.7 | HR         |
| 1007 | Surya    | 41300.5 | Testing    |
| 1001 | Devi     | 46320.4 | HR         |
+------+----------+---------+------------+
6 rows in set (0.00 sec)

mysql> #above output::: 57904,77320:::: < any means <77320
mysql> 
mysql>  select * from emp2 where salary > any(select salary
    -> from emp2 where eno in (1005,1006));
+------+------------+---------+------------+
| eno  | ename      | salary  | dept       |
+------+------------+---------+------------+
| 1002 | Abi        |  105320 | Operations |
| 1003 | Raja       | 76320.4 | HR         |
| 1004 | Thananya   | 70436.7 | Accounting |
| 1006 | Dhayanithi | 77320.4 | Training   |
| 1008 | Sara       |  100300 | Training   |
+------+------------+---------+------------+
5 rows in set (0.00 sec)

mysql>  #above output::: 57904,77320:::: > any means >57904
mysql> 
mysql>  #all:: <all means less than minimum
mysql> 
mysql>  #all:: >all means more than maximum
mysql> 
mysql> select * from emp2;
+------+------------+---------+------------+
| eno  | ename      | salary  | dept       |
+------+------------+---------+------------+
| 1001 | Devi       | 46320.4 | HR         |
| 1002 | Abi        |  105320 | Operations |
| 1003 | Raja       | 76320.4 | HR         |
| 1004 | Thananya   | 70436.7 | Accounting |
| 1005 | Kanishka   | 57904.7 | HR         |
| 1006 | Dhayanithi | 77320.4 | Training   |
| 1007 | Surya      | 41300.5 | Testing    |
| 1008 | Sara       |  100300 | Training   |
| 1001 | Devi       | 46320.4 | HR         |
+------+------------+---------+------------+
9 rows in set (0.00 sec)

mysql>  select * from emp2 where salary < all(select salary
    -> from emp2 where eno in (1005,1006));
+------+-------+---------+---------+
| eno  | ename | salary  | dept    |
+------+-------+---------+---------+
| 1001 | Devi  | 46320.4 | HR      |
| 1007 | Surya | 41300.5 | Testing |
| 1001 | Devi  | 46320.4 | HR      |
+------+-------+---------+---------+
3 rows in set (0.00 sec)

mysql>  select * from emp2 where salary > all(select salary
    -> from emp2 where eno in (1005,1006));
+------+-------+--------+------------+
| eno  | ename | salary | dept       |
+------+-------+--------+------------+
| 1002 | Abi   | 105320 | Operations |
| 1008 | Sara  | 100300 | Training   |
+------+-------+--------+------------+
2 rows in set (0.00 sec)

mysql>  select * from emp2 where salary < some(select salary
    -> from emp2 where eno in (1005,1006));
+------+----------+---------+------------+
| eno  | ename    | salary  | dept       |
+------+----------+---------+------------+
| 1001 | Devi     | 46320.4 | HR         |
| 1003 | Raja     | 76320.4 | HR         |
| 1004 | Thananya | 70436.7 | Accounting |
| 1005 | Kanishka | 57904.7 | HR         |
| 1007 | Surya    | 41300.5 | Testing    |
| 1001 | Devi     | 46320.4 | HR         |
+------+----------+---------+------------+
6 rows in set (0.00 sec)

mysql>  select * from emp2 where salary > some(select salary
    -> from emp2 where eno in (1005,1006));
+------+------------+---------+------------+
| eno  | ename      | salary  | dept       |
+------+------------+---------+------------+
| 1002 | Abi        |  105320 | Operations |
| 1003 | Raja       | 76320.4 | HR         |
| 1004 | Thananya   | 70436.7 | Accounting |
| 1006 | Dhayanithi | 77320.4 | Training   |
| 1008 | Sara       |  100300 | Training   |
+------+------------+---------+------------+
5 rows in set (0.00 sec)

mysql> #any and some keywords are same nature
mysql> 
mysql>  select * from emp2 where salary > any(select salary
    -> from emp2 where eno in (1005,1006));
+------+------------+---------+------------+
| eno  | ename      | salary  | dept       |
+------+------------+---------+------------+
| 1002 | Abi        |  105320 | Operations |
| 1003 | Raja       | 76320.4 | HR         |
| 1004 | Thananya   | 70436.7 | Accounting |
| 1006 | Dhayanithi | 77320.4 | Training   |
| 1008 | Sara       |  100300 | Training   |
+------+------------+---------+------------+
5 rows in set (0.00 sec)

mysql> #The ALL keyword compares values with the value returned by a subquery. Therefore, it returns TRUE if the comparison is TRUE for ALL of the values returned by a subquery. The ANY keyword returns TRUE if the comparison is TRUE for ANY of the values returned by a subquery. The ANY and SOME keywords are the same because they are the alias of each other. 
mysql> 
mysql> 
mysql> select * from hexa_emps;
+------+------------+---------+------------+
| eno  | ename      | salary  | dept       |
+------+------------+---------+------------+
| 1001 | Devi       | 47320.4 | HR         |
| 1002 | Abi        |  106320 | Operations |
| 1003 | Raja       | 77320.4 | HR         |
| 1004 | Thananya   | 71436.7 | Accounting |
| 1005 | Kanishka   | 58904.7 | HR         |
| 1006 | Dhayanithi | 78320.4 | Training   |
| 1007 | Surya      | 42300.5 | Testing    |
| 1008 | Sara       |  101300 | Training   |
| 1001 | Devi       | 47320.4 | HR         |
| 8001 | Priya      |   67000 | Operations |
| 2201 | Sara       |   44288 | Operations |
| 2202 | Sanesh     |   90288 | Operations |
|  454 | Saravana   |    NULL | NULL       |
+------+------------+---------+------------+
13 rows in set (0.00 sec)

mysql> select * from emp1;
+------+----------+---------+------+
| eno  | ename    | salary  | dept |
+------+----------+---------+------+
| 1001 | Devi     | 46320.4 | HR   |
| 1003 | Raja     | 76320.4 | HR   |
| 1005 | Kanishka | 57904.7 | HR   |
| 1001 | Devi     | 46320.4 | HR   |
| 1007 | Surya    |    NULL | NULL |
+------+----------+---------+------+
5 rows in set (0.00 sec)

mysql> select * from emp2;
+------+------------+---------+------------+
| eno  | ename      | salary  | dept       |
+------+------------+---------+------------+
| 1001 | Devi       | 46320.4 | HR         |
| 1002 | Abi        |  105320 | Operations |
| 1003 | Raja       | 76320.4 | HR         |
| 1004 | Thananya   | 70436.7 | Accounting |
| 1005 | Kanishka   | 57904.7 | HR         |
| 1006 | Dhayanithi | 77320.4 | Training   |
| 1007 | Surya      | 41300.5 | Testing    |
| 1008 | Sara       |  100300 | Training   |
| 1001 | Devi       | 46320.4 | HR         |
+------+------------+---------+------------+
9 rows in set (0.00 sec)

mysql> select * from hexa_emps;
+------+------------+---------+------------+
| eno  | ename      | salary  | dept       |
+------+------------+---------+------------+
| 1001 | Devi       | 47320.4 | HR         |
| 1002 | Abi        |  106320 | Operations |
| 1003 | Raja       | 77320.4 | HR         |
| 1004 | Thananya   | 71436.7 | Accounting |
| 1005 | Kanishka   | 58904.7 | HR         |
| 1006 | Dhayanithi | 78320.4 | Training   |
| 1007 | Surya      | 42300.5 | Testing    |
| 1008 | Sara       |  101300 | Training   |
| 1001 | Devi       | 47320.4 | HR         |
| 8001 | Priya      |   67000 | Operations |
| 2201 | Sara       |   44288 | Operations |
| 2202 | Sanesh     |   90288 | Operations |
|  454 | Saravana   |    NULL | NULL       |
+------+------------+---------+------------+
13 rows in set (0.00 sec)

mysql> Select ename,salary From hexa_emps WHERE eno = (SELECT eno FROM emp2 WHERE salary = (SELECT MAX(salary) FROM emp2));
+-------+--------+
| ename | salary |
+-------+--------+
| Abi   | 106320 |
+-------+--------+
1 row in set (0.00 sec)

mysql> select dept,sum(salary) as total
    -> from hexa_emps
    -> group by dept
    -> having dept in (select dept  from hexa_emps where eno in(select eno from hexa_emps group by dept having count(*)>3));
+------------+----------------+
| dept       | total          |
+------------+----------------+
| HR         | 230865.8671875 |
| Operations | 307896.3984375 |
+------------+----------------+
2 rows in set (0.01 sec)

mysql> select * from hexa_emps;
+------+------------+---------+------------+
| eno  | ename      | salary  | dept       |
+------+------------+---------+------------+
| 1001 | Devi       | 47320.4 | HR         |
| 1002 | Abi        |  106320 | Operations |
| 1003 | Raja       | 77320.4 | HR         |
| 1004 | Thananya   | 71436.7 | Accounting |
| 1005 | Kanishka   | 58904.7 | HR         |
| 1006 | Dhayanithi | 78320.4 | Training   |
| 1007 | Surya      | 42300.5 | Testing    |
| 1008 | Sara       |  101300 | Training   |
| 1001 | Devi       | 47320.4 | HR         |
| 8001 | Priya      |   67000 | Operations |
| 2201 | Sara       |   44288 | Operations |
| 2202 | Sanesh     |   90288 | Operations |
|  454 | Saravana   |    NULL | NULL       |
+------+------------+---------+------------+
13 rows in set (0.00 sec)

mysql> #above one is subquery with group by and having clause1
mysql> 
mysql> select ename from hexa_emps h1 where exists (select * 
    -> from emp2 where eno=h1.eno);
+------------+
| ename      |
+------------+
| Devi       |
| Abi        |
| Raja       |
| Thananya   |
| Kanishka   |
| Dhayanithi |
| Surya      |
| Sara       |
| Devi       |
+------------+
9 rows in set (0.00 sec)

mysql> select eno,ename from hexa_emps h1 where exists (select * 
    -> from emp2 where eno=h1.eno);
+------+------------+
| eno  | ename      |
+------+------------+
| 1001 | Devi       |
| 1002 | Abi        |
| 1003 | Raja       |
| 1004 | Thananya   |
| 1005 | Kanishka   |
| 1006 | Dhayanithi |
| 1007 | Surya      |
| 1008 | Sara       |
| 1001 | Devi       |
+------+------------+
9 rows in set (0.00 sec)

mysql> select * from emp2;
+------+------------+---------+------------+
| eno  | ename      | salary  | dept       |
+------+------------+---------+------------+
| 1001 | Devi       | 46320.4 | HR         |
| 1002 | Abi        |  105320 | Operations |
| 1003 | Raja       | 76320.4 | HR         |
| 1004 | Thananya   | 70436.7 | Accounting |
| 1005 | Kanishka   | 57904.7 | HR         |
| 1006 | Dhayanithi | 77320.4 | Training   |
| 1007 | Surya      | 41300.5 | Testing    |
| 1008 | Sara       |  100300 | Training   |
| 1001 | Devi       | 46320.4 | HR         |
+------+------------+---------+------------+
9 rows in set (0.00 sec)

mysql> select eno,ename from hexa_emps h1 where not exists (select * 
    -> from emp2 where eno=h1.eno);
+------+----------+
| eno  | ename    |
+------+----------+
| 8001 | Priya    |
| 2201 | Sara     |
| 2202 | Sanesh   |
|  454 | Saravana |
+------+----------+
4 rows in set (0.00 sec)

mysql> #Using the EXISTS and NOT EXISTS operators in SQL subquery, the Boolean value is returned as result either TRUE or FALSE. 
mysql> 
mysql> #EXISTS and NOT EXISTS check whether the rows exist or not in the result set and returns TRUE or FALSE value respectively.
mysql> 
mysql> SELECT dept, AVG(salary)
    -> FROM hexa_emps
    -> GROUP BY dept
    -> HAVING AVG(salary) > 2* (SELECT AVG( salary) FROM hexa_emps);
Empty set (0.00 sec)

mysql> select dept,avg(salary) from hexa_emps group by dept;
+------------+-----------------+
| dept       | avg(salary)     |
+------------+-----------------+
| NULL       |            NULL |
| Accounting |   71436.6796875 |
| HR         | 57716.466796875 |
| Operations | 76974.099609375 |
| Testing    |         42300.5 |
| Training   |  89810.44921875 |
+------------+-----------------+
6 rows in set (0.00 sec)

====================================================================
mysql> use hexasep2022;
Database changed
mysql> select * from hexa_emps;
+------+------------+---------+------------+
| eno  | ename      | salary  | dept       |
+------+------------+---------+------------+
| 1001 | Devi       | 47320.4 | HR         |
| 1002 | Abi        |  106320 | Operations |
| 1003 | Raja       | 77320.4 | HR         |
| 1004 | Thananya   | 71436.7 | Accounting |
| 1005 | Kanishka   | 58904.7 | HR         |
| 1006 | Dhayanithi | 78320.4 | Training   |
| 1007 | Surya      | 42300.5 | Testing    |
| 1008 | Sara       |  101300 | Training   |
| 1001 | Devi       | 47320.4 | HR         |
| 8001 | Priya      |   67000 | Operations |
| 2201 | Sara       |   44288 | Operations |
| 2202 | Sanesh     |   90288 | Operations |
|  454 | Saravana   |    NULL | NULL       |
+------+------------+---------+------------+
13 rows in set (0.00 sec)

mysql> #With a normal nested subquery, the inner SELECT query runs first and executes once, returning values to be used by the main query. 
mysql> #A SQL correlated subquery is a query which is executed one time for each record returned by the outer query. It is called correlated as it is a correlation between the number of times the subquery is executed with the number of records returned by the outer query (not the subquery).
mysql> 
mysql> #A correlated subquery is a subquery that uses the values of the outer query. In other words, the correlated subquery depends on the outer query for its values.
mysql> 
mysql> #A correlated subquery, however, executes once for each candidate row considered by the outer query.
mysql> 
mysql> #Moreover, a correlated subquery is executed repeatedly, once for each row evaluated by the outer query. The correlated subquery is also known as a 
mysql> repeating subquery.
mysql> select * from emp2;
+------+------------+---------+------------+
| eno  | ename      | salary  | dept       |
+------+------------+---------+------------+
| 1001 | Devi       | 46320.4 | HR         |
| 1002 | Abi        |  105320 | Operations |
| 1003 | Raja       | 76320.4 | HR         |
| 1004 | Thananya   | 70436.7 | Accounting |
| 1005 | Kanishka   | 57904.7 | HR         |
| 1006 | Dhayanithi | 77320.4 | Training   |
| 1007 | Surya      | 41300.5 | Testing    |
| 1008 | Sara       |  100300 | Training   |
| 1001 | Devi       | 46320.4 | HR         |
+------+------------+---------+------------+
9 rows in set (0.00 sec)

mysql> insert into emp2 values(4643,'Gayu',340002,'HR');
Query OK, 1 row affected (0.01 sec)

mysql> select * from emp2 e4 WHERE salary > (  
    -> seLECT AVG(salary) FROM emp2 WHERE dept = e4.dept); 
+------+-------+--------+----------+
| eno  | ename | salary | dept     |
+------+-------+--------+----------+
| 1008 | Sara  | 100300 | Training |
| 4643 | Gayu  | 340002 | HR       |
+------+-------+--------+----------+
2 rows in set (0.00 sec)


mysql> select dept,avg(salary) from emp2 group by dept;
+------------+----------------+
| dept       | avg(salary)    |
+------------+----------------+
| Accounting |  70436.6796875 |
| HR         | 113373.5734375 |
| Operations | 105320.3984375 |
| Testing    |        41300.5 |
| Training   | 88810.44921875 |
+------------+----------------+
5 rows in set (0.00 sec)

mysql> select * from emp2 e4 WHERE salary > (  
    -> seLECT AVG(salary) FROM emp2 WHERE dept = e4.dept); 
+------+-------+--------+----------+
| eno  | ename | salary | dept     |
+------+-------+--------+----------+
| 1008 | Sara  | 100300 | Training |
| 4643 | Gayu  | 340002 | HR       |
+------+-------+--------+----------+
2 rows in set (0.00 sec)

mysql> # #In the above query, we select an record whose salary is higher than the average salary of all employees in each dept.
mysql> 
mysql> notee;
==================================================================================================

mysql> use hexasep2022;
Database changed
mysql> create table studt4(sno int,name varchar(20),
    -> pass boolean);
Query OK, 0 rows affected (0.01 sec)

mysql> desc studt4;
+-------+-------------+------+-----+---------+-------+
| Field | Type        | Null | Key | Default | Extra |
+-------+-------------+------+-----+---------+-------+
| sno   | int(11)     | YES  |     | NULL    |       |
| name  | varchar(20) | YES  |     | NULL    |       |
| pass  | tinyint(1)  | YES  |     | NULL    |       |
+-------+-------------+------+-----+---------+-------+
3 rows in set (0.04 sec)

mysql> insert into studt4 values(1,'devi',false);
Query OK, 1 row affected (0.00 sec)

mysql>   insert into studt4 values(2,'abi',true);
Query OK, 1 row affected (0.00 sec)

mysql> insert into studt4 values(3,'rajan',true);
Query OK, 1 row affected (0.00 sec)

mysql> insert into studt4 values(4,'daya',true);
Query OK, 1 row affected (0.00 sec)

mysql> insert into studt4 values(5,'lakshmi',false);
Query OK, 1 row affected (0.00 sec)

mysql> select * from studt4;
+------+---------+------+
| sno  | name    | pass |
+------+---------+------+
|    1 | devi    |    0 |
|    2 | abi     |    1 |
|    3 | rajan   |    1 |
|    4 | daya    |    1 |
|    5 | lakshmi |    0 |
+------+---------+------+
5 rows in set (0.00 sec)

mysql> #false(0),true(1)
mysql> 
mysql> select * from studt4 where pass=true;
+------+-------+------+
| sno  | name  | pass |
+------+-------+------+
|    2 | abi   |    1 |
|    3 | rajan |    1 |
|    4 | daya  |    1 |
+------+-------+------+
3 rows in set (0.00 sec)

mysql> select * from studt4 where pass=false;
+------+---------+------+
| sno  | name    | pass |
+------+---------+------+
|    1 | devi    |    0 |
|    5 | lakshmi |    0 |
+------+---------+------+
2 rows in set (0.00 sec)

mysql> select * from studt4 where pass is false;
+------+---------+------+
| sno  | name    | pass |
+------+---------+------+
|    1 | devi    |    0 |
|    5 | lakshmi |    0 |
+------+---------+------+
2 rows in set (0.00 sec)

mysql>  select * from studt4 where pass is true;
+------+-------+------+
| sno  | name  | pass |
+------+-------+------+
|    2 | abi   |    1 |
|    3 | rajan |    1 |
|    4 | daya  |    1 |
+------+-------+------+
3 rows in set (0.00 sec)

mysql> select * from studt4 where pass=0;
+------+---------+------+
| sno  | name    | pass |
+------+---------+------+
|    1 | devi    |    0 |
|    5 | lakshmi |    0 |
+------+---------+------+
2 rows in set (0.00 sec)

mysql> select * from studt4 where pass=1;
+------+-------+------+
| sno  | name  | pass |
+------+-------+------+
|    2 | abi   |    1 |
|    3 | rajan |    1 |
|    4 | daya  |    1 |
+------+-------+------+
3 rows in set (0.00 sec)

mysql> select * from studt4 where pass is not false;
+------+-------+------+
| sno  | name  | pass |
+------+-------+------+
|    2 | abi   |    1 |
|    3 | rajan |    1 |
|    4 | daya  |    1 |
+------+-------+------+
3 rows in set (0.00 sec)

mysql> select * from studt4 where pass is not true;
+------+---------+------+
| sno  | name    | pass |
+------+---------+------+
|    1 | devi    |    0 |
|    5 | lakshmi |    0 |
+------+---------+------+
2 rows in set (0.00 sec)

mysql>  create table dress(dno int,dname varchar(20),
    -> dsize enum('small','medium','large','x-large'));
Query OK, 0 rows affected (0.01 sec)

mysql> desc dress;
+-------+------------------------------------------+------+-----+---------+-------+
| Field | Type                                     | Null | Key | Default | Extra |
+-------+------------------------------------------+------+-----+---------+-------+
| dno   | int(11)                                  | YES  |     | NULL    |       |
| dname | varchar(20)                              | YES  |     | NULL    |       |
| dsize | enum('small','medium','large','x-large') | YES  |     | NULL    |       |
+-------+------------------------------------------+------+-----+---------+-------+
3 rows in set (0.01 sec)

mysql> insert into dress values(1,'shirt',2),
    -> (2,'chudi',3),(3,'tops','medium');
Query OK, 3 rows affected (0.02 sec)
Records: 3  Duplicates: 0  Warnings: 0

mysql>  select * from dress;
+------+-------+--------+
| dno  | dname | dsize  |
+------+-------+--------+
|    1 | shirt | medium |
|    2 | chudi | large  |
|    3 | tops  | medium |
+------+-------+--------+
3 rows in set (0.00 sec)

mysql>  #enum numeric index starts from 1
mysql> 
mysql> select * from dress order by dsize desc;
+------+-------+--------+
| dno  | dname | dsize  |
+------+-------+--------+
|    2 | chudi | large  |
|    1 | shirt | medium |
|    3 | tops  | medium |
+------+-------+--------+
3 rows in set (0.00 sec)

mysql> #Transaction Control language:: COMMIT,ROLLBACK
mysql> 
mysql>  select * from emp2;
+------+------------+---------+------------+
| eno  | ename      | salary  | dept       |
+------+------------+---------+------------+
| 1001 | Devi       | 46320.4 | HR         |
| 1002 | Abi        |  105320 | Operations |
| 1003 | Raja       | 76320.4 | HR         |
| 1004 | Thananya   | 70436.7 | Accounting |
| 1005 | Kanishka   | 57904.7 | HR         |
| 1006 | Dhayanithi | 77320.4 | Training   |
| 1007 | Surya      | 41300.5 | Testing    |
| 1008 | Sara       |  100300 | Training   |
| 1001 | Devi       | 46320.4 | HR         |
| 4643 | Gayu       |  340002 | HR         |
+------+------------+---------+------------+
10 rows in set (0.00 sec)

mysql> select @@autocommit;
+--------------+
| @@autocommit |
+--------------+
|            1 |
+--------------+
1 row in set (0.00 sec)

mysql> #BY DEFAULT COMMIT IS ENABLED (1=TRUE)
mysql> 
mysql>  set autocommit=false;
Query OK, 0 rows affected (0.00 sec)

mysql>  select @@autocommit;
+--------------+
| @@autocommit |
+--------------+
|            0 |
+--------------+
1 row in set (0.00 sec)

mysql> set autocommit=0;
Query OK, 0 rows affected (0.00 sec)

mysql>  select @@autocommit;
+--------------+
| @@autocommit |
+--------------+
|            0 |
+--------------+
1 row in set (0.00 sec)

mysql>  select * from emp2;
+------+------------+---------+------------+
| eno  | ename      | salary  | dept       |
+------+------------+---------+------------+
| 1001 | Devi       | 46320.4 | HR         |
| 1002 | Abi        |  105320 | Operations |
| 1003 | Raja       | 76320.4 | HR         |
| 1004 | Thananya   | 70436.7 | Accounting |
| 1005 | Kanishka   | 57904.7 | HR         |
| 1006 | Dhayanithi | 77320.4 | Training   |
| 1007 | Surya      | 41300.5 | Testing    |
| 1008 | Sara       |  100300 | Training   |
| 1001 | Devi       | 46320.4 | HR         |
| 4643 | Gayu       |  340002 | HR         |
+------+------------+---------+------------+
10 rows in set (0.00 sec)

mysql>  insert into emp2 values(7000,'Yamini',43040, 'HR');
Query OK, 1 row affected (0.00 sec)

mysql> insert into emp2 values(7001,'Bamini',83040,'HR');
Query OK, 1 row affected (0.00 sec)

mysql> select * from emp2;
+------+------------+---------+------------+
| eno  | ename      | salary  | dept       |
+------+------------+---------+------------+
| 1001 | Devi       | 46320.4 | HR         |
| 1002 | Abi        |  105320 | Operations |
| 1003 | Raja       | 76320.4 | HR         |
| 1004 | Thananya   | 70436.7 | Accounting |
| 1005 | Kanishka   | 57904.7 | HR         |
| 1006 | Dhayanithi | 77320.4 | Training   |
| 1007 | Surya      | 41300.5 | Testing    |
| 1008 | Sara       |  100300 | Training   |
| 1001 | Devi       | 46320.4 | HR         |
| 4643 | Gayu       |  340002 | HR         |
| 7000 | Yamini     |   43040 | HR         |
| 7001 | Bamini     |   83040 | HR         |
+------+------------+---------+------------+
12 rows in set (0.00 sec)

mysql> commit;
Query OK, 0 rows affected (0.00 sec)

mysql>  insert into emp2 values(7002,'Bhavani',33040,'HR');
Query OK, 1 row affected (0.00 sec)

mysql>  rollback;
Query OK, 0 rows affected (0.02 sec)

mysql> #rollback:: undo the transactions that have not been saved in the database.
mysql> select * from emp2;
+------+------------+---------+------------+
| eno  | ename      | salary  | dept       |
+------+------------+---------+------------+
| 1001 | Devi       | 46320.4 | HR         |
| 1002 | Abi        |  105320 | Operations |
| 1003 | Raja       | 76320.4 | HR         |
| 1004 | Thananya   | 70436.7 | Accounting |
| 1005 | Kanishka   | 57904.7 | HR         |
| 1006 | Dhayanithi | 77320.4 | Training   |
| 1007 | Surya      | 41300.5 | Testing    |
| 1008 | Sara       |  100300 | Training   |
| 1001 | Devi       | 46320.4 | HR         |
| 4643 | Gayu       |  340002 | HR         |
| 7000 | Yamini     |   43040 | HR         |
| 7001 | Bamini     |   83040 | HR         |
+------+------------+---------+------------+
12 rows in set (0.00 sec)

mysql>  create table dummy43(eno int);
Query OK, 0 rows affected (0.01 sec)

mysql> insert into emp2 values(7003,'tharini',83040,'HR');
Query OK, 1 row affected (0.00 sec)

mysql> select * from emp2;
+------+------------+---------+------------+
| eno  | ename      | salary  | dept       |
+------+------------+---------+------------+
| 1001 | Devi       | 46320.4 | HR         |
| 1002 | Abi        |  105320 | Operations |
| 1003 | Raja       | 76320.4 | HR         |
| 1004 | Thananya   | 70436.7 | Accounting |
| 1005 | Kanishka   | 57904.7 | HR         |
| 1006 | Dhayanithi | 77320.4 | Training   |
| 1007 | Surya      | 41300.5 | Testing    |
| 1008 | Sara       |  100300 | Training   |
| 1001 | Devi       | 46320.4 | HR         |
| 4643 | Gayu       |  340002 | HR         |
| 7000 | Yamini     |   43040 | HR         |
| 7001 | Bamini     |   83040 | HR         |
| 7003 | tharini    |   83040 | HR         |
+------+------------+---------+------------+
13 rows in set (0.00 sec)

mysql> select * from dummy43;
Empty set (0.00 sec)

mysql> rollback;
Query OK, 0 rows affected (0.00 sec)

mysql> select * from emp2;
+------+------------+---------+------------+
| eno  | ename      | salary  | dept       |
+------+------------+---------+------------+
| 1001 | Devi       | 46320.4 | HR         |
| 1002 | Abi        |  105320 | Operations |
| 1003 | Raja       | 76320.4 | HR         |
| 1004 | Thananya   | 70436.7 | Accounting |
| 1005 | Kanishka   | 57904.7 | HR         |
| 1006 | Dhayanithi | 77320.4 | Training   |
| 1007 | Surya      | 41300.5 | Testing    |
| 1008 | Sara       |  100300 | Training   |
| 1001 | Devi       | 46320.4 | HR         |
| 4643 | Gayu       |  340002 | HR         |
| 7000 | Yamini     |   43040 | HR         |
| 7001 | Bamini     |   83040 | HR         |
+------+------------+---------+------------+
12 rows in set (0.00 sec)

mysql> select * from dummy43;
Empty set (0.00 sec)

mysql>  #DML commands can be rollback, DDL commands cannot be rollback
mysql> 
mysql> update emp2 set salary=salary+10000;
Query OK, 12 rows affected (0.00 sec)
Rows matched: 12  Changed: 12  Warnings: 0

mysql> select * from emp2;
+------+------------+---------+------------+
| eno  | ename      | salary  | dept       |
+------+------------+---------+------------+
| 1001 | Devi       | 56320.4 | HR         |
| 1002 | Abi        |  115320 | Operations |
| 1003 | Raja       | 86320.4 | HR         |
| 1004 | Thananya   | 80436.7 | Accounting |
| 1005 | Kanishka   | 67904.7 | HR         |
| 1006 | Dhayanithi | 87320.4 | Training   |
| 1007 | Surya      | 51300.5 | Testing    |
| 1008 | Sara       |  110300 | Training   |
| 1001 | Devi       | 56320.4 | HR         |
| 4643 | Gayu       |  350002 | HR         |
| 7000 | Yamini     |   53040 | HR         |
| 7001 | Bamini     |   93040 | HR         |
+------+------------+---------+------------+
12 rows in set (0.00 sec)

mysql> delete from emp2 where eno=4643;
Query OK, 1 row affected (0.00 sec)

mysql> select * from emp2;
+------+------------+---------+------------+
| eno  | ename      | salary  | dept       |
+------+------------+---------+------------+
| 1001 | Devi       | 56320.4 | HR         |
| 1002 | Abi        |  115320 | Operations |
| 1003 | Raja       | 86320.4 | HR         |
| 1004 | Thananya   | 80436.7 | Accounting |
| 1005 | Kanishka   | 67904.7 | HR         |
| 1006 | Dhayanithi | 87320.4 | Training   |
| 1007 | Surya      | 51300.5 | Testing    |
| 1008 | Sara       |  110300 | Training   |
| 1001 | Devi       | 56320.4 | HR         |
| 7000 | Yamini     |   53040 | HR         |
| 7001 | Bamini     |   93040 | HR         |
+------+------------+---------+------------+
11 rows in set (0.00 sec)

mysql> insert into emp2 values(70012,'harini',93040,'HR');
Query OK, 1 row affected (0.00 sec)

mysql> create table dummy999(eno int);
Query OK, 0 rows affected (0.03 sec)

mysql> #commit; =>this commit keyword is optional! Bcos already above DDL
mysql> #command commits all the previous uncommited transactions!
mysql> 
mysql> rollback;
Query OK, 0 rows affected (0.00 sec)

mysql> select * from emp2;
+-------+------------+---------+------------+
| eno   | ename      | salary  | dept       |
+-------+------------+---------+------------+
|  1001 | Devi       | 56320.4 | HR         |
|  1002 | Abi        |  115320 | Operations |
|  1003 | Raja       | 86320.4 | HR         |
|  1004 | Thananya   | 80436.7 | Accounting |
|  1005 | Kanishka   | 67904.7 | HR         |
|  1006 | Dhayanithi | 87320.4 | Training   |
|  1007 | Surya      | 51300.5 | Testing    |
|  1008 | Sara       |  110300 | Training   |
|  1001 | Devi       | 56320.4 | HR         |
|  7000 | Yamini     |   53040 | HR         |
|  7001 | Bamini     |   93040 | HR         |
| 70012 | harini     |   93040 | HR         |
+-------+------------+---------+------------+
12 rows in set (0.00 sec)

mysql> delete from emp2 where eno=70012;
Query OK, 1 row affected (0.00 sec)

mysql> select * from emp2;
+------+------------+---------+------------+
| eno  | ename      | salary  | dept       |
+------+------------+---------+------------+
| 1001 | Devi       | 56320.4 | HR         |
| 1002 | Abi        |  115320 | Operations |
| 1003 | Raja       | 86320.4 | HR         |
| 1004 | Thananya   | 80436.7 | Accounting |
| 1005 | Kanishka   | 67904.7 | HR         |
| 1006 | Dhayanithi | 87320.4 | Training   |
| 1007 | Surya      | 51300.5 | Testing    |
| 1008 | Sara       |  110300 | Training   |
| 1001 | Devi       | 56320.4 | HR         |
| 7000 | Yamini     |   53040 | HR         |
| 7001 | Bamini     |   93040 | HR         |
+------+------------+---------+------------+
11 rows in set (0.00 sec)

mysql> rollback;
Query OK, 0 rows affected (0.00 sec)

mysql> select * from emp2;
+-------+------------+---------+------------+
| eno   | ename      | salary  | dept       |
+-------+------------+---------+------------+
|  1001 | Devi       | 56320.4 | HR         |
|  1002 | Abi        |  115320 | Operations |
|  1003 | Raja       | 86320.4 | HR         |
|  1004 | Thananya   | 80436.7 | Accounting |
|  1005 | Kanishka   | 67904.7 | HR         |
|  1006 | Dhayanithi | 87320.4 | Training   |
|  1007 | Surya      | 51300.5 | Testing    |
|  1008 | Sara       |  110300 | Training   |
|  1001 | Devi       | 56320.4 | HR         |
|  7000 | Yamini     |   53040 | HR         |
|  7001 | Bamini     |   93040 | HR         |
| 70012 | harini     |   93040 | HR         |
+-------+------------+---------+------------+
12 rows in set (0.00 sec)

mysql>  #commit ==== DDL COMMAND 
mysql> 
mysql> select @@autocommit;
+--------------+
| @@autocommit |
+--------------+
|            0 |
+--------------+
1 row in set (0.00 sec)

mysql> set autocommit=TRUE;
Query OK, 0 rows affected (0.00 sec)

mysql> select @@autocommit;
+--------------+
| @@autocommit |
+--------------+
|            1 |
+--------------+
1 row in set (0.00 sec)

mysql> insert into emp2 values(712,'hari',93040,'HR');
Query OK, 1 row affected (0.00 sec)

mysql> rollback;
Query OK, 0 rows affected (0.00 sec)

mysql> select * from emp2;
+-------+------------+---------+------------+
| eno   | ename      | salary  | dept       |
+-------+------------+---------+------------+
|  1001 | Devi       | 56320.4 | HR         |
|  1002 | Abi        |  115320 | Operations |
|  1003 | Raja       | 86320.4 | HR         |
|  1004 | Thananya   | 80436.7 | Accounting |
|  1005 | Kanishka   | 67904.7 | HR         |
|  1006 | Dhayanithi | 87320.4 | Training   |
|  1007 | Surya      | 51300.5 | Testing    |
|  1008 | Sara       |  110300 | Training   |
|  1001 | Devi       | 56320.4 | HR         |
|  7000 | Yamini     |   53040 | HR         |
|  7001 | Bamini     |   93040 | HR         |
| 70012 | harini     |   93040 | HR         |
|   712 | hari       |   93040 | HR         |
+-------+------------+---------+------------+
13 rows in set (0.00 sec)

mysql>  select @@autocommit;
+--------------+
| @@autocommit |
+--------------+
|            1 |
+--------------+
1 row in set (0.00 sec)

mysql> insert into emp2 values(712,'hari',93040,'HR');
Query OK, 1 row affected (0.03 sec)

mysql> rollback;
Query OK, 0 rows affected (0.00 sec)

mysql> select * from emp2;
+-------+------------+---------+------------+
| eno   | ename      | salary  | dept       |
+-------+------------+---------+------------+
|  1001 | Devi       | 56320.4 | HR         |
|  1002 | Abi        |  115320 | Operations |
|  1003 | Raja       | 86320.4 | HR         |
|  1004 | Thananya   | 80436.7 | Accounting |
|  1005 | Kanishka   | 67904.7 | HR         |
|  1006 | Dhayanithi | 87320.4 | Training   |
|  1007 | Surya      | 51300.5 | Testing    |
|  1008 | Sara       |  110300 | Training   |
|  1001 | Devi       | 56320.4 | HR         |
|  7000 | Yamini     |   53040 | HR         |
|  7001 | Bamini     |   93040 | HR         |
| 70012 | harini     |   93040 | HR         |
|   712 | hari       |   93040 | HR         |
|   712 | hari       |   93040 | HR         |
+-------+------------+---------+------------+
14 rows in set (0.00 sec)

mysql> #1=>autocommit enabled, 0=>autocommit disabled
mysql> 
mysql>  select @@autocommit;
+--------------+
| @@autocommit |
+--------------+
|            1 |
+--------------+
1 row in set (0.00 sec)

mysql> update emp2 set salary=salary+1000;
Query OK, 14 rows affected (0.08 sec)
Rows matched: 14  Changed: 14  Warnings: 0

mysql> savepoint mysave;
Query OK, 0 rows affected (0.00 sec)

mysql> insert into emp2 values(716,'hasini',93040,'HR');
Query OK, 1 row affected (0.00 sec)

mysql> rollback to savepoint mysave;
ERROR 1305 (42000): SAVEPOINT mysave does not exist
mysql> set autocommit=0;
Query OK, 0 rows affected (0.00 sec)

mysql> select * from emp2;
+-------+------------+---------+------------+
| eno   | ename      | salary  | dept       |
+-------+------------+---------+------------+
|  1001 | Devi       | 57320.4 | HR         |
|  1002 | Abi        |  116320 | Operations |
|  1003 | Raja       | 87320.4 | HR         |
|  1004 | Thananya   | 81436.7 | Accounting |
|  1005 | Kanishka   | 68904.7 | HR         |
|  1006 | Dhayanithi | 88320.4 | Training   |
|  1007 | Surya      | 52300.5 | Testing    |
|  1008 | Sara       |  111300 | Training   |
|  1001 | Devi       | 57320.4 | HR         |
|  7000 | Yamini     |   54040 | HR         |
|  7001 | Bamini     |   94040 | HR         |
| 70012 | harini     |   94040 | HR         |
|   712 | hari       |   94040 | HR         |
|   712 | hari       |   94040 | HR         |
|   716 | hasini     |   93040 | HR         |
+-------+------------+---------+------------+
15 rows in set (0.00 sec)

mysql> delete from emp2 where eno=716;
Query OK, 1 row affected (0.00 sec)

mysql> savepoint mysave;
Query OK, 0 rows affected (0.00 sec)

mysql> insert into emp2 values(717,'suhasini',93040,'HR');
Query OK, 1 row affected (0.00 sec)

mysql> rollback to savepoint mysave;
Query OK, 0 rows affected (0.00 sec)

mysql> select * from emp2;
+-------+------------+---------+------------+
| eno   | ename      | salary  | dept       |
+-------+------------+---------+------------+
|  1001 | Devi       | 57320.4 | HR         |
|  1002 | Abi        |  116320 | Operations |
|  1003 | Raja       | 87320.4 | HR         |
|  1004 | Thananya   | 81436.7 | Accounting |
|  1005 | Kanishka   | 68904.7 | HR         |
|  1006 | Dhayanithi | 88320.4 | Training   |
|  1007 | Surya      | 52300.5 | Testing    |
|  1008 | Sara       |  111300 | Training   |
|  1001 | Devi       | 57320.4 | HR         |
|  7000 | Yamini     |   54040 | HR         |
|  7001 | Bamini     |   94040 | HR         |
| 70012 | harini     |   94040 | HR         |
|   712 | hari       |   94040 | HR         |
|   712 | hari       |   94040 | HR         |
+-------+------------+---------+------------+
14 rows in set (0.00 sec)

mysql> rollback;
Query OK, 0 rows affected (0.00 sec)

mysql> select * from emp2;
+-------+------------+---------+------------+
| eno   | ename      | salary  | dept       |
+-------+------------+---------+------------+
|  1001 | Devi       | 57320.4 | HR         |
|  1002 | Abi        |  116320 | Operations |
|  1003 | Raja       | 87320.4 | HR         |
|  1004 | Thananya   | 81436.7 | Accounting |
|  1005 | Kanishka   | 68904.7 | HR         |
|  1006 | Dhayanithi | 88320.4 | Training   |
|  1007 | Surya      | 52300.5 | Testing    |
|  1008 | Sara       |  111300 | Training   |
|  1001 | Devi       | 57320.4 | HR         |
|  7000 | Yamini     |   54040 | HR         |
|  7001 | Bamini     |   94040 | HR         |
| 70012 | harini     |   94040 | HR         |
|   712 | hari       |   94040 | HR         |
|   712 | hari       |   94040 | HR         |
|   716 | hasini     |   93040 | HR         |
+-------+------------+---------+------------+
15 rows in set (0.00 sec)

mysql> savepoint myhexa;
Query OK, 0 rows affected (0.00 sec)

mysql> insert into emp2 values(71,'suhasini',93040,'HR');
Query OK, 1 row affected (0.00 sec)

mysql> insert into emp2 values(72,'varshini',93040,'HR');
Query OK, 1 row affected (0.00 sec)

mysql> insert into emp2 values(73,'yash',93040,'HR');
Query OK, 1 row affected (0.00 sec)

mysql> rollback to savepoint myhexa;
Query OK, 0 rows affected (0.00 sec)

mysql> select * from emp2;
+-------+------------+---------+------------+
| eno   | ename      | salary  | dept       |
+-------+------------+---------+------------+
|  1001 | Devi       | 57320.4 | HR         |
|  1002 | Abi        |  116320 | Operations |
|  1003 | Raja       | 87320.4 | HR         |
|  1004 | Thananya   | 81436.7 | Accounting |
|  1005 | Kanishka   | 68904.7 | HR         |
|  1006 | Dhayanithi | 88320.4 | Training   |
|  1007 | Surya      | 52300.5 | Testing    |
|  1008 | Sara       |  111300 | Training   |
|  1001 | Devi       | 57320.4 | HR         |
|  7000 | Yamini     |   54040 | HR         |
|  7001 | Bamini     |   94040 | HR         |
| 70012 | harini     |   94040 | HR         |
|   712 | hari       |   94040 | HR         |
|   712 | hari       |   94040 | HR         |
|   716 | hasini     |   93040 | HR         |
+-------+------------+---------+------------+
15 rows in set (0.00 sec)

mysql> set autocommit=1;
Query OK, 0 rows affected (0.00 sec)

mysql> #1=>autocommit enabled, 0=>autocommit disabled
mysql> 
mysql> #Flow Control Functions
mysql> #The CASE..WHEN.THEN..END combination is like the if..else..elseif where conditions are given and the one that turns out TRUE executes its block of code.
mysql> #As soon as a condition is TRUE, further conditions are not tested. If none of the condition or "case" is True then the ELSE part value is returned.
mysql> 
mysql> select * from hexa_emps;
+------+------------+---------+------------+
| eno  | ename      | salary  | dept       |
+------+------------+---------+------------+
| 1001 | Devi       | 47320.4 | HR         |
| 1002 | Abi        |  106320 | Operations |
| 1003 | Raja       | 77320.4 | HR         |
| 1004 | Thananya   | 71436.7 | Accounting |
| 1005 | Kanishka   | 58904.7 | HR         |
| 1006 | Dhayanithi | 78320.4 | Training   |
| 1007 | Surya      | 42300.5 | Testing    |
| 1008 | Sara       |  101300 | Training   |
| 1001 | Devi       | 47320.4 | HR         |
| 8001 | Priya      |   67000 | Operations |
| 2201 | Sara       |   44288 | Operations |
| 2202 | Sanesh     |   90288 | Operations |
|  454 | Saravana   |    NULL | NULL       |
+------+------------+---------+------------+
13 rows in set (0.00 sec)

mysql> SELECT eno, ename,
    ->  
    -> CASE
    ->  
    -> WHEN salary >=40000 and salary <=70000
    ->  
    -> THEN  "Good Salary"
    ->  
    -> WHEN salary >=80000 and salary <= 100000
    ->  
    -> THEN  "Attractice Salary"
    ->  
    -> ELSE  "Ok"
    ->  
    -> END AS  "What Salary?"
    ->  
    -> FROM hexa_emps;
+------+------------+-------------------+
| eno  | ename      | What Salary?      |
+------+------------+-------------------+
| 1001 | Devi       | Good Salary       |
| 1002 | Abi        | Ok                |
| 1003 | Raja       | Ok                |
| 1004 | Thananya   | Ok                |
| 1005 | Kanishka   | Good Salary       |
| 1006 | Dhayanithi | Ok                |
| 1007 | Surya      | Good Salary       |
| 1008 | Sara       | Ok                |
| 1001 | Devi       | Good Salary       |
| 8001 | Priya      | Good Salary       |
| 2201 | Sara       | Good Salary       |
| 2202 | Sanesh     | Attractice Salary |
|  454 | Saravana   | Ok                |
+------+------------+-------------------+
13 rows in set (0.00 sec)

mysql> SELECT eno, ename,salary,
    -> CASE
    -> WHEN salary >=40000 and salary <=70000
    -> THEN  "Good Salary"
    -> WHEN salary >=80000 and salary <= 100000
    -> THEN  "Attractice Salary"
    -> ELSE  "Ok"
    -> END AS  "What Salary?"
    -> FROM hexa_emps;
+------+------------+---------+-------------------+
| eno  | ename      | salary  | What Salary?      |
+------+------------+---------+-------------------+
| 1001 | Devi       | 47320.4 | Good Salary       |
| 1002 | Abi        |  106320 | Ok                |
| 1003 | Raja       | 77320.4 | Ok                |
| 1004 | Thananya   | 71436.7 | Ok                |
| 1005 | Kanishka   | 58904.7 | Good Salary       |
| 1006 | Dhayanithi | 78320.4 | Ok                |
| 1007 | Surya      | 42300.5 | Good Salary       |
| 1008 | Sara       |  101300 | Ok                |
| 1001 | Devi       | 47320.4 | Good Salary       |
| 8001 | Priya      |   67000 | Good Salary       |
| 2201 | Sara       |   44288 | Good Salary       |
| 2202 | Sanesh     |   90288 | Attractice Salary |
|  454 | Saravana   |    NULL | Ok                |
+------+------------+---------+-------------------+
13 rows in set (0.00 sec)

mysql> select * from hexa_emps;
+------+------------+---------+------------+
| eno  | ename      | salary  | dept       |
+------+------------+---------+------------+
| 1001 | Devi       | 47320.4 | HR         |
| 1002 | Abi        |  106320 | Operations |
| 1003 | Raja       | 77320.4 | HR         |
| 1004 | Thananya   | 71436.7 | Accounting |
| 1005 | Kanishka   | 58904.7 | HR         |
| 1006 | Dhayanithi | 78320.4 | Training   |
| 1007 | Surya      | 42300.5 | Testing    |
| 1008 | Sara       |  101300 | Training   |
| 1001 | Devi       | 47320.4 | HR         |
| 8001 | Priya      |   67000 | Operations |
| 2201 | Sara       |   44288 | Operations |
| 2202 | Sanesh     |   90288 | Operations |
|  454 | Saravana   |    NULL | NULL       |
+------+------------+---------+------------+
13 rows in set (0.00 sec)

mysql> UPDATE hexa_emps SET salary = 
    -> CASE
    ->      WHEN dept = 'HR' THEN salary=salary+10000
    ->      WHEN dept = 'Operations' THEN salary=salary+8000
    ->      WHEN dept='Training' THEN salary=salary+7000
    ->      END
    ->  WHERE eno  in (1001,1002,1004,1008,1007);
Query OK, 6 rows affected (0.00 sec)
Rows matched: 6  Changed: 6  Warnings: 0

mysql> select * from hexa_emps;
+------+------------+---------+------------+
| eno  | ename      | salary  | dept       |
+------+------------+---------+------------+
| 1001 | Devi       |       0 | HR         |
| 1002 | Abi        |       0 | Operations |
| 1003 | Raja       | 77320.4 | HR         |
| 1004 | Thananya   |    NULL | Accounting |
| 1005 | Kanishka   | 58904.7 | HR         |
| 1006 | Dhayanithi | 78320.4 | Training   |
| 1007 | Surya      |    NULL | Testing    |
| 1008 | Sara       |       0 | Training   |
| 1001 | Devi       |       0 | HR         |
| 8001 | Priya      |   67000 | Operations |
| 2201 | Sara       |   44288 | Operations |
| 2202 | Sanesh     |   90288 | Operations |
|  454 | Saravana   |    NULL | NULL       |
+------+------------+---------+------------+
13 rows in set (0.00 sec)

mysql> rollback;
Query OK, 0 rows affected (0.00 sec)

mysql> select * from hexa_emps;
+------+------------+---------+------------+
| eno  | ename      | salary  | dept       |
+------+------------+---------+------------+
| 1001 | Devi       |       0 | HR         |
| 1002 | Abi        |       0 | Operations |
| 1003 | Raja       | 77320.4 | HR         |
| 1004 | Thananya   |    NULL | Accounting |
| 1005 | Kanishka   | 58904.7 | HR         |
| 1006 | Dhayanithi | 78320.4 | Training   |
| 1007 | Surya      |    NULL | Testing    |
| 1008 | Sara       |       0 | Training   |
| 1001 | Devi       |       0 | HR         |
| 8001 | Priya      |   67000 | Operations |
| 2201 | Sara       |   44288 | Operations |
| 2202 | Sanesh     |   90288 | Operations |
|  454 | Saravana   |    NULL | NULL       |
+------+------------+---------+------------+
13 rows in set (0.00 sec)

mysql> update hexa_emps set salary=salary+100000;
Query OK, 10 rows affected (0.00 sec)
Rows matched: 13  Changed: 10  Warnings: 0

mysql> select * from hexa_emps;
+------+------------+--------+------------+
| eno  | ename      | salary | dept       |
+------+------------+--------+------------+
| 1001 | Devi       | 100000 | HR         |
| 1002 | Abi        | 100000 | Operations |
| 1003 | Raja       | 177320 | HR         |
| 1004 | Thananya   |   NULL | Accounting |
| 1005 | Kanishka   | 158905 | HR         |
| 1006 | Dhayanithi | 178320 | Training   |
| 1007 | Surya      |   NULL | Testing    |
| 1008 | Sara       | 100000 | Training   |
| 1001 | Devi       | 100000 | HR         |
| 8001 | Priya      | 167000 | Operations |
| 2201 | Sara       | 144288 | Operations |
| 2202 | Sanesh     | 190288 | Operations |
|  454 | Saravana   |   NULL | NULL       |
+------+------------+--------+------------+
13 rows in set (0.00 sec)

mysql> UPDATE hexa_emps SET salary = 
    -> CASE
    ->      WHEN dept = 'HR' THEN salary+10000
    ->      WHEN dept = 'Operations' THEN salary+8000
    ->      WHEN dept='Training' THEN salary+7000
    ->      END
    ->  WHERE eno  in (1001,1002,1004,1008,1007);
Query OK, 4 rows affected (0.00 sec)
Rows matched: 6  Changed: 4  Warnings: 0

mysql> select * from hexa_emps;
+------+------------+--------+------------+
| eno  | ename      | salary | dept       |
+------+------------+--------+------------+
| 1001 | Devi       | 110000 | HR         |
| 1002 | Abi        | 108000 | Operations |
| 1003 | Raja       | 177320 | HR         |
| 1004 | Thananya   |   NULL | Accounting |
| 1005 | Kanishka   | 158905 | HR         |
| 1006 | Dhayanithi | 178320 | Training   |
| 1007 | Surya      |   NULL | Testing    |
| 1008 | Sara       | 107000 | Training   |
| 1001 | Devi       | 110000 | HR         |
| 8001 | Priya      | 167000 | Operations |
| 2201 | Sara       | 144288 | Operations |
| 2202 | Sanesh     | 190288 | Operations |
|  454 | Saravana   |   NULL | NULL       |
+------+------------+--------+------------+
13 rows in set (0.00 sec)

mysql> #ISNULL()	Helps us to replace NULL values with the desired value. 
mysql> select eno,salary,isnull(salary)"NULL?" from hexa_emps;
+------+--------+-------+
| eno  | salary | NULL? |
+------+--------+-------+
| 1001 | 110000 |     0 |
| 1002 | 108000 |     0 |
| 1003 | 177320 |     0 |
| 1004 |   NULL |     1 |
| 1005 | 158905 |     0 |
| 1006 | 178320 |     0 |
| 1007 |   NULL |     1 |
| 1008 | 107000 |     0 |
| 1001 | 110000 |     0 |
| 8001 | 167000 |     0 |
| 2201 | 144288 |     0 |
| 2202 | 190288 |     0 |
|  454 |   NULL |     1 |
+------+--------+-------+
13 rows in set (0.00 sec)

mysql> #NULL values are converted to 1 and non NULL values are converted to 0.
mysql> 
mysql> select isnull("Thananya");
+--------------------+
| isnull("Thananya") |
+--------------------+
|                  0 |
+--------------------+
1 row in set (0.00 sec)

mysql> select isnull(null);
+--------------+
| isnull(null) |
+--------------+
|            1 |
+--------------+
1 row in set (0.00 sec)

mysql> select isnull(25);
+------------+
| isnull(25) |
+------------+
|          0 |
+------------+
1 row in set (0.00 sec)

mysql> select * from hexa_emps;
+------+------------+--------+------------+
| eno  | ename      | salary | dept       |
+------+------------+--------+------------+
| 1001 | Devi       | 110000 | HR         |
| 1002 | Abi        | 108000 | Operations |
| 1003 | Raja       | 177320 | HR         |
| 1004 | Thananya   |   NULL | Accounting |
| 1005 | Kanishka   | 158905 | HR         |
| 1006 | Dhayanithi | 178320 | Training   |
| 1007 | Surya      |   NULL | Testing    |
| 1008 | Sara       | 107000 | Training   |
| 1001 | Devi       | 110000 | HR         |
| 8001 | Priya      | 167000 | Operations |
| 2201 | Sara       | 144288 | Operations |
| 2202 | Sanesh     | 190288 | Operations |
|  454 | Saravana   |   NULL | NULL       |
+------+------------+--------+------------+
13 rows in set (0.00 sec)

mysql> select eno,ename,salary,if(isnull(salary)=1,'N/A',salary)
    -> as SalaryStatus from hexa_emps;
+------+------------+--------+--------------+
| eno  | ename      | salary | SalaryStatus |
+------+------------+--------+--------------+
| 1001 | Devi       | 110000 | 110000       |
| 1002 | Abi        | 108000 | 108000       |
| 1003 | Raja       | 177320 | 177320       |
| 1004 | Thananya   |   NULL | N/A          |
| 1005 | Kanishka   | 158905 | 158905       |
| 1006 | Dhayanithi | 178320 | 178320       |
| 1007 | Surya      |   NULL | N/A          |
| 1008 | Sara       | 107000 | 107000       |
| 1001 | Devi       | 110000 | 110000       |
| 8001 | Priya      | 167000 | 167000       |
| 2201 | Sara       | 144288 | 144288       |
| 2202 | Sanesh     | 190288 | 190288       |
|  454 | Saravana   |   NULL | N/A          |
+------+------------+--------+--------------+
13 rows in set (0.00 sec)

mysql> #The MySQL IFNULL() function is used to return a specified value if the expression is NULL. If the expression is not NULL, IFNULL() returns the expression.
mysql> 
mysql> select ifnull(500,300);
+-----------------+
| ifnull(500,300) |
+-----------------+
|             500 |
+-----------------+
1 row in set (0.00 sec)

mysql> select ifnull('Janani','Hari');
+-------------------------+
| ifnull('Janani','Hari') |
+-------------------------+
| Janani                  |
+-------------------------+
1 row in set (0.00 sec)

mysql> select ifnull(null,'Hello');
+----------------------+
| ifnull(null,'Hello') |
+----------------------+
| Hello                |
+----------------------+
1 row in set (0.00 sec)

mysql> select * from hexa_emps;
+------+------------+--------+------------+
| eno  | ename      | salary | dept       |
+------+------------+--------+------------+
| 1001 | Devi       | 110000 | HR         |
| 1002 | Abi        | 108000 | Operations |
| 1003 | Raja       | 177320 | HR         |
| 1004 | Thananya   |   NULL | Accounting |
| 1005 | Kanishka   | 158905 | HR         |
| 1006 | Dhayanithi | 178320 | Training   |
| 1007 | Surya      |   NULL | Testing    |
| 1008 | Sara       | 107000 | Training   |
| 1001 | Devi       | 110000 | HR         |
| 8001 | Priya      | 167000 | Operations |
| 2201 | Sara       | 144288 | Operations |
| 2202 | Sanesh     | 190288 | Operations |
|  454 | Saravana   |   NULL | NULL       |
+------+------------+--------+------------+
13 rows in set (0.00 sec)

mysql> select eno,ename,salary,ifnull(salary,'N/A') as 'Verify?'
    -> ,ifnull(dept,' NOT ASSIGNED ') as 'ProjStatus'
    -> from hexa_emps;
+------+------------+--------+---------+----------------+
| eno  | ename      | salary | Verify? | ProjStatus     |
+------+------------+--------+---------+----------------+
| 1001 | Devi       | 110000 | 110000  | HR             |
| 1002 | Abi        | 108000 | 108000  | Operations     |
| 1003 | Raja       | 177320 | 177320  | HR             |
| 1004 | Thananya   |   NULL | N/A     | Accounting     |
| 1005 | Kanishka   | 158905 | 158905  | HR             |
| 1006 | Dhayanithi | 178320 | 178320  | Training       |
| 1007 | Surya      |   NULL | N/A     | Testing        |
| 1008 | Sara       | 107000 | 107000  | Training       |
| 1001 | Devi       | 110000 | 110000  | HR             |
| 8001 | Priya      | 167000 | 167000  | Operations     |
| 2201 | Sara       | 144288 | 144288  | Operations     |
| 2202 | Sanesh     | 190288 | 190288  | Operations     |
|  454 | Saravana   |   NULL | N/A     |  NOT ASSIGNED  |
+------+------------+--------+---------+----------------+
13 rows in set (0.00 sec)

mysql>  #coalesce function:: returns the first non-null value
mysql>  #from the series
mysql> 
mysql> select coalesce(null,null,'devi','abi',null,'rajan');
+-----------------------------------------------+
| coalesce(null,null,'devi','abi',null,'rajan') |
+-----------------------------------------------+
| devi                                          |
+-----------------------------------------------+
1 row in set (0.00 sec)

mysql> select coalesce('abi',null,null,null,'rajan');
+----------------------------------------+
| coalesce('abi',null,null,null,'rajan') |
+----------------------------------------+
| abi                                    |
+----------------------------------------+
1 row in set (0.00 sec)

mysql> create table contacts_off(eno int,mobno int,
    ->  landline int,officeno int);
Query OK, 0 rows affected (0.03 sec)

mysql> insert into contacts_off values(1,444,66,777);
Query OK, 1 row affected (0.01 sec)

mysql>  insert into contacts_off values(2,null,null,777);
Query OK, 1 row affected (0.00 sec)

mysql>  insert into contacts_off values(3,899,null,null);
Query OK, 1 row affected (0.00 sec)

mysql> insert into contacts_off values(4,899,862,null);
Query OK, 1 row affected (0.02 sec)

mysql>  insert into contacts_off values(5,null,822,null);
Query OK, 1 row affected (0.00 sec)

mysql> insert into contacts_off values(6,null,null,1999);
Query OK, 1 row affected (0.00 sec)

mysql> select * from contacts_off;
+------+-------+----------+----------+
| eno  | mobno | landline | officeno |
+------+-------+----------+----------+
|    1 |   444 |       66 |      777 |
|    2 |  NULL |     NULL |      777 |
|    3 |   899 |     NULL |     NULL |
|    4 |   899 |      862 |     NULL |
|    5 |  NULL |      822 |     NULL |
|    6 |  NULL |     NULL |     1999 |
+------+-------+----------+----------+
6 rows in set (0.00 sec)

mysql> select eno,coalesce(mobno,landline,officeno) from contacts_off;
+------+-----------------------------------+
| eno  | coalesce(mobno,landline,officeno) |
+------+-----------------------------------+
|    1 |                               444 |
|    2 |                               777 |
|    3 |                               899 |
|    4 |                               899 |
|    5 |                               822 |
|    6 |                              1999 |
+------+-----------------------------------+
6 rows in set (0.00 sec)

mysql> insert into contacts_off values(5,null,null,null);
Query OK, 1 row affected (0.00 sec)

mysql> select eno,coalesce(mobno,landline,officeno) from contacts_off;
+------+-----------------------------------+
| eno  | coalesce(mobno,landline,officeno) |
+------+-----------------------------------+
|    1 |                               444 |
|    2 |                               777 |
|    3 |                               899 |
|    4 |                               899 |
|    5 |                               822 |
|    6 |                              1999 |
|    5 |                              NULL |
+------+-----------------------------------+
7 rows in set (0.00 sec)

mysql> #COALESCE has over ISNULL is that it supports more than two inputs, whereas ISNULL supports only two.
mysql> 
mysql> #ISNULL uses the data type of the first parameter, COALESCE follows the CASE expression rules and returns the data type of value with the highest precedence.
mysql> 
mysql> notee;














































Sample table: salesman

salesman_id |    name    |   city   | commission

1.Write a SQL statement to display all the information of all salesmen. 
Query : select * from salesman;

2.Write a SQL statement to display specific columns like name and commission for all the salesmen.
Query : select name,commision from salesman;

3.Write a SQL statement to display names and city of salesman, who belongs to the city of Paris.
Query : select name,city from salesman where city = 'Paris';

4.Write a SQL statement to display salesman_id, name, city and commission who gets the commission within the range more than 0.10% and less than 0.12%.
Query : select * from salesman where commission between 0.10 and 0.12;

============================================

1.Write a SQL statement to create a simple table countries including columns country_id,country_name and region_id.
Query : create table countries(country_id int,country_name varchar(15),region_id int);

2.Write a SQL statement to create the structure of a table dup_countries similar to countries.
Query : create table dup_countries like countries;

3.Write a SQL statement to create a duplicate copy of countries table including structure and data by name dup_countries.
Query : create table dup_countries select * from countries;

4.Write a SQL statement to insert NULL values against region_id column for a row of countries table.
Query : insert into countries('1221','India', null);

5.Write a SQL statement to insert 3 rows by a single insert statement.
Query : insert into countries values(1222,'NewYork',2221),(1223,'London',3221),(1224,'New Zealand',4221);

==================================
orders::::

ord_no      purch_amt   ord_date    customer_id  salesman_id
70001       150.5       2012-10-05  3005         5002
70009       270.65      2012-09-10  3001         5005
70002       65.26       2012-10-05  3002         5001
70004       110.5       2012-08-17  3009         5003
70007       948.5       2012-09-10  3005         5002
70005       2400.6      2012-07-27  3007         5001
70008       5760        2012-09-10  3002         5001
70010       1983.43     2012-10-10  3004         5006
70003       2480.4      2012-10-10  3009         5003
70012       250.45      2012-06-27  3008         5002
70011       75.29       2012-08-17  3003         5007
70013       3045.6      2012-04-25  3002         5001


1.Write a SQL statement to find the total purchase amount of all orders.
Query: select sum(purch_amt) from orders;

2.Write a SQL statement to find the average purchase amount of all orders.
Query: select avg(purch_amt) from orders;

3.Write a SQL statement to find the number of salesmen currently listing for all of their customers. 
Query : select distinct salesman_id from orders;

4.Write a SQL statement to get the maximum purchase amount of all the orders.
Query : select max(purch_amt) from orders;
 
5.Write a SQL statement to get the minimum purchase amount of all the orders.
Query : select max(purch_amt) from orders;
 
6.Write a SQL statement to find the highest purchase amount ordered by the each customer with their ID and highest purchase amount.
Query : select customer_id,max(purch_amt) from orders group by customer_id;
 
7.Write a SQL statement to find the highest purchase amount on a date '2012-08-17' for each salesman with their ID.
Query: select salesman_id,max(purch_amt) from orders group by salesman_id having ord_date='2012-08-17';

8.Write a SQL statement to find the highest purchase amount with their ID, for only those customers whose ID is within the range 3002 and 3007. 
Query : select customer_id,max(purch_amt) from orders group by customer_id having customer_id between 3002 and 3007;

9.Write a query to filter all those orders with all information which purchase amount value is within the range 500 and 4000 except those orders of purchase amount value 948.50 and 1983.43.
Query : select * from orders where purch_amt between 500 and 4000 and purch_amt not in(948.50,1983.43);

Write a query to sort out those customers with all information whose ID value is within any of 3007, 3008 and 3009.
Query : select * from orders where customer_id in(3007,3008,3009);

___________________________________________________________________________________________________________________________________________________________________


salesman::::

salesman_id |    name    |   city   | commission 
-------------+------------+----------+------------
        5001 | James Hoog | New York |       0.15
        5002 | Nail Knite | Paris    |       0.13
        5005 | Pit Alex   | London   |       0.11
        5006 | Mc Lyon    | Paris    |       0.14
        5007 | Paul Adam  | Rome     |       0.13
        5003 | Lauson Hen | San Jose |       0.12


1.Write a SQL statement to find those salesmen with all information who come from the city either Paris or Rome.   
Query : select * from salesman where city in('Paris','Rome');

2.Write a query to produce a list of salesman_id, name, city and commision of each salesman who live in cities other than Paris and Rome.
Query : select * from salesman where city not in('Paris','Rome');

=====================================================================

Table Structure: COURSE
CourseID  Number(4) – Primary Key
CourseName  Varchar2(20)
Duration Number
Fees Number(7,2)

Table Structure: STUDENT
StudId Number(4) – Primary Key
FirstName Varchar2(20)
LastName Varchar2(20)
Street Varchar2(20)
City Varchar2(20)
DOB Date

Table Structure:REGISTRATION
CourseID Number(4) – Foreign Key
StudId Number(4) – Foreign Key
DOJ Date


1. Add a field – Age Number(2) to the student table
Query : alter table student add column age number(2);

2. Add a constraint in course table to check the fees entered is greater than zero.
Query : alter table course add constraint chk_fee check(fees>0);

3. Calculate the value of the age field using the DOB Field.
Query :select studId,FirstName,LastName,Street,City,DOB,Year(curdate())-Year(DOB) as Age from student;

4. Decrease the fees by Rs.500/- whose duration is lesser than or equal to 3 months
Query :update course set fees=fees-500 where duration<=3;

5. Delete the student record whose last name is David and the city is Chennai
Query : delete from student where LastName = 'David' and city='Chennai';

6. Display firstname, lastname and concatenate them to display as fullname from student table
Query : select concat(FirstName + ' ' + LastName) as FullName from student;

7. Display the details of course C++ from the course table.
Query : select C.courseID,C.CourseName,C.StudId,R.DOJ from Registration R join course C on R.CourseID = C.CourseID where C.CourseName='C++';

8. Display the details from the course table which has a fees of more than 4000.
Query : select * from course where fees>4000;

9. Display the details from the course table which has a duration of 2 to 4 months.
Query : select * from course where duration between 2 and 4;

10. Display the student details whose birthday lies in the months between apr and sep
Query : select * from students where month(DOB) between 'apr' and 'sep';

11. Display course details, which has duration of 2 months and has a fees of more than 3000.
Query : select * from course where duration = 2 and fees > 3000;

12. Display the details of the students whose Ids are 3002, 3004 and 3005 from student table.
Query: select * from student where studid in (3002,3004,3005);

13. Display the details from the student table who has lastname as Kumar
Query :select * from student where LastName = 'Kumar';

14. Display the details from student table whose firstname starts with A
Query : select * from student where FirstName like 'A%';

15. Display the details from the student who come from bangalore and lastname as kumar
Query : select * from student where LastName='Kumar' and city='bangalore';

16. Display the details from the student whose street name ends with nagar.
Query : select * from student where street like '% nagar';

17. Display the details of students Dileep and Abdul from the student table.
Query : select * from student where FirstName = 'Dileep' and 'abdul';

18. Display the details of eldest student.
Query : select * from student where DOB = (select max(DOB) from student);

19. Display the details of students whose id is other than 3004 and 3006 from student table.
Query : select * from student where studid not in(3004,3006);

20. Display maximum, minimum and average fees from course table.
Query : select max(Fees) 'Maximum',min(Fees) 'Minimum',avg(Fees) 'Average' from course; 

21. Display the total number of students from student table.
Query : select count(studId) 'Total Number of Students' from student;

22. Display the cities from student table and each city should be displayed only once.
Query : Select distinct city from student;

23. Display all the student details in the order of their dob is descending order.
Query : select * from student order by DOB desc;

24. Display total number of students who joined on 10-mar-2011.
Query : select count(DOJ) from registration where DOJ='2011-mar-19';

25. Display first name in uppercase, lastname is lower case, city in initcap
Query : Select upper(FirstName),lower(LastName),initcap(city) from student;

26.Display Total No of Students per Each course.
Query : select CourseID,count(StudID) from registration group by courseID;

27. Display student ids, who have joined for more than one course.
Query : select StudId,count(courseID) from registration group by StudID having count(courseID)>1

28. Display all students whose firstname is of 4 characters length.
Query : select * from student where FirstName like '____';


SUBQUERIES AND JOINS:

1. Display the course details whose fees is lesser than the maximum fees
Query :select * from Course where Fees < (select max(Fees) from Course);

2. Display the students who are elder than 'Balakrishnan'
Query : Select * from student where DOB <(select DOB from student where FirstName ='Balakrishnan');

3. Calculate the total fees collected from the student who are coming from city bangalore 
Query : select sum(fees) from student where city='Bangalore';

4. Display the student firstname and the coursename for each student
Query :select S.FirstName,C.CourseName from Course C join Registration R on C.courseID = R.CourseID join Student S on R.StudId = S.StudId;

5. Find the courses which has same duration
Query : select courseName,Duration from course group by 1,2 having count(*)>=2;

6. Display the completing date of each course using DOJ and duration
Query : select c.corseName,R.DoJ,adddate(R.DoJ, Interval -Duration Months) from Course c join Registration R on c.CourseID = R.courseID;

7. Display the second maximum fees
Query : select * from course group by fees order by fees desc limit 1,1;

8. Display the studentid and the total fees paid by each student
Query : select S.studentid, S.FirstName+''+S.LastName as Name,C.Fees from student S join Registration R on S.studID = R.studID join Course C on C.courseID = R.courseID ;

9. Display the courseid, coursename and total fees collected from each course
Query : select courseid,coursename,sum(fees) as Total Fees from course group by courseName;


=================================================================================================
1. For the following relation schema:
employee(employee-name, street, city)
works(employee-name, company-name, salary)
company(company-name, city)
manages(employee-name, manager-name,city)
Give an expression in SQL for each of the following queries:

a) Find the names, street address, and cities of residence for all employees who work for
'First Bank Corporation' and earn more than $10,000.

select * from employee where employee_name in (select employee_name from works where company_name='First Bank Corporation' and salary>10000);

b) Find the names of all employees in the database who live in the same cities as the
companies for which they work.

select employee_name from employee e,works w,company c where e.employee_name=w.employee_name and w.company_name=c.company_name and e.city=c.city;

c) Find the names of all employees in the database who live in the same cities and on the
same streets as do their managers.

select employee_name from employee e where e.street and e.city in(select street,city from employee,manages where employee_name=manager_name);

d) Find the names of all employees in the database who do not work for 'First Bank
Corporation'. Assume that all people work for exactly one company.

select employee_name from employee where employee_name not in(select employee_name from works where company_name='First Bank Corporation');

e) Find the names of all employees in the database who earn more than every employee
of 'Small Bank Corporation'. Assume that all people work for at most one company.

select employee_name from works where salary>(select max(salary) from works where company_name ='small Bank Corporation');

f) Assume that the companies may be located in several cities. Find all companies
located in every city in which 'Small Bank Corporation' is located.

select company_name from company where city in(select city from company where company_name='small Bank Corporation');

g) Find the names of all employees who earn more than the average salary of all
employees of their company. Assume that all people work for at most one company.

select * from works w where salary>(select avg(salary) from works where company_name=w.company_name);

h) Find the name of the company that has the smallest payroll.
select company_name from works where salary=(select min(salary) from works);
===========================================================================================================





































